{"version":3,"sources":["../bower_components/foundation-sites/dist/foundation.js","../bower_components/what-input/what-input.js","../assets/scripts/main.js"],"names":["_classCallCheck","instance","Constructor","TypeError","window","whatInput","eventBuffer","clearTimer","setInput","event","buffer","timer","setTimeout","bufferedEvent","unBufferedEvent","clearTimeout","eventKey","key","value","inputMap","type","pointerType","currentInput","eventTarget","target","eventTargetNode","nodeName","toLowerCase","eventTargetType","getAttribute","body","hasAttribute","keyMap","nonTypingInputs","indexOf","ignoreMap","switchInput","logKeys","string","setAttribute","inputTypes","push","keyCode","which","srcElement","pointerMap","activeKeys","unLogKeys","arrayPos","splice","bindEvents","document","PointerEvent","addEventListener","MSPointerEvent","mouseWheel","detectWheel","createElement","undefined","onmousewheel","keydown","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","9","13","16","27","32","37","38","39","40","2","3","4","Array","prototype","ask","keys","types","set","$","functionName","fn","Function","name","funcNameRegex","results","exec","toString","length","trim","constructor","parseValue","str","test","isNaN","parseFloat","hyphenate","replace","FOUNDATION_VERSION","Foundation","version","_plugins","_uuids","rtl","attr","plugin","className","attrName","this","registerPlugin","pluginName","uuid","GetYoDigits","$element","data","trigger","unregisterPlugin","removeAttr","removeData","prop","reInit","plugins","isJQ","each","_init","_this","fns","object","plgs","forEach","p","foundation","Object","err","console","error","namespace","Math","round","pow","random","slice","reflow","elem","i","$elem","find","addBack","$el","opts","warn","split","e","opt","map","el","er","getFnName","transitionend","end","transitions","transition","WebkitTransition","MozTransition","OTransition","t","style","triggerHandler","util","throttle","func","delay","context","args","arguments","apply","method","$meta","$noJS","appendTo","head","removeClass","MediaQuery","call","plugClass","ReferenceError","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","max","performance","start","bind","oThis","aArgs","fToBind","fNOP","fBound","concat","jQuery","ImNotTouchingYou","element","parent","lrOnly","tbOnly","top","bottom","left","right","eleDims","GetDimensions","parDims","offset","height","width","windowDims","allDirs","Error","rect","getBoundingClientRect","parRect","parentNode","winRect","winY","pageYOffset","winX","pageXOffset","parentDims","GetOffsets","anchor","position","vOffset","hOffset","isOverflow","$eleDims","$anchorDims","Box","getKeyCodes","kcs","k","kc","keyCodes","commands","Keyboard","parseKey","String","fromCharCode","toUpperCase","shiftKey","ctrlKey","altKey","handleKey","component","functions","cmds","command","commandList","ltr","extend","returnValue","handled","unhandled","findFocusable","filter","is","register","componentName","parseStyleToObject","styleObject","reduce","ret","param","parts","val","decodeURIComponent","hasOwnProperty","isArray","queries","current","namedQueries","self","extractedStyles","css","_getCurrentSize","_watcher","atLeast","size","query","get","matchMedia","matches","matched","on","newSize","currentSize","styleMedia","media","script","getElementsByTagName","info","id","insertBefore","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","Move","duration","move","ts","prog","anim","animate","isIn","animation","cb","finish","hide","reset","transitionDuration","initClass","activeClass","eq","initClasses","activeClasses","addClass","show","offsetWidth","one","Motion","animateIn","animateOut","Nest","Feather","menu","items","role","subMenuClass","subItemClass","hasSubClass","$item","$sub","children","aria-haspopup","aria-expanded","aria-label","data-submenu","aria-hidden","Burn","Timer","options","nameSpace","remain","isPaused","restart","infinite","pause","onImagesLoaded","images","singleImageLoaded","unloaded","complete","naturalWidth","onTouchEnd","removeEventListener","onTouchMove","isMoving","spotSwipe","preventDefault","dir","x","touches","pageX","dx","pageY","startPosX","elapsedTime","startTime","abs","moveThreshold","timeThreshold","onTouchStart","startPosY","init","enabled","documentElement","special","swipe","setup","noop","addTouch","handleTouch","simulatedEvent","changedTouches","first","eventTypes","touchmove","touchend","MouseEvent","bubbles","cancelable","screenX","screenY","clientX","clientY","createEvent","initMouseEvent","dispatchEvent","checkListeners","eventsListener","resizeListener","scrollListener","closemeListener","yetiBoxes","plugNames","listeners","join","off","pluginId","not","debounce","$nodes","MutationObserver","nodes","querySelectorAll","listeningElementsMutation","mutationRecordsList","$target","elementObserver","observe","attributes","childList","characterData","subtree","attributeFilter","prefixes","triggers","stopPropagation","fadeOut","load","IHearYou","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","Abide","defaults","$inputs","_events","_this2","resetForm","validateForm","validateOn","validateInput","liveValidate","isGood","checked","$error","siblings","formErrorSelector","$label","closest","$els","_this3","labels","findLabel","$formError","findFormError","labelErrorClass","formErrorClass","inputErrorClass","groupName","$labels","findRadioLabels","$formErrors","removeRadioErrorClasses","clearRequire","requiredCheck","validated","customValidator","validator","equalTo","validateRadio","validateText","matchValidation","validators","goodToGo","message","acc","noError","pattern","inputText","valid","patterns","RegExp","$group","required","_this4","clear","v","$form","removeErrorClasses","alpha","alpha_numeric","integer","number","card","cvv","email","url","domain","datetime","date","time","dateISO","month_day_year","day_month_year","color","Accordion","ENTER","SPACE","ARROW_DOWN","ARROW_UP","$tabs","idx","$content","linkId","aria-controls","aria-selected","aria-labelledby","$initActive","down","$tabContent","hasClass","allowAllClosed","up","toggle","next","$a","focus","multiExpand","previous","prev","firstTime","$currentActive","slideDown","slideSpeed","$aunts","canClose","slideUp","stop","AccordionMenu","ARROW_RIGHT","ARROW_LEFT","ESCAPE","TAB","SHIFT_TAB","aria-multiselectable","multiOpen","$menuLinks","subId","isActive","initPanes","$submenu","$prevElement","$nextElement","$elements","min","parents","open","close","closeAll","hideAll","stopImmediatePropagation","parentsUntil","add","$menus","Drilldown","$submenuAnchors","$submenus","$menuItems","_prepareMenu","_keyboardEvents","$link","parentLink","clone","prependTo","wrap","tabindex","$menu","$back","prepend","backButton","_back","$wrapper","wrapper","_getMaxDims","_show","closeOnClick","$body","contains","_hideAll","_hide","blur","result","numOfElems","unwrap","remove","Dropdown","$id","$anchor","data-is-focus","data-yeti-box","positionClass","getPositionClass","counter","usedPositions","data-resize","verticalPosition","match","horizontalPosition","classChanged","direction","_reposition","_setPosition","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","resizeme.zf.trigger","hover","timeout","hoverDelay","hoverPane","visibleFocusableElements","tab_forward","trapFocus","tab_backward","autoFocus","$focusable","_addBodyHandler","curPositionClass","DropdownMenu","subs","verticalClass","rightClass","alignment","changed","hasTouch","ontouchstart","parClass","handleClickFn","hasSub","hasClicked","clickOpen","forceFollow","disableHover","autoclose","closingTime","isTab","index","nextSibling","prevSibling","openSub","closeSub","$sibs","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","Equalizer","eqId","$watched","hasNested","isNested","isOn","_bindHandler","onResizeMeBound","_onResizeMe","onPostEqualizedBound","_onPostEqualized","tooSmall","imgs","equalizeOn","_checkMQ","_reflow",".zf.equalizer","_pauseEvents","equalizeOnStack","_isStacked","equalizeByRow","getHeightsByRow","applyHeightByRow","getHeights","applyHeight","heights","len","offsetHeight","lastElTopOffset","groups","group","elOffsetTop","j","ln","groupsILength","lenJ","Interchange","rules","currentPath","_addBreakpoints","_generateRules","rule","path","SPECIAL_QUERIES","rulesList","background-image","response","html","landscape","portrait","retina","Magellan","$targets","$links","data-scroll","$active","scrollPos","parseInt","points","winHeight","innerHeight","clientHeight","docHeight","scrollHeight","$tar","pt","threshold","targetPoint","animationDuration","easing","animationEasing","deepLinking","location","hash","scrollToLoc","calcPoints","_updateActive","scrollme.zf.trigger","arrival","loc","barOffset","scrollTop","curIdx","winPos","isDown","curVisible","history","pushState","OffCanvas","$lastTrigger","$triggers","$exiter","exiter","append","isRevealed","revealClass","revealOn","_setMQChecker","transitionTime","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","forceTop","_trapFocus","focusable","last","keycode","Orbit","containerClass","$slides","slideClass","$images","initActive","useMUI","_prepareForOrbit","bullets","_loadBullets","autoPlay","geoSync","accessible","$bullets","boxOfBullets","timerDelay","changeSlide","_setWrapperHeight","_setSlideHeight","temp","display","pauseOnHover","navButtons","$controls","nextClass","prevClass","$slide","isLTR","chosenSlide","$curSlide","$newSlide","$firstSlide","$lastSlide","dirIn","dirOut","infiniteWrap","_updateBullets","$oldBullet","span","detach","animInFromRight","animOutToRight","animInFromLeft","animOutToLeft","ResponsiveMenu","currentMq","currentPlugin","rulesTree","ruleSize","rulePlugin","MenuPlugins","isEmptyObject","_checkMediaQueries","matchedMq","cssClass","destroy","dropdown","drilldown","accordion","ResponsiveToggle","targetID","$targetMenu","$toggler","_update","_updateMqHandler","toggleMenu","hideFor","iPhoneSniff","androidSniff","mobileSniff","Reveal","cached","mq","isMobile","fullScreen","overlay","$overlay","_makeOverlay","deepLink","outerWidth","outerHeight","margin","_updatePosition","_handleState","visibility","multipleOpened","animationIn","afterAnimationFocus","log","focusableElements","showDelay","originalScrollPos","_extraHandlers","closeOnEsc","finishUp","animationOut","hideDelay","resetOnClose","replaceState","title","pathname","btmOffsetPct","percent","frac","num","absPosition","$handle","clickPos","Slider","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","inputs","handles","$input","$fill","vertical","isDbl","disabled","disabledClass","binding","_setInitAttr","doubleSided","$handle2","$input2","_setHandlePos","initialStart","initialEnd","$hndl","noInvert","h2Val","step","h1Val","vert","hOrW","lOrT","handleDim","elemDim","pctOfBar","toFixed","pxToMove","movement","decimal","_setValues","dim","isLeftHndl","handlePct","handlePos","moveTime","changedDelay","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","hasVal","_adjustValue","eventOffset","barDim","windowScroll","scrollLeft","elemOffset","barXY","eventFromBar","offsetPct","firstHndlPos","secndHndlPos","prev_val","next_val","div","curHandle","_handleEvent","clickSelect","draggable","currentTarget","newValue","_$handle","oldValue","decrease","increase","decrease_fast","increase_fast","invertVertical","emCalc","em","fontSize","Sticky","$parent","wasWrapped","$container","container","wrapInner","stickyClass","scrollCount","checkEvery","isStuck","_parsePoints","_setSizes","_calc","reverse","topAnchor","btm","btmAnchor","pts","breaks","place","canStick","_pauseListeners","checkSizes","scroll","topPoint","bottomPoint","_setSticky","_removeSticky","stickTo","mrgn","notStuckTo","isTop","stickToTop","anchorPt","anchorHeight","elemHeight","topOrBottom","stickyOn","newElemWidth","comp","pdng","max-width","newContainerHeight","containerHeight","_setBreakPoints","mTop","marginTop","mBtm","marginBottom","Tabs","$tabTitles","linkClass","matchHeight","_setHeight","_addKeyHandler","_addClickHandler","_setHeightMqHandler","_handleTabChange","wrapOnKeys","$tabLink","$targetContent","$oldTab","idStr","panelClass","panel","Toggler","input","toggleClass","_updateARIA","Tooltip","isClick","elemId","_getPositionClass","tipText","template","_buildTemplate","aria-describedby","data-toggle","triggerClass","templateClasses","tooltipClass","$template","data-is-active","$tipDims","showOn","fadeIn","fadeInDuration","fadeOutDuration","isFocus","disableForTouch","touchCloseText","Sage","common","finalize","home","about_us","UTIL","fire","funcname","loadEvents","classnm","ready"],"mappings":"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","file":"main.js","sourcesContent":["!function ($) {\r\n\r\n  \"use strict\";\r\n\r\n  var FOUNDATION_VERSION = '6.2.3';\r\n\r\n  // Global Foundation object\r\n  // This is attached to the window, or used as a module for AMD/Browserify\r\n  var Foundation = {\r\n    version: FOUNDATION_VERSION,\r\n\r\n    /**\r\n     * Stores initialized plugins.\r\n     */\r\n    _plugins: {},\r\n\r\n    /**\r\n     * Stores generated unique ids for plugin instances\r\n     */\r\n    _uuids: [],\r\n\r\n    /**\r\n     * Returns a boolean for RTL support\r\n     */\r\n    rtl: function () {\r\n      return $('html').attr('dir') === 'rtl';\r\n    },\r\n    /**\r\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\r\n     * @param {Object} plugin - The constructor of the plugin.\r\n     */\r\n    plugin: function (plugin, name) {\r\n      // Object key to use when adding to global Foundation object\r\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\r\n      var className = name || functionName(plugin);\r\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\r\n      // Examples: data-reveal, data-off-canvas\r\n      var attrName = hyphenate(className);\r\n\r\n      // Add to the Foundation object and the plugins list (for reflowing)\r\n      this._plugins[attrName] = this[className] = plugin;\r\n    },\r\n    /**\r\n     * @function\r\n     * Populates the _uuids array with pointers to each individual plugin instance.\r\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\r\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\r\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\r\n     * @fires Plugin#init\r\n     */\r\n    registerPlugin: function (plugin, name) {\r\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\r\n      plugin.uuid = this.GetYoDigits(6, pluginName);\r\n\r\n      if (!plugin.$element.attr('data-' + pluginName)) {\r\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\r\n      }\r\n      if (!plugin.$element.data('zfPlugin')) {\r\n        plugin.$element.data('zfPlugin', plugin);\r\n      }\r\n      /**\r\n       * Fires when the plugin has initialized.\r\n       * @event Plugin#init\r\n       */\r\n      plugin.$element.trigger('init.zf.' + pluginName);\r\n\r\n      this._uuids.push(plugin.uuid);\r\n\r\n      return;\r\n    },\r\n    /**\r\n     * @function\r\n     * Removes the plugins uuid from the _uuids array.\r\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\r\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\r\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\r\n     * @fires Plugin#destroyed\r\n     */\r\n    unregisterPlugin: function (plugin) {\r\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\r\n\r\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\r\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\r\n      /**\r\n       * Fires when the plugin has been destroyed.\r\n       * @event Plugin#destroyed\r\n       */\r\n      .trigger('destroyed.zf.' + pluginName);\r\n      for (var prop in plugin) {\r\n        plugin[prop] = null; //clean up script to prep for garbage collection.\r\n      }\r\n      return;\r\n    },\r\n\r\n    /**\r\n     * @function\r\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\r\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\r\n     * @default If no argument is passed, reflow all currently active plugins.\r\n     */\r\n    reInit: function (plugins) {\r\n      var isJQ = plugins instanceof $;\r\n      try {\r\n        if (isJQ) {\r\n          plugins.each(function () {\r\n            $(this).data('zfPlugin')._init();\r\n          });\r\n        } else {\r\n          var type = typeof plugins,\r\n              _this = this,\r\n              fns = {\r\n            'object': function (plgs) {\r\n              plgs.forEach(function (p) {\r\n                p = hyphenate(p);\r\n                $('[data-' + p + ']').foundation('_init');\r\n              });\r\n            },\r\n            'string': function () {\r\n              plugins = hyphenate(plugins);\r\n              $('[data-' + plugins + ']').foundation('_init');\r\n            },\r\n            'undefined': function () {\r\n              this['object'](Object.keys(_this._plugins));\r\n            }\r\n          };\r\n          fns[type](plugins);\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      } finally {\r\n        return plugins;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * returns a random base-36 uid with namespacing\r\n     * @function\r\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\r\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\r\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\r\n     * @returns {String} - unique id\r\n     */\r\n    GetYoDigits: function (length, namespace) {\r\n      length = length || 6;\r\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\r\n    },\r\n    /**\r\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\r\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\r\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\r\n     */\r\n    reflow: function (elem, plugins) {\r\n\r\n      // If plugins is undefined, just grab everything\r\n      if (typeof plugins === 'undefined') {\r\n        plugins = Object.keys(this._plugins);\r\n      }\r\n      // If plugins is a string, convert it to an array with one item\r\n      else if (typeof plugins === 'string') {\r\n          plugins = [plugins];\r\n        }\r\n\r\n      var _this = this;\r\n\r\n      // Iterate through each plugin\r\n      $.each(plugins, function (i, name) {\r\n        // Get the current plugin\r\n        var plugin = _this._plugins[name];\r\n\r\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\r\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\r\n\r\n        // For each plugin found, initialize it\r\n        $elem.each(function () {\r\n          var $el = $(this),\r\n              opts = {};\r\n          // Don't double-dip on plugins\r\n          if ($el.data('zfPlugin')) {\r\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\r\n            return;\r\n          }\r\n\r\n          if ($el.attr('data-options')) {\r\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\r\n              var opt = e.split(':').map(function (el) {\r\n                return el.trim();\r\n              });\r\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\r\n            });\r\n          }\r\n          try {\r\n            $el.data('zfPlugin', new plugin($(this), opts));\r\n          } catch (er) {\r\n            console.error(er);\r\n          } finally {\r\n            return;\r\n          }\r\n        });\r\n      });\r\n    },\r\n    getFnName: functionName,\r\n    transitionend: function ($elem) {\r\n      var transitions = {\r\n        'transition': 'transitionend',\r\n        'WebkitTransition': 'webkitTransitionEnd',\r\n        'MozTransition': 'transitionend',\r\n        'OTransition': 'otransitionend'\r\n      };\r\n      var elem = document.createElement('div'),\r\n          end;\r\n\r\n      for (var t in transitions) {\r\n        if (typeof elem.style[t] !== 'undefined') {\r\n          end = transitions[t];\r\n        }\r\n      }\r\n      if (end) {\r\n        return end;\r\n      } else {\r\n        end = setTimeout(function () {\r\n          $elem.triggerHandler('transitionend', [$elem]);\r\n        }, 1);\r\n        return 'transitionend';\r\n      }\r\n    }\r\n  };\r\n\r\n  Foundation.util = {\r\n    /**\r\n     * Function for applying a debounce effect to a function call.\r\n     * @function\r\n     * @param {Function} func - Function to be called at end of timeout.\r\n     * @param {Number} delay - Time in ms to delay the call of `func`.\r\n     * @returns function\r\n     */\r\n    throttle: function (func, delay) {\r\n      var timer = null;\r\n\r\n      return function () {\r\n        var context = this,\r\n            args = arguments;\r\n\r\n        if (timer === null) {\r\n          timer = setTimeout(function () {\r\n            func.apply(context, args);\r\n            timer = null;\r\n          }, delay);\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  // TODO: consider not making this a jQuery function\r\n  // TODO: need way to reflow vs. re-initialize\r\n  /**\r\n   * The Foundation jQuery method.\r\n   * @param {String|Array} method - An action to perform on the current jQuery object.\r\n   */\r\n  var foundation = function (method) {\r\n    var type = typeof method,\r\n        $meta = $('meta.foundation-mq'),\r\n        $noJS = $('.no-js');\r\n\r\n    if (!$meta.length) {\r\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\r\n    }\r\n    if ($noJS.length) {\r\n      $noJS.removeClass('no-js');\r\n    }\r\n\r\n    if (type === 'undefined') {\r\n      //needs to initialize the Foundation object, or an individual plugin.\r\n      Foundation.MediaQuery._init();\r\n      Foundation.reflow(this);\r\n    } else if (type === 'string') {\r\n      //an individual method to invoke on a plugin or group of plugins\r\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\r\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\r\n\r\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\r\n        //make sure both the class and method exist\r\n        if (this.length === 1) {\r\n          //if there's only one, call it directly.\r\n          plugClass[method].apply(plugClass, args);\r\n        } else {\r\n          this.each(function (i, el) {\r\n            //otherwise loop through the jQuery collection and invoke the method on each\r\n            plugClass[method].apply($(el).data('zfPlugin'), args);\r\n          });\r\n        }\r\n      } else {\r\n        //error for no class or no method\r\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\r\n      }\r\n    } else {\r\n      //error for invalid argument type\r\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\r\n    }\r\n    return this;\r\n  };\r\n\r\n  window.Foundation = Foundation;\r\n  $.fn.foundation = foundation;\r\n\r\n  // Polyfill for requestAnimationFrame\r\n  (function () {\r\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\r\n      return new Date().getTime();\r\n    };\r\n\r\n    var vendors = ['webkit', 'moz'];\r\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\r\n      var vp = vendors[i];\r\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\r\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\r\n      var lastTime = 0;\r\n      window.requestAnimationFrame = function (callback) {\r\n        var now = Date.now();\r\n        var nextTime = Math.max(lastTime + 16, now);\r\n        return setTimeout(function () {\r\n          callback(lastTime = nextTime);\r\n        }, nextTime - now);\r\n      };\r\n      window.cancelAnimationFrame = clearTimeout;\r\n    }\r\n    /**\r\n     * Polyfill for performance.now, required by rAF\r\n     */\r\n    if (!window.performance || !window.performance.now) {\r\n      window.performance = {\r\n        start: Date.now(),\r\n        now: function () {\r\n          return Date.now() - this.start;\r\n        }\r\n      };\r\n    }\r\n  })();\r\n  if (!Function.prototype.bind) {\r\n    Function.prototype.bind = function (oThis) {\r\n      if (typeof this !== 'function') {\r\n        // closest thing possible to the ECMAScript 5\r\n        // internal IsCallable function\r\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n      }\r\n\r\n      var aArgs = Array.prototype.slice.call(arguments, 1),\r\n          fToBind = this,\r\n          fNOP = function () {},\r\n          fBound = function () {\r\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\r\n      };\r\n\r\n      if (this.prototype) {\r\n        // native functions don't have a prototype\r\n        fNOP.prototype = this.prototype;\r\n      }\r\n      fBound.prototype = new fNOP();\r\n\r\n      return fBound;\r\n    };\r\n  }\r\n  // Polyfill to get the name of a function in IE9\r\n  function functionName(fn) {\r\n    if (Function.prototype.name === undefined) {\r\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\r\n      var results = funcNameRegex.exec(fn.toString());\r\n      return results && results.length > 1 ? results[1].trim() : \"\";\r\n    } else if (fn.prototype === undefined) {\r\n      return fn.constructor.name;\r\n    } else {\r\n      return fn.prototype.constructor.name;\r\n    }\r\n  }\r\n  function parseValue(str) {\r\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\r\n    return str;\r\n  }\r\n  // Convert PascalCase to kebab-case\r\n  // Thank you: http://stackoverflow.com/a/8955580\r\n  function hyphenate(str) {\r\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n  }\r\n}(jQuery);\r\n'use strict';\r\n\r\n!function ($) {\r\n\r\n  Foundation.Box = {\r\n    ImNotTouchingYou: ImNotTouchingYou,\r\n    GetDimensions: GetDimensions,\r\n    GetOffsets: GetOffsets\r\n  };\r\n\r\n  /**\r\n   * Compares the dimensions of an element to a container and determines collision events with container.\r\n   * @function\r\n   * @param {jQuery} element - jQuery object to test for collisions.\r\n   * @param {jQuery} parent - jQuery object to use as bounding container.\r\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\r\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\r\n   * @default if no parent object passed, detects collisions with `window`.\r\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\r\n   */\r\n  function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\r\n    var eleDims = GetDimensions(element),\r\n        top,\r\n        bottom,\r\n        left,\r\n        right;\r\n\r\n    if (parent) {\r\n      var parDims = GetDimensions(parent);\r\n\r\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\r\n      top = eleDims.offset.top >= parDims.offset.top;\r\n      left = eleDims.offset.left >= parDims.offset.left;\r\n      right = eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left;\r\n    } else {\r\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\r\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\r\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\r\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\r\n    }\r\n\r\n    var allDirs = [bottom, top, left, right];\r\n\r\n    if (lrOnly) {\r\n      return left === right === true;\r\n    }\r\n\r\n    if (tbOnly) {\r\n      return top === bottom === true;\r\n    }\r\n\r\n    return allDirs.indexOf(false) === -1;\r\n  };\r\n\r\n  /**\r\n   * Uses native methods to return an object of dimension values.\r\n   * @function\r\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\r\n   * @returns {Object} - nested object of integer pixel values\r\n   * TODO - if element is window, return only those values.\r\n   */\r\n  function GetDimensions(elem, test) {\r\n    elem = elem.length ? elem[0] : elem;\r\n\r\n    if (elem === window || elem === document) {\r\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\r\n    }\r\n\r\n    var rect = elem.getBoundingClientRect(),\r\n        parRect = elem.parentNode.getBoundingClientRect(),\r\n        winRect = document.body.getBoundingClientRect(),\r\n        winY = window.pageYOffset,\r\n        winX = window.pageXOffset;\r\n\r\n    return {\r\n      width: rect.width,\r\n      height: rect.height,\r\n      offset: {\r\n        top: rect.top + winY,\r\n        left: rect.left + winX\r\n      },\r\n      parentDims: {\r\n        width: parRect.width,\r\n        height: parRect.height,\r\n        offset: {\r\n          top: parRect.top + winY,\r\n          left: parRect.left + winX\r\n        }\r\n      },\r\n      windowDims: {\r\n        width: winRect.width,\r\n        height: winRect.height,\r\n        offset: {\r\n          top: winY,\r\n          left: winX\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\r\n   * such as: Tooltip, Reveal, and Dropdown\r\n   * @function\r\n   * @param {jQuery} element - jQuery object for the element being positioned.\r\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\r\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\r\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\r\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\r\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\r\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\r\n   */\r\n  function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\r\n    var $eleDims = GetDimensions(element),\r\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\r\n\r\n    switch (position) {\r\n      case 'top':\r\n        return {\r\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\r\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\r\n        };\r\n        break;\r\n      case 'left':\r\n        return {\r\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\r\n          top: $anchorDims.offset.top\r\n        };\r\n        break;\r\n      case 'right':\r\n        return {\r\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\r\n          top: $anchorDims.offset.top\r\n        };\r\n        break;\r\n      case 'center top':\r\n        return {\r\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\r\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\r\n        };\r\n        break;\r\n      case 'center bottom':\r\n        return {\r\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\r\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\r\n        };\r\n        break;\r\n      case 'center left':\r\n        return {\r\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\r\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\r\n        };\r\n        break;\r\n      case 'center right':\r\n        return {\r\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\r\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\r\n        };\r\n        break;\r\n      case 'center':\r\n        return {\r\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\r\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\r\n        };\r\n        break;\r\n      case 'reveal':\r\n        return {\r\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\r\n          top: $eleDims.windowDims.offset.top + vOffset\r\n        };\r\n      case 'reveal full':\r\n        return {\r\n          left: $eleDims.windowDims.offset.left,\r\n          top: $eleDims.windowDims.offset.top\r\n        };\r\n        break;\r\n      case 'left bottom':\r\n        return {\r\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\r\n          top: $anchorDims.offset.top + $anchorDims.height\r\n        };\r\n        break;\r\n      case 'right bottom':\r\n        return {\r\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\r\n          top: $anchorDims.offset.top + $anchorDims.height\r\n        };\r\n        break;\r\n      default:\r\n        return {\r\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\r\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\r\n        };\r\n    }\r\n  }\r\n}(jQuery);\r\n/*******************************************\r\n *                                         *\r\n * This util was created by Marius Olbertz *\r\n * Please thank Marius on GitHub /owlbertz *\r\n * or the web http://www.mariusolbertz.de/ *\r\n *                                         *\r\n ******************************************/\r\n\r\n'use strict';\r\n\r\n!function ($) {\r\n\r\n  var keyCodes = {\r\n    9: 'TAB',\r\n    13: 'ENTER',\r\n    27: 'ESCAPE',\r\n    32: 'SPACE',\r\n    37: 'ARROW_LEFT',\r\n    38: 'ARROW_UP',\r\n    39: 'ARROW_RIGHT',\r\n    40: 'ARROW_DOWN'\r\n  };\r\n\r\n  var commands = {};\r\n\r\n  var Keyboard = {\r\n    keys: getKeyCodes(keyCodes),\r\n\r\n    /**\r\n     * Parses the (keyboard) event and returns a String that represents its key\r\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n     * @param {Event} event - the event generated by the event handler\r\n     * @return String key - String that represents the key pressed\r\n     */\r\n    parseKey: function (event) {\r\n      var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\r\n      if (event.shiftKey) key = 'SHIFT_' + key;\r\n      if (event.ctrlKey) key = 'CTRL_' + key;\r\n      if (event.altKey) key = 'ALT_' + key;\r\n      return key;\r\n    },\r\n\r\n\r\n    /**\r\n     * Handles the given (keyboard) event\r\n     * @param {Event} event - the event generated by the event handler\r\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\r\n     * @param {Objects} functions - collection of functions that are to be executed\r\n     */\r\n    handleKey: function (event, component, functions) {\r\n      var commandList = commands[component],\r\n          keyCode = this.parseKey(event),\r\n          cmds,\r\n          command,\r\n          fn;\r\n\r\n      if (!commandList) return console.warn('Component not defined!');\r\n\r\n      if (typeof commandList.ltr === 'undefined') {\r\n        // this component does not differentiate between ltr and rtl\r\n        cmds = commandList; // use plain list\r\n      } else {\r\n          // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\r\n          if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\r\n        }\r\n      command = cmds[keyCode];\r\n\r\n      fn = functions[command];\r\n      if (fn && typeof fn === 'function') {\r\n        // execute function  if exists\r\n        var returnValue = fn.apply();\r\n        if (functions.handled || typeof functions.handled === 'function') {\r\n          // execute function when event was handled\r\n          functions.handled(returnValue);\r\n        }\r\n      } else {\r\n        if (functions.unhandled || typeof functions.unhandled === 'function') {\r\n          // execute function when event was not handled\r\n          functions.unhandled();\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Finds all focusable elements within the given `$element`\r\n     * @param {jQuery} $element - jQuery object to search within\r\n     * @return {jQuery} $focusable - all focusable elements within `$element`\r\n     */\r\n    findFocusable: function ($element) {\r\n      return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\r\n        if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\r\n          return false;\r\n        } //only have visible elements and those that have a tabindex greater or equal 0\r\n        return true;\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns the component name name\r\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\r\n     * @return String componentName\r\n     */\r\n\r\n    register: function (componentName, cmds) {\r\n      commands[componentName] = cmds;\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Constants for easier comparing.\r\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\r\n   */\r\n  function getKeyCodes(kcs) {\r\n    var k = {};\r\n    for (var kc in kcs) {\r\n      k[kcs[kc]] = kcs[kc];\r\n    }return k;\r\n  }\r\n\r\n  Foundation.Keyboard = Keyboard;\r\n}(jQuery);\r\n'use strict';\r\n\r\n!function ($) {\r\n\r\n  // Default set of media queries\r\n  var defaultQueries = {\r\n    'default': 'only screen',\r\n    landscape: 'only screen and (orientation: landscape)',\r\n    portrait: 'only screen and (orientation: portrait)',\r\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\r\n  };\r\n\r\n  var MediaQuery = {\r\n    queries: [],\r\n\r\n    current: '',\r\n\r\n    /**\r\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\r\n     * @function\r\n     * @private\r\n     */\r\n    _init: function () {\r\n      var self = this;\r\n      var extractedStyles = $('.foundation-mq').css('font-family');\r\n      var namedQueries;\r\n\r\n      namedQueries = parseStyleToObject(extractedStyles);\r\n\r\n      for (var key in namedQueries) {\r\n        if (namedQueries.hasOwnProperty(key)) {\r\n          self.queries.push({\r\n            name: key,\r\n            value: 'only screen and (min-width: ' + namedQueries[key] + ')'\r\n          });\r\n        }\r\n      }\r\n\r\n      this.current = this._getCurrentSize();\r\n\r\n      this._watcher();\r\n    },\r\n\r\n\r\n    /**\r\n     * Checks if the screen is at least as wide as a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to check.\r\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\r\n     */\r\n    atLeast: function (size) {\r\n      var query = this.get(size);\r\n\r\n      if (query) {\r\n        return window.matchMedia(query).matches;\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Gets the media query of a breakpoint.\r\n     * @function\r\n     * @param {String} size - Name of the breakpoint to get.\r\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\r\n     */\r\n    get: function (size) {\r\n      for (var i in this.queries) {\r\n        if (this.queries.hasOwnProperty(i)) {\r\n          var query = this.queries[i];\r\n          if (size === query.name) return query.value;\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\r\n     * @function\r\n     * @private\r\n     * @returns {String} Name of the current breakpoint.\r\n     */\r\n    _getCurrentSize: function () {\r\n      var matched;\r\n\r\n      for (var i = 0; i < this.queries.length; i++) {\r\n        var query = this.queries[i];\r\n\r\n        if (window.matchMedia(query.value).matches) {\r\n          matched = query;\r\n        }\r\n      }\r\n\r\n      if (typeof matched === 'object') {\r\n        return matched.name;\r\n      } else {\r\n        return matched;\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\r\n     * @function\r\n     * @private\r\n     */\r\n    _watcher: function () {\r\n      var _this = this;\r\n\r\n      $(window).on('resize.zf.mediaquery', function () {\r\n        var newSize = _this._getCurrentSize(),\r\n            currentSize = _this.current;\r\n\r\n        if (newSize !== currentSize) {\r\n          // Change the current media query\r\n          _this.current = newSize;\r\n\r\n          // Broadcast the media query change on the window\r\n          $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  Foundation.MediaQuery = MediaQuery;\r\n\r\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\r\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\r\n  window.matchMedia || (window.matchMedia = function () {\r\n    'use strict';\r\n\r\n    // For browsers that support matchMedium api such as IE 9 and webkit\r\n\r\n    var styleMedia = window.styleMedia || window.media;\r\n\r\n    // For those that don't support matchMedium\r\n    if (!styleMedia) {\r\n      var style = document.createElement('style'),\r\n          script = document.getElementsByTagName('script')[0],\r\n          info = null;\r\n\r\n      style.type = 'text/css';\r\n      style.id = 'matchmediajs-test';\r\n\r\n      script.parentNode.insertBefore(style, script);\r\n\r\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\r\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\r\n\r\n      styleMedia = {\r\n        matchMedium: function (media) {\r\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\r\n\r\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\r\n          if (style.styleSheet) {\r\n            style.styleSheet.cssText = text;\r\n          } else {\r\n            style.textContent = text;\r\n          }\r\n\r\n          // Test if media query is true or false\r\n          return info.width === '1px';\r\n        }\r\n      };\r\n    }\r\n\r\n    return function (media) {\r\n      return {\r\n        matches: styleMedia.matchMedium(media || 'all'),\r\n        media: media || 'all'\r\n      };\r\n    };\r\n  }());\r\n\r\n  // Thank you: https://github.com/sindresorhus/query-string\r\n  function parseStyleToObject(str) {\r\n    var styleObject = {};\r\n\r\n    if (typeof str !== 'string') {\r\n      return styleObject;\r\n    }\r\n\r\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\r\n\r\n    if (!str) {\r\n      return styleObject;\r\n    }\r\n\r\n    styleObject = str.split('&').reduce(function (ret, param) {\r\n      var parts = param.replace(/\\+/g, ' ').split('=');\r\n      var key = parts[0];\r\n      var val = parts[1];\r\n      key = decodeURIComponent(key);\r\n\r\n      // missing `=` should be `null`:\r\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\r\n      val = val === undefined ? null : decodeURIComponent(val);\r\n\r\n      if (!ret.hasOwnProperty(key)) {\r\n        ret[key] = val;\r\n      } else if (Array.isArray(ret[key])) {\r\n        ret[key].push(val);\r\n      } else {\r\n        ret[key] = [ret[key], val];\r\n      }\r\n      return ret;\r\n    }, {});\r\n\r\n    return styleObject;\r\n  }\r\n\r\n  Foundation.MediaQuery = MediaQuery;\r\n}(jQuery);\r\n'use strict';\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Motion module.\r\n   * @module foundation.motion\r\n   */\r\n\r\n  var initClasses = ['mui-enter', 'mui-leave'];\r\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\r\n\r\n  var Motion = {\r\n    animateIn: function (element, animation, cb) {\r\n      animate(true, element, animation, cb);\r\n    },\r\n\r\n    animateOut: function (element, animation, cb) {\r\n      animate(false, element, animation, cb);\r\n    }\r\n  };\r\n\r\n  function Move(duration, elem, fn) {\r\n    var anim,\r\n        prog,\r\n        start = null;\r\n    // console.log('called');\r\n\r\n    function move(ts) {\r\n      if (!start) start = window.performance.now();\r\n      // console.log(start, ts);\r\n      prog = ts - start;\r\n      fn.apply(elem);\r\n\r\n      if (prog < duration) {\r\n        anim = window.requestAnimationFrame(move, elem);\r\n      } else {\r\n        window.cancelAnimationFrame(anim);\r\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\r\n      }\r\n    }\r\n    anim = window.requestAnimationFrame(move);\r\n  }\r\n\r\n  /**\r\n   * Animates an element in or out using a CSS transition class.\r\n   * @function\r\n   * @private\r\n   * @param {Boolean} isIn - Defines if the animation is in or out.\r\n   * @param {Object} element - jQuery or HTML object to animate.\r\n   * @param {String} animation - CSS class to use.\r\n   * @param {Function} cb - Callback to run when animation is finished.\r\n   */\r\n  function animate(isIn, element, animation, cb) {\r\n    element = $(element).eq(0);\r\n\r\n    if (!element.length) return;\r\n\r\n    var initClass = isIn ? initClasses[0] : initClasses[1];\r\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\r\n\r\n    // Set up the animation\r\n    reset();\r\n\r\n    element.addClass(animation).css('transition', 'none');\r\n\r\n    requestAnimationFrame(function () {\r\n      element.addClass(initClass);\r\n      if (isIn) element.show();\r\n    });\r\n\r\n    // Start the animation\r\n    requestAnimationFrame(function () {\r\n      element[0].offsetWidth;\r\n      element.css('transition', '').addClass(activeClass);\r\n    });\r\n\r\n    // Clean up the animation when it finishes\r\n    element.one(Foundation.transitionend(element), finish);\r\n\r\n    // Hides the element (for out animations), resets the element, and runs a callback\r\n    function finish() {\r\n      if (!isIn) element.hide();\r\n      reset();\r\n      if (cb) cb.apply(element);\r\n    }\r\n\r\n    // Resets transitions and removes motion-specific classes\r\n    function reset() {\r\n      element[0].style.transitionDuration = 0;\r\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\r\n    }\r\n  }\r\n\r\n  Foundation.Move = Move;\r\n  Foundation.Motion = Motion;\r\n}(jQuery);\r\n'use strict';\r\n\r\n!function ($) {\r\n\r\n  var Nest = {\r\n    Feather: function (menu) {\r\n      var type = arguments.length <= 1 || arguments[1] === undefined ? 'zf' : arguments[1];\r\n\r\n      menu.attr('role', 'menubar');\r\n\r\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\r\n          subMenuClass = 'is-' + type + '-submenu',\r\n          subItemClass = subMenuClass + '-item',\r\n          hasSubClass = 'is-' + type + '-submenu-parent';\r\n\r\n      menu.find('a:first').attr('tabindex', 0);\r\n\r\n      items.each(function () {\r\n        var $item = $(this),\r\n            $sub = $item.children('ul');\r\n\r\n        if ($sub.length) {\r\n          $item.addClass(hasSubClass).attr({\r\n            'aria-haspopup': true,\r\n            'aria-expanded': false,\r\n            'aria-label': $item.children('a:first').text()\r\n          });\r\n\r\n          $sub.addClass('submenu ' + subMenuClass).attr({\r\n            'data-submenu': '',\r\n            'aria-hidden': true,\r\n            'role': 'menu'\r\n          });\r\n        }\r\n\r\n        if ($item.parent('[data-submenu]').length) {\r\n          $item.addClass('is-submenu-item ' + subItemClass);\r\n        }\r\n      });\r\n\r\n      return;\r\n    },\r\n    Burn: function (menu, type) {\r\n      var items = menu.find('li').removeAttr('tabindex'),\r\n          subMenuClass = 'is-' + type + '-submenu',\r\n          subItemClass = subMenuClass + '-item',\r\n          hasSubClass = 'is-' + type + '-submenu-parent';\r\n\r\n      menu.find('*').removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\r\n\r\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\r\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\r\n      //           .removeAttr('data-submenu'));\r\n      // items.each(function(){\r\n      //   var $item = $(this),\r\n      //       $sub = $item.children('ul');\r\n      //   if($item.parent('[data-submenu]').length){\r\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\r\n      //   }\r\n      //   if($sub.length){\r\n      //     $item.removeClass('has-submenu');\r\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\r\n      //   }\r\n      // });\r\n    }\r\n  };\r\n\r\n  Foundation.Nest = Nest;\r\n}(jQuery);\r\n'use strict';\r\n\r\n!function ($) {\r\n\r\n  function Timer(elem, options, cb) {\r\n    var _this = this,\r\n        duration = options.duration,\r\n        //options is an object for easily adding features later.\r\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\r\n        remain = -1,\r\n        start,\r\n        timer;\r\n\r\n    this.isPaused = false;\r\n\r\n    this.restart = function () {\r\n      remain = -1;\r\n      clearTimeout(timer);\r\n      this.start();\r\n    };\r\n\r\n    this.start = function () {\r\n      this.isPaused = false;\r\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\r\n      clearTimeout(timer);\r\n      remain = remain <= 0 ? duration : remain;\r\n      elem.data('paused', false);\r\n      start = Date.now();\r\n      timer = setTimeout(function () {\r\n        if (options.infinite) {\r\n          _this.restart(); //rerun the timer.\r\n        }\r\n        cb();\r\n      }, remain);\r\n      elem.trigger('timerstart.zf.' + nameSpace);\r\n    };\r\n\r\n    this.pause = function () {\r\n      this.isPaused = true;\r\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\r\n      clearTimeout(timer);\r\n      elem.data('paused', true);\r\n      var end = Date.now();\r\n      remain = remain - (end - start);\r\n      elem.trigger('timerpaused.zf.' + nameSpace);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Runs a callback function when images are fully loaded.\r\n   * @param {Object} images - Image(s) to check if loaded.\r\n   * @param {Func} callback - Function to execute when image is fully loaded.\r\n   */\r\n  function onImagesLoaded(images, callback) {\r\n    var self = this,\r\n        unloaded = images.length;\r\n\r\n    if (unloaded === 0) {\r\n      callback();\r\n    }\r\n\r\n    images.each(function () {\r\n      if (this.complete) {\r\n        singleImageLoaded();\r\n      } else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\r\n        singleImageLoaded();\r\n      } else {\r\n        $(this).one('load', function () {\r\n          singleImageLoaded();\r\n        });\r\n      }\r\n    });\r\n\r\n    function singleImageLoaded() {\r\n      unloaded--;\r\n      if (unloaded === 0) {\r\n        callback();\r\n      }\r\n    }\r\n  }\r\n\r\n  Foundation.Timer = Timer;\r\n  Foundation.onImagesLoaded = onImagesLoaded;\r\n}(jQuery);\r\n//**************************************************\r\n//**Work inspired by multiple jquery swipe plugins**\r\n//**Done by Yohai Ararat ***************************\r\n//**************************************************\r\n(function ($) {\r\n\r\n\t$.spotSwipe = {\r\n\t\tversion: '1.0.0',\r\n\t\tenabled: 'ontouchstart' in document.documentElement,\r\n\t\tpreventDefault: false,\r\n\t\tmoveThreshold: 75,\r\n\t\ttimeThreshold: 200\r\n\t};\r\n\r\n\tvar startPosX,\r\n\t    startPosY,\r\n\t    startTime,\r\n\t    elapsedTime,\r\n\t    isMoving = false;\r\n\r\n\tfunction onTouchEnd() {\r\n\t\t//  alert(this);\r\n\t\tthis.removeEventListener('touchmove', onTouchMove);\r\n\t\tthis.removeEventListener('touchend', onTouchEnd);\r\n\t\tisMoving = false;\r\n\t}\r\n\r\n\tfunction onTouchMove(e) {\r\n\t\tif ($.spotSwipe.preventDefault) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\tif (isMoving) {\r\n\t\t\tvar x = e.touches[0].pageX;\r\n\t\t\tvar y = e.touches[0].pageY;\r\n\t\t\tvar dx = startPosX - x;\r\n\t\t\tvar dy = startPosY - y;\r\n\t\t\tvar dir;\r\n\t\t\telapsedTime = new Date().getTime() - startTime;\r\n\t\t\tif (Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\r\n\t\t\t\tdir = dx > 0 ? 'left' : 'right';\r\n\t\t\t}\r\n\t\t\t// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\r\n\t\t\t//   dir = dy > 0 ? 'down' : 'up';\r\n\t\t\t// }\r\n\t\t\tif (dir) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tonTouchEnd.call(this);\r\n\t\t\t\t$(this).trigger('swipe', dir).trigger('swipe' + dir);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onTouchStart(e) {\r\n\t\tif (e.touches.length == 1) {\r\n\t\t\tstartPosX = e.touches[0].pageX;\r\n\t\t\tstartPosY = e.touches[0].pageY;\r\n\t\t\tisMoving = true;\r\n\t\t\tstartTime = new Date().getTime();\r\n\t\t\tthis.addEventListener('touchmove', onTouchMove, false);\r\n\t\t\tthis.addEventListener('touchend', onTouchEnd, false);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction init() {\r\n\t\tthis.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\r\n\t}\r\n\r\n\tfunction teardown() {\r\n\t\tthis.removeEventListener('touchstart', onTouchStart);\r\n\t}\r\n\r\n\t$.event.special.swipe = { setup: init };\r\n\r\n\t$.each(['left', 'up', 'down', 'right'], function () {\r\n\t\t$.event.special['swipe' + this] = { setup: function () {\r\n\t\t\t\t$(this).on('swipe', $.noop);\r\n\t\t\t} };\r\n\t});\r\n})(jQuery);\r\n/****************************************************\r\n * Method for adding psuedo drag events to elements *\r\n ***************************************************/\r\n!function ($) {\r\n\t$.fn.addTouch = function () {\r\n\t\tthis.each(function (i, el) {\r\n\t\t\t$(el).bind('touchstart touchmove touchend touchcancel', function () {\r\n\t\t\t\t//we pass the original event object because the jQuery event\r\n\t\t\t\t//object is normalized to w3c specs and does not provide the TouchList\r\n\t\t\t\thandleTouch(event);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tvar handleTouch = function (event) {\r\n\t\t\tvar touches = event.changedTouches,\r\n\t\t\t    first = touches[0],\r\n\t\t\t    eventTypes = {\r\n\t\t\t\ttouchstart: 'mousedown',\r\n\t\t\t\ttouchmove: 'mousemove',\r\n\t\t\t\ttouchend: 'mouseup'\r\n\t\t\t},\r\n\t\t\t    type = eventTypes[event.type],\r\n\t\t\t    simulatedEvent;\r\n\r\n\t\t\tif ('MouseEvent' in window && typeof window.MouseEvent === 'function') {\r\n\t\t\t\tsimulatedEvent = new window.MouseEvent(type, {\r\n\t\t\t\t\t'bubbles': true,\r\n\t\t\t\t\t'cancelable': true,\r\n\t\t\t\t\t'screenX': first.screenX,\r\n\t\t\t\t\t'screenY': first.screenY,\r\n\t\t\t\t\t'clientX': first.clientX,\r\n\t\t\t\t\t'clientY': first.clientY\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsimulatedEvent = document.createEvent('MouseEvent');\r\n\t\t\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0 /*left*/, null);\r\n\t\t\t}\r\n\t\t\tfirst.target.dispatchEvent(simulatedEvent);\r\n\t\t};\r\n\t};\r\n}(jQuery);\r\n\r\n//**********************************\r\n//**From the jQuery Mobile Library**\r\n//**need to recreate functionality**\r\n//**and try to improve if possible**\r\n//**********************************\r\n\r\n/* Removing the jQuery function ****\r\n************************************\r\n\r\n(function( $, window, undefined ) {\r\n\r\n\tvar $document = $( document ),\r\n\t\t// supportTouch = $.mobile.support.touch,\r\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\r\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\r\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\r\n\r\n\t// setup new event shortcuts\r\n\t$.each( ( \"touchstart touchmove touchend \" +\r\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\r\n\r\n\t\t$.fn[ name ] = function( fn ) {\r\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\r\n\t\t};\r\n\r\n\t\t// jQuery < 1.8\r\n\t\tif ( $.attrFn ) {\r\n\t\t\t$.attrFn[ name ] = true;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\r\n\t\tvar originalType = event.type;\r\n\t\tevent.type = eventType;\r\n\t\tif ( bubble ) {\r\n\t\t\t$.event.trigger( event, undefined, obj );\r\n\t\t} else {\r\n\t\t\t$.event.dispatch.call( obj, event );\r\n\t\t}\r\n\t\tevent.type = originalType;\r\n\t}\r\n\r\n\t// also handles taphold\r\n\r\n\t// Also handles swipeleft, swiperight\r\n\t$.event.special.swipe = {\r\n\r\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\r\n\t\tscrollSupressionThreshold: 30,\r\n\r\n\t\t// More time than this, and it isn't a swipe.\r\n\t\tdurationThreshold: 1000,\r\n\r\n\t\t// Swipe horizontal displacement must be more than this.\r\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\t// Swipe vertical displacement must be less than this.\r\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\r\n\r\n\t\tgetLocation: function ( event ) {\r\n\t\t\tvar winPageX = window.pageXOffset,\r\n\t\t\t\twinPageY = window.pageYOffset,\r\n\t\t\t\tx = event.clientX,\r\n\t\t\t\ty = event.clientY;\r\n\r\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\r\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\r\n\r\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\r\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\r\n\t\t\t\tx = x - winPageX;\r\n\t\t\t\ty = y - winPageY;\r\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\r\n\r\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\r\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\r\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\r\n\t\t\t\tx = event.pageX - winPageX;\r\n\t\t\t\ty = event.pageY - winPageY;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tstart: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\r\n\t\t\t\t\t\torigin: $( event.target )\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\tstop: function( event ) {\r\n\t\t\tvar data = event.originalEvent.touches ?\r\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\r\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\r\n\t\t\treturn {\r\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\r\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\r\n\t\t\t\t\t};\r\n\t\t},\r\n\r\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\r\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\r\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\r\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\r\n\r\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\r\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\t// This serves as a flag to ensure that at most one swipe event event is\r\n\t\t// in work at any given time\r\n\t\teventInProgress: false,\r\n\r\n\t\tsetup: function() {\r\n\t\t\tvar events,\r\n\t\t\t\tthisObject = this,\r\n\t\t\t\t$this = $( thisObject ),\r\n\t\t\t\tcontext = {};\r\n\r\n\t\t\t// Retrieve the events data for this element and add the swipe context\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( !events ) {\r\n\t\t\t\tevents = { length: 0 };\r\n\t\t\t\t$.data( this, \"mobile-events\", events );\r\n\t\t\t}\r\n\t\t\tevents.length++;\r\n\t\t\tevents.swipe = context;\r\n\r\n\t\t\tcontext.start = function( event ) {\r\n\r\n\t\t\t\t// Bail if we're already working on a swipe event\r\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\r\n\r\n\t\t\t\tvar stop,\r\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\r\n\t\t\t\t\torigTarget = event.target,\r\n\t\t\t\t\temitted = false;\r\n\r\n\t\t\t\tcontext.move = function( event ) {\r\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\r\n\t\t\t\t\tif ( !emitted ) {\r\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\r\n\t\t\t\t\t\tif ( emitted ) {\r\n\r\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// prevent scrolling\r\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcontext.stop = function() {\r\n\t\t\t\t\t\temitted = true;\r\n\r\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\r\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\r\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t\t\tcontext.move = null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$document.on( touchMoveEvent, context.move )\r\n\t\t\t\t\t.one( touchStopEvent, context.stop );\r\n\t\t\t};\r\n\t\t\t$this.on( touchStartEvent, context.start );\r\n\t\t},\r\n\r\n\t\tteardown: function() {\r\n\t\t\tvar events, context;\r\n\r\n\t\t\tevents = $.data( this, \"mobile-events\" );\r\n\t\t\tif ( events ) {\r\n\t\t\t\tcontext = events.swipe;\r\n\t\t\t\tdelete events.swipe;\r\n\t\t\t\tevents.length--;\r\n\t\t\t\tif ( events.length === 0 ) {\r\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( context ) {\r\n\t\t\t\tif ( context.start ) {\r\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.move ) {\r\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\r\n\t\t\t\t}\r\n\t\t\t\tif ( context.stop ) {\r\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t$.each({\r\n\t\tswipeleft: \"swipe.left\",\r\n\t\tswiperight: \"swipe.right\"\r\n\t}, function( event, sourceEvent ) {\r\n\r\n\t\t$.event.special[ event ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\t$( this ).unbind( sourceEvent );\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n})( jQuery, this );\r\n*/\r\n'use strict';\r\n\r\n!function ($) {\r\n\r\n  var MutationObserver = function () {\r\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\r\n    for (var i = 0; i < prefixes.length; i++) {\r\n      if (prefixes[i] + 'MutationObserver' in window) {\r\n        return window[prefixes[i] + 'MutationObserver'];\r\n      }\r\n    }\r\n    return false;\r\n  }();\r\n\r\n  var triggers = function (el, type) {\r\n    el.data(type).split(' ').forEach(function (id) {\r\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\r\n    });\r\n  };\r\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\r\n  $(document).on('click.zf.trigger', '[data-open]', function () {\r\n    triggers($(this), 'open');\r\n  });\r\n\r\n  // Elements with [data-close] will close a plugin that supports it when clicked.\r\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\r\n  $(document).on('click.zf.trigger', '[data-close]', function () {\r\n    var id = $(this).data('close');\r\n    if (id) {\r\n      triggers($(this), 'close');\r\n    } else {\r\n      $(this).trigger('close.zf.trigger');\r\n    }\r\n  });\r\n\r\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\r\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\r\n    triggers($(this), 'toggle');\r\n  });\r\n\r\n  // Elements with [data-closable] will respond to close.zf.trigger events.\r\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\r\n    e.stopPropagation();\r\n    var animation = $(this).data('closable');\r\n\r\n    if (animation !== '') {\r\n      Foundation.Motion.animateOut($(this), animation, function () {\r\n        $(this).trigger('closed.zf');\r\n      });\r\n    } else {\r\n      $(this).fadeOut().trigger('closed.zf');\r\n    }\r\n  });\r\n\r\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\r\n    var id = $(this).data('toggle-focus');\r\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\r\n  });\r\n\r\n  /**\r\n  * Fires once after all other scripts have loaded\r\n  * @function\r\n  * @private\r\n  */\r\n  $(window).load(function () {\r\n    checkListeners();\r\n  });\r\n\r\n  function checkListeners() {\r\n    eventsListener();\r\n    resizeListener();\r\n    scrollListener();\r\n    closemeListener();\r\n  }\r\n\r\n  //******** only fires this function once on load, if there's something to watch ********\r\n  function closemeListener(pluginName) {\r\n    var yetiBoxes = $('[data-yeti-box]'),\r\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\r\n\r\n    if (pluginName) {\r\n      if (typeof pluginName === 'string') {\r\n        plugNames.push(pluginName);\r\n      } else if (typeof pluginName === 'object' && typeof pluginName[0] === 'string') {\r\n        plugNames.concat(pluginName);\r\n      } else {\r\n        console.error('Plugin names must be strings');\r\n      }\r\n    }\r\n    if (yetiBoxes.length) {\r\n      var listeners = plugNames.map(function (name) {\r\n        return 'closeme.zf.' + name;\r\n      }).join(' ');\r\n\r\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\r\n        var plugin = e.namespace.split('.')[0];\r\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\r\n\r\n        plugins.each(function () {\r\n          var _this = $(this);\r\n\r\n          _this.triggerHandler('close.zf.trigger', [_this]);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function resizeListener(debounce) {\r\n    var timer = void 0,\r\n        $nodes = $('[data-resize]');\r\n    if ($nodes.length) {\r\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\r\n        if (timer) {\r\n          clearTimeout(timer);\r\n        }\r\n\r\n        timer = setTimeout(function () {\r\n\r\n          if (!MutationObserver) {\r\n            //fallback for IE 9\r\n            $nodes.each(function () {\r\n              $(this).triggerHandler('resizeme.zf.trigger');\r\n            });\r\n          }\r\n          //trigger all listening elements and signal a resize event\r\n          $nodes.attr('data-events', \"resize\");\r\n        }, debounce || 10); //default time to emit resize event\r\n      });\r\n    }\r\n  }\r\n\r\n  function scrollListener(debounce) {\r\n    var timer = void 0,\r\n        $nodes = $('[data-scroll]');\r\n    if ($nodes.length) {\r\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\r\n        if (timer) {\r\n          clearTimeout(timer);\r\n        }\r\n\r\n        timer = setTimeout(function () {\r\n\r\n          if (!MutationObserver) {\r\n            //fallback for IE 9\r\n            $nodes.each(function () {\r\n              $(this).triggerHandler('scrollme.zf.trigger');\r\n            });\r\n          }\r\n          //trigger all listening elements and signal a scroll event\r\n          $nodes.attr('data-events', \"scroll\");\r\n        }, debounce || 10); //default time to emit scroll event\r\n      });\r\n    }\r\n  }\r\n\r\n  function eventsListener() {\r\n    if (!MutationObserver) {\r\n      return false;\r\n    }\r\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\r\n\r\n    //element callback\r\n    var listeningElementsMutation = function (mutationRecordsList) {\r\n      var $target = $(mutationRecordsList[0].target);\r\n      //trigger the event handler for the element depending on type\r\n      switch ($target.attr(\"data-events\")) {\r\n\r\n        case \"resize\":\r\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\r\n          break;\r\n\r\n        case \"scroll\":\r\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\r\n          break;\r\n\r\n        // case \"mutate\" :\r\n        // console.log('mutate', $target);\r\n        // $target.triggerHandler('mutate.zf.trigger');\r\n        //\r\n        // //make sure we don't get stuck in an infinite loop from sloppy codeing\r\n        // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\r\n        //   domMutationObserver();\r\n        // }\r\n        // break;\r\n\r\n        default:\r\n          return false;\r\n        //nothing\r\n      }\r\n    };\r\n\r\n    if (nodes.length) {\r\n      //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\r\n      for (var i = 0; i <= nodes.length - 1; i++) {\r\n        var elementObserver = new MutationObserver(listeningElementsMutation);\r\n        elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree: false, attributeFilter: [\"data-events\"] });\r\n      }\r\n    }\r\n  }\r\n\r\n  // ------------------------------------\r\n\r\n  // [PH]\r\n  // Foundation.CheckWatchers = checkWatchers;\r\n  Foundation.IHearYou = checkListeners;\r\n  // Foundation.ISeeYou = scrollListener;\r\n  // Foundation.IFeelYou = closemeListener;\r\n}(jQuery);\r\n\r\n// function domMutationObserver(debounce) {\r\n//   // !!! This is coming soon and needs more work; not active  !!! //\r\n//   var timer,\r\n//   nodes = document.querySelectorAll('[data-mutate]');\r\n//   //\r\n//   if (nodes.length) {\r\n//     // var MutationObserver = (function () {\r\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\r\n//     //   for (var i=0; i < prefixes.length; i++) {\r\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\r\n//     //       return window[prefixes[i] + 'MutationObserver'];\r\n//     //     }\r\n//     //   }\r\n//     //   return false;\r\n//     // }());\r\n//\r\n//\r\n//     //for the body, we need to listen for all changes effecting the style and class attributes\r\n//     var bodyObserver = new MutationObserver(bodyMutation);\r\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\r\n//\r\n//\r\n//     //body callback\r\n//     function bodyMutation(mutate) {\r\n//       //trigger all listening elements and signal a mutation event\r\n//       if (timer) { clearTimeout(timer); }\r\n//\r\n//       timer = setTimeout(function() {\r\n//         bodyObserver.disconnect();\r\n//         $('[data-mutate]').attr('data-events',\"mutate\");\r\n//       }, debounce || 150);\r\n//     }\r\n//   }\r\n// }\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Abide module.\r\n   * @module foundation.abide\r\n   */\r\n\r\n  var Abide = function () {\r\n    /**\r\n     * Creates a new instance of Abide.\r\n     * @class\r\n     * @fires Abide#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Abide(element) {\r\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\r\n\r\n      _classCallCheck(this, Abide);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Abide.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Abide');\r\n    }\r\n\r\n    /**\r\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Abide, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        this.$inputs = this.$element.find('input, textarea, select');\r\n\r\n        this._events();\r\n      }\r\n\r\n      /**\r\n       * Initializes events for Abide.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this2 = this;\r\n\r\n        this.$element.off('.abide').on('reset.zf.abide', function () {\r\n          _this2.resetForm();\r\n        }).on('submit.zf.abide', function () {\r\n          return _this2.validateForm();\r\n        });\r\n\r\n        if (this.options.validateOn === 'fieldChange') {\r\n          this.$inputs.off('change.zf.abide').on('change.zf.abide', function (e) {\r\n            _this2.validateInput($(e.target));\r\n          });\r\n        }\r\n\r\n        if (this.options.liveValidate) {\r\n          this.$inputs.off('input.zf.abide').on('input.zf.abide', function (e) {\r\n            _this2.validateInput($(e.target));\r\n          });\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Calls necessary functions to update Abide upon DOM change\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_reflow',\r\n      value: function _reflow() {\r\n        this._init();\r\n      }\r\n\r\n      /**\r\n       * Checks whether or not a form element has the required attribute and if it's checked or not\r\n       * @param {Object} element - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\r\n\r\n    }, {\r\n      key: 'requiredCheck',\r\n      value: function requiredCheck($el) {\r\n        if (!$el.attr('required')) return true;\r\n\r\n        var isGood = true;\r\n\r\n        switch ($el[0].type) {\r\n          case 'checkbox':\r\n            isGood = $el[0].checked;\r\n            break;\r\n\r\n          case 'select':\r\n          case 'select-one':\r\n          case 'select-multiple':\r\n            var opt = $el.find('option:selected');\r\n            if (!opt.length || !opt.val()) isGood = false;\r\n            break;\r\n\r\n          default:\r\n            if (!$el.val() || !$el.val().length) isGood = false;\r\n        }\r\n\r\n        return isGood;\r\n      }\r\n\r\n      /**\r\n       * Based on $el, get the first element with selector in this order:\r\n       * 1. The element's direct sibling('s).\r\n       * 3. The element's parent's children.\r\n       *\r\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\r\n       *\r\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\r\n       * @returns {Object} jQuery object with the selector.\r\n       */\r\n\r\n    }, {\r\n      key: 'findFormError',\r\n      value: function findFormError($el) {\r\n        var $error = $el.siblings(this.options.formErrorSelector);\r\n\r\n        if (!$error.length) {\r\n          $error = $el.parent().find(this.options.formErrorSelector);\r\n        }\r\n\r\n        return $error;\r\n      }\r\n\r\n      /**\r\n       * Get the first element in this order:\r\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n       * 3. The `.closest()` <label>\r\n       *\r\n       * @param {Object} $el - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\r\n\r\n    }, {\r\n      key: 'findLabel',\r\n      value: function findLabel($el) {\r\n        var id = $el[0].id;\r\n        var $label = this.$element.find('label[for=\"' + id + '\"]');\r\n\r\n        if (!$label.length) {\r\n          return $el.closest('label');\r\n        }\r\n\r\n        return $label;\r\n      }\r\n\r\n      /**\r\n       * Get the set of labels associated with a set of radio els in this order\r\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\r\n       * 3. The `.closest()` <label>\r\n       *\r\n       * @param {Object} $el - jQuery object to check for required attribute\r\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\r\n       */\r\n\r\n    }, {\r\n      key: 'findRadioLabels',\r\n      value: function findRadioLabels($els) {\r\n        var _this3 = this;\r\n\r\n        var labels = $els.map(function (i, el) {\r\n          var id = el.id;\r\n          var $label = _this3.$element.find('label[for=\"' + id + '\"]');\r\n\r\n          if (!$label.length) {\r\n            $label = $(el).closest('label');\r\n          }\r\n          return $label[0];\r\n        });\r\n\r\n        return $(labels);\r\n      }\r\n\r\n      /**\r\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\r\n       * @param {Object} $el - jQuery object to add the class to\r\n       */\r\n\r\n    }, {\r\n      key: 'addErrorClasses',\r\n      value: function addErrorClasses($el) {\r\n        var $label = this.findLabel($el);\r\n        var $formError = this.findFormError($el);\r\n\r\n        if ($label.length) {\r\n          $label.addClass(this.options.labelErrorClass);\r\n        }\r\n\r\n        if ($formError.length) {\r\n          $formError.addClass(this.options.formErrorClass);\r\n        }\r\n\r\n        $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\r\n      }\r\n\r\n      /**\r\n       * Remove CSS error classes etc from an entire radio button group\r\n       * @param {String} groupName - A string that specifies the name of a radio button group\r\n       *\r\n       */\r\n\r\n    }, {\r\n      key: 'removeRadioErrorClasses',\r\n      value: function removeRadioErrorClasses(groupName) {\r\n        var $els = this.$element.find(':radio[name=\"' + groupName + '\"]');\r\n        var $labels = this.findRadioLabels($els);\r\n        var $formErrors = this.findFormError($els);\r\n\r\n        if ($labels.length) {\r\n          $labels.removeClass(this.options.labelErrorClass);\r\n        }\r\n\r\n        if ($formErrors.length) {\r\n          $formErrors.removeClass(this.options.formErrorClass);\r\n        }\r\n\r\n        $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\r\n      }\r\n\r\n      /**\r\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\r\n       * @param {Object} $el - jQuery object to remove the class from\r\n       */\r\n\r\n    }, {\r\n      key: 'removeErrorClasses',\r\n      value: function removeErrorClasses($el) {\r\n        // radios need to clear all of the els\r\n        if ($el[0].type == 'radio') {\r\n          return this.removeRadioErrorClasses($el.attr('name'));\r\n        }\r\n\r\n        var $label = this.findLabel($el);\r\n        var $formError = this.findFormError($el);\r\n\r\n        if ($label.length) {\r\n          $label.removeClass(this.options.labelErrorClass);\r\n        }\r\n\r\n        if ($formError.length) {\r\n          $formError.removeClass(this.options.formErrorClass);\r\n        }\r\n\r\n        $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\r\n      }\r\n\r\n      /**\r\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\r\n       * @fires Abide#invalid\r\n       * @fires Abide#valid\r\n       * @param {Object} element - jQuery object to validate, should be an HTML input\r\n       * @returns {Boolean} goodToGo - If the input is valid or not.\r\n       */\r\n\r\n    }, {\r\n      key: 'validateInput',\r\n      value: function validateInput($el) {\r\n        var clearRequire = this.requiredCheck($el),\r\n            validated = false,\r\n            customValidator = true,\r\n            validator = $el.attr('data-validator'),\r\n            equalTo = true;\r\n\r\n        // don't validate ignored inputs or hidden inputs\r\n        if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]')) {\r\n          return true;\r\n        }\r\n\r\n        switch ($el[0].type) {\r\n          case 'radio':\r\n            validated = this.validateRadio($el.attr('name'));\r\n            break;\r\n\r\n          case 'checkbox':\r\n            validated = clearRequire;\r\n            break;\r\n\r\n          case 'select':\r\n          case 'select-one':\r\n          case 'select-multiple':\r\n            validated = clearRequire;\r\n            break;\r\n\r\n          default:\r\n            validated = this.validateText($el);\r\n        }\r\n\r\n        if (validator) {\r\n          customValidator = this.matchValidation($el, validator, $el.attr('required'));\r\n        }\r\n\r\n        if ($el.attr('data-equalto')) {\r\n          equalTo = this.options.validators.equalTo($el);\r\n        }\r\n\r\n        var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\r\n        var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\r\n\r\n        this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\r\n\r\n        /**\r\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\r\n         * Trigger includes the DOM element of the input.\r\n         * @event Abide#valid\r\n         * @event Abide#invalid\r\n         */\r\n        $el.trigger(message, [$el]);\r\n\r\n        return goodToGo;\r\n      }\r\n\r\n      /**\r\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\r\n       * @returns {Boolean} noError - true if no errors were detected...\r\n       * @fires Abide#formvalid\r\n       * @fires Abide#forminvalid\r\n       */\r\n\r\n    }, {\r\n      key: 'validateForm',\r\n      value: function validateForm() {\r\n        var acc = [];\r\n        var _this = this;\r\n\r\n        this.$inputs.each(function () {\r\n          acc.push(_this.validateInput($(this)));\r\n        });\r\n\r\n        var noError = acc.indexOf(false) === -1;\r\n\r\n        this.$element.find('[data-abide-error]').css('display', noError ? 'none' : 'block');\r\n\r\n        /**\r\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\r\n         * Trigger includes the element of the form.\r\n         * @event Abide#formvalid\r\n         * @event Abide#forminvalid\r\n         */\r\n        this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\r\n\r\n        return noError;\r\n      }\r\n\r\n      /**\r\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\r\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\r\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\r\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\r\n       */\r\n\r\n    }, {\r\n      key: 'validateText',\r\n      value: function validateText($el, pattern) {\r\n        // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\r\n        pattern = pattern || $el.attr('pattern') || $el.attr('type');\r\n        var inputText = $el.val();\r\n        var valid = false;\r\n\r\n        if (inputText.length) {\r\n          // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\r\n          if (this.options.patterns.hasOwnProperty(pattern)) {\r\n            valid = this.options.patterns[pattern].test(inputText);\r\n          }\r\n          // If the pattern name isn't also the type attribute of the field, then test it as a regexp\r\n          else if (pattern !== $el.attr('type')) {\r\n              valid = new RegExp(pattern).test(inputText);\r\n            } else {\r\n              valid = true;\r\n            }\r\n        }\r\n        // An empty field is valid if it's not required\r\n        else if (!$el.prop('required')) {\r\n            valid = true;\r\n          }\r\n\r\n        return valid;\r\n      }\r\n\r\n      /**\r\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\r\n       * @param {String} groupName - A string that specifies the name of a radio button group\r\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\r\n       */\r\n\r\n    }, {\r\n      key: 'validateRadio',\r\n      value: function validateRadio(groupName) {\r\n        // If at least one radio in the group has the `required` attribute, the group is considered required\r\n        // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\r\n        var $group = this.$element.find(':radio[name=\"' + groupName + '\"]');\r\n        var valid = false,\r\n            required = false;\r\n\r\n        // For the group to be required, at least one radio needs to be required\r\n        $group.each(function (i, e) {\r\n          if ($(e).attr('required')) {\r\n            required = true;\r\n          }\r\n        });\r\n        if (!required) valid = true;\r\n\r\n        if (!valid) {\r\n          // For the group to be valid, at least one radio needs to be checked\r\n          $group.each(function (i, e) {\r\n            if ($(e).prop('checked')) {\r\n              valid = true;\r\n            }\r\n          });\r\n        };\r\n\r\n        return valid;\r\n      }\r\n\r\n      /**\r\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\r\n       * @param {Object} $el - jQuery input element.\r\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\r\n       * @param {Boolean} required - self explanatory?\r\n       * @returns {Boolean} - true if validations passed.\r\n       */\r\n\r\n    }, {\r\n      key: 'matchValidation',\r\n      value: function matchValidation($el, validators, required) {\r\n        var _this4 = this;\r\n\r\n        required = required ? true : false;\r\n\r\n        var clear = validators.split(' ').map(function (v) {\r\n          return _this4.options.validators[v]($el, required, $el.parent());\r\n        });\r\n        return clear.indexOf(false) === -1;\r\n      }\r\n\r\n      /**\r\n       * Resets form inputs and styles\r\n       * @fires Abide#formreset\r\n       */\r\n\r\n    }, {\r\n      key: 'resetForm',\r\n      value: function resetForm() {\r\n        var $form = this.$element,\r\n            opts = this.options;\r\n\r\n        $('.' + opts.labelErrorClass, $form).not('small').removeClass(opts.labelErrorClass);\r\n        $('.' + opts.inputErrorClass, $form).not('small').removeClass(opts.inputErrorClass);\r\n        $(opts.formErrorSelector + '.' + opts.formErrorClass).removeClass(opts.formErrorClass);\r\n        $form.find('[data-abide-error]').css('display', 'none');\r\n        $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\r\n        $(':input:radio', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\r\n        $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\r\n        /**\r\n         * Fires when the form has been reset.\r\n         * @event Abide#formreset\r\n         */\r\n        $form.trigger('formreset.zf.abide', [$form]);\r\n      }\r\n\r\n      /**\r\n       * Destroys an instance of Abide.\r\n       * Removes error styles and classes from elements, without resetting their values.\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        var _this = this;\r\n        this.$element.off('.abide').find('[data-abide-error]').css('display', 'none');\r\n\r\n        this.$inputs.off('.abide').each(function () {\r\n          _this.removeErrorClasses($(this));\r\n        });\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Abide;\r\n  }();\r\n\r\n  /**\r\n   * Default settings for plugin\r\n   */\r\n\r\n\r\n  Abide.defaults = {\r\n    /**\r\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\r\n     * Remove or change this value for manual validation.\r\n     * @option\r\n     * @example 'fieldChange'\r\n     */\r\n    validateOn: 'fieldChange',\r\n\r\n    /**\r\n     * Class to be applied to input labels on failed validation.\r\n     * @option\r\n     * @example 'is-invalid-label'\r\n     */\r\n    labelErrorClass: 'is-invalid-label',\r\n\r\n    /**\r\n     * Class to be applied to inputs on failed validation.\r\n     * @option\r\n     * @example 'is-invalid-input'\r\n     */\r\n    inputErrorClass: 'is-invalid-input',\r\n\r\n    /**\r\n     * Class selector to use to target Form Errors for show/hide.\r\n     * @option\r\n     * @example '.form-error'\r\n     */\r\n    formErrorSelector: '.form-error',\r\n\r\n    /**\r\n     * Class added to Form Errors on failed validation.\r\n     * @option\r\n     * @example 'is-visible'\r\n     */\r\n    formErrorClass: 'is-visible',\r\n\r\n    /**\r\n     * Set to true to validate text inputs on any value change.\r\n     * @option\r\n     * @example false\r\n     */\r\n    liveValidate: false,\r\n\r\n    patterns: {\r\n      alpha: /^[a-zA-Z]+$/,\r\n      alpha_numeric: /^[a-zA-Z0-9]+$/,\r\n      integer: /^[-+]?\\d+$/,\r\n      number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\r\n\r\n      // amex, visa, diners\r\n      card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\r\n      cvv: /^([0-9]){3,4}$/,\r\n\r\n      // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\r\n      email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\r\n\r\n      url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\r\n      // abc.de\r\n      domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\r\n\r\n      datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\r\n      // YYYY-MM-DD\r\n      date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\r\n      // HH:MM:SS\r\n      time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\r\n      dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\r\n      // MM/DD/YYYY\r\n      month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\r\n      // DD/MM/YYYY\r\n      day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\r\n\r\n      // #FFF or #FFFFFF\r\n      color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\r\n    },\r\n\r\n    /**\r\n     * Optional validation functions to be used. `equalTo` being the only default included function.\r\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\r\n     * el : The jQuery element to validate.\r\n     * required : Boolean value of the required attribute be present or not.\r\n     * parent : The direct parent of the input.\r\n     * @option\r\n     */\r\n    validators: {\r\n      equalTo: function (el, required, parent) {\r\n        return $('#' + el.attr('data-equalto')).val() === el.val();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Abide, 'Abide');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Accordion module.\r\n   * @module foundation.accordion\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   */\r\n\r\n  var Accordion = function () {\r\n    /**\r\n     * Creates a new instance of an accordion.\r\n     * @class\r\n     * @fires Accordion#init\r\n     * @param {jQuery} element - jQuery object to make into an accordion.\r\n     * @param {Object} options - a plain object with settings to override the default options.\r\n     */\r\n\r\n    function Accordion(element, options) {\r\n      _classCallCheck(this, Accordion);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Accordion');\r\n      Foundation.Keyboard.register('Accordion', {\r\n        'ENTER': 'toggle',\r\n        'SPACE': 'toggle',\r\n        'ARROW_DOWN': 'next',\r\n        'ARROW_UP': 'previous'\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initializes the accordion by animating the preset active pane(s).\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Accordion, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        this.$element.attr('role', 'tablist');\r\n        this.$tabs = this.$element.children('li, [data-accordion-item]');\r\n\r\n        this.$tabs.each(function (idx, el) {\r\n          var $el = $(el),\r\n              $content = $el.children('[data-tab-content]'),\r\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\r\n              linkId = el.id || id + '-label';\r\n\r\n          $el.find('a:first').attr({\r\n            'aria-controls': id,\r\n            'role': 'tab',\r\n            'id': linkId,\r\n            'aria-expanded': false,\r\n            'aria-selected': false\r\n          });\r\n\r\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\r\n        });\r\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\r\n        if ($initActive.length) {\r\n          this.down($initActive, true);\r\n        }\r\n        this._events();\r\n      }\r\n\r\n      /**\r\n       * Adds event handlers for items within the accordion.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this;\r\n\r\n        this.$tabs.each(function () {\r\n          var $elem = $(this);\r\n          var $tabContent = $elem.children('[data-tab-content]');\r\n          if ($tabContent.length) {\r\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\r\n              // $(this).children('a').on('click.zf.accordion', function(e) {\r\n              e.preventDefault();\r\n              if ($elem.hasClass('is-active')) {\r\n                if (_this.options.allowAllClosed || $elem.siblings().hasClass('is-active')) {\r\n                  _this.up($tabContent);\r\n                }\r\n              } else {\r\n                _this.down($tabContent);\r\n              }\r\n            }).on('keydown.zf.accordion', function (e) {\r\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\r\n                toggle: function () {\r\n                  _this.toggle($tabContent);\r\n                },\r\n                next: function () {\r\n                  var $a = $elem.next().find('a').focus();\r\n                  if (!_this.options.multiExpand) {\r\n                    $a.trigger('click.zf.accordion');\r\n                  }\r\n                },\r\n                previous: function () {\r\n                  var $a = $elem.prev().find('a').focus();\r\n                  if (!_this.options.multiExpand) {\r\n                    $a.trigger('click.zf.accordion');\r\n                  }\r\n                },\r\n                handled: function () {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                }\r\n              });\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Toggles the selected content pane's open/close state.\r\n       * @param {jQuery} $target - jQuery object of the pane to toggle.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'toggle',\r\n      value: function toggle($target) {\r\n        if ($target.parent().hasClass('is-active')) {\r\n          if (this.options.allowAllClosed || $target.parent().siblings().hasClass('is-active')) {\r\n            this.up($target);\r\n          } else {\r\n            return;\r\n          }\r\n        } else {\r\n          this.down($target);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Opens the accordion tab defined by `$target`.\r\n       * @param {jQuery} $target - Accordion pane to open.\r\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\r\n       * @fires Accordion#down\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'down',\r\n      value: function down($target, firstTime) {\r\n        var _this2 = this;\r\n\r\n        if (!this.options.multiExpand && !firstTime) {\r\n          var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\r\n          if ($currentActive.length) {\r\n            this.up($currentActive);\r\n          }\r\n        }\r\n\r\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\r\n\r\n        $target.slideDown(this.options.slideSpeed, function () {\r\n          /**\r\n           * Fires when the tab is done opening.\r\n           * @event Accordion#down\r\n           */\r\n          _this2.$element.trigger('down.zf.accordion', [$target]);\r\n        });\r\n\r\n        $('#' + $target.attr('aria-labelledby')).attr({\r\n          'aria-expanded': true,\r\n          'aria-selected': true\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Closes the tab defined by `$target`.\r\n       * @param {jQuery} $target - Accordion tab to close.\r\n       * @fires Accordion#up\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'up',\r\n      value: function up($target) {\r\n        var $aunts = $target.parent().siblings(),\r\n            _this = this;\r\n        var canClose = this.options.multiExpand ? $aunts.hasClass('is-active') : $target.parent().hasClass('is-active');\r\n\r\n        if (!this.options.allowAllClosed && !canClose) {\r\n          return;\r\n        }\r\n\r\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\r\n        $target.slideUp(_this.options.slideSpeed, function () {\r\n          /**\r\n           * Fires when the tab is done collapsing up.\r\n           * @event Accordion#up\r\n           */\r\n          _this.$element.trigger('up.zf.accordion', [$target]);\r\n        });\r\n        // });\r\n\r\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\r\n\r\n        $('#' + $target.attr('aria-labelledby')).attr({\r\n          'aria-expanded': false,\r\n          'aria-selected': false\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Destroys an instance of an accordion.\r\n       * @fires Accordion#destroyed\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\r\n        this.$element.find('a').off('.zf.accordion');\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Accordion;\r\n  }();\r\n\r\n  Accordion.defaults = {\r\n    /**\r\n     * Amount of time to animate the opening of an accordion pane.\r\n     * @option\r\n     * @example 250\r\n     */\r\n    slideSpeed: 250,\r\n    /**\r\n     * Allow the accordion to have multiple open panes.\r\n     * @option\r\n     * @example false\r\n     */\r\n    multiExpand: false,\r\n    /**\r\n     * Allow the accordion to close all panes.\r\n     * @option\r\n     * @example false\r\n     */\r\n    allowAllClosed: false\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Accordion, 'Accordion');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * AccordionMenu module.\r\n   * @module foundation.accordionMenu\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.nest\r\n   */\r\n\r\n  var AccordionMenu = function () {\r\n    /**\r\n     * Creates a new instance of an accordion menu.\r\n     * @class\r\n     * @fires AccordionMenu#init\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function AccordionMenu(element, options) {\r\n      _classCallCheck(this, AccordionMenu);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\r\n\r\n      Foundation.Nest.Feather(this.$element, 'accordion');\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'AccordionMenu');\r\n      Foundation.Keyboard.register('AccordionMenu', {\r\n        'ENTER': 'toggle',\r\n        'SPACE': 'toggle',\r\n        'ARROW_RIGHT': 'open',\r\n        'ARROW_UP': 'up',\r\n        'ARROW_DOWN': 'down',\r\n        'ARROW_LEFT': 'close',\r\n        'ESCAPE': 'closeAll',\r\n        'TAB': 'down',\r\n        'SHIFT_TAB': 'up'\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initializes the accordion menu by hiding all nested menus.\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(AccordionMenu, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        this.$element.find('[data-submenu]').not('.is-active').slideUp(0); //.find('a').css('padding-left', '1rem');\r\n        this.$element.attr({\r\n          'role': 'tablist',\r\n          'aria-multiselectable': this.options.multiOpen\r\n        });\r\n\r\n        this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\r\n        this.$menuLinks.each(function () {\r\n          var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\r\n              $elem = $(this),\r\n              $sub = $elem.children('[data-submenu]'),\r\n              subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\r\n              isActive = $sub.hasClass('is-active');\r\n          $elem.attr({\r\n            'aria-controls': subId,\r\n            'aria-expanded': isActive,\r\n            'role': 'tab',\r\n            'id': linkId\r\n          });\r\n          $sub.attr({\r\n            'aria-labelledby': linkId,\r\n            'aria-hidden': !isActive,\r\n            'role': 'tabpanel',\r\n            'id': subId\r\n          });\r\n        });\r\n        var initPanes = this.$element.find('.is-active');\r\n        if (initPanes.length) {\r\n          var _this = this;\r\n          initPanes.each(function () {\r\n            _this.down($(this));\r\n          });\r\n        }\r\n        this._events();\r\n      }\r\n\r\n      /**\r\n       * Adds event handlers for items within the menu.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this;\r\n\r\n        this.$element.find('li').each(function () {\r\n          var $submenu = $(this).children('[data-submenu]');\r\n\r\n          if ($submenu.length) {\r\n            $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function (e) {\r\n              e.preventDefault();\r\n\r\n              _this.toggle($submenu);\r\n            });\r\n          }\r\n        }).on('keydown.zf.accordionmenu', function (e) {\r\n          var $element = $(this),\r\n              $elements = $element.parent('ul').children('li'),\r\n              $prevElement,\r\n              $nextElement,\r\n              $target = $element.children('[data-submenu]');\r\n\r\n          $elements.each(function (i) {\r\n            if ($(this).is($element)) {\r\n              $prevElement = $elements.eq(Math.max(0, i - 1)).find('a').first();\r\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1)).find('a').first();\r\n\r\n              if ($(this).children('[data-submenu]:visible').length) {\r\n                // has open sub menu\r\n                $nextElement = $element.find('li:first-child').find('a').first();\r\n              }\r\n              if ($(this).is(':first-child')) {\r\n                // is first element of sub menu\r\n                $prevElement = $element.parents('li').first().find('a').first();\r\n              } else if ($prevElement.children('[data-submenu]:visible').length) {\r\n                // if previous element has open sub menu\r\n                $prevElement = $prevElement.find('li:last-child').find('a').first();\r\n              }\r\n              if ($(this).is(':last-child')) {\r\n                // is last element of sub menu\r\n                $nextElement = $element.parents('li').first().next('li').find('a').first();\r\n              }\r\n\r\n              return;\r\n            }\r\n          });\r\n          Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\r\n            open: function () {\r\n              if ($target.is(':hidden')) {\r\n                _this.down($target);\r\n                $target.find('li').first().find('a').first().focus();\r\n              }\r\n            },\r\n            close: function () {\r\n              if ($target.length && !$target.is(':hidden')) {\r\n                // close active sub of this item\r\n                _this.up($target);\r\n              } else if ($element.parent('[data-submenu]').length) {\r\n                // close currently open sub\r\n                _this.up($element.parent('[data-submenu]'));\r\n                $element.parents('li').first().find('a').first().focus();\r\n              }\r\n            },\r\n            up: function () {\r\n              $prevElement.attr('tabindex', -1).focus();\r\n              return true;\r\n            },\r\n            down: function () {\r\n              $nextElement.attr('tabindex', -1).focus();\r\n              return true;\r\n            },\r\n            toggle: function () {\r\n              if ($element.children('[data-submenu]').length) {\r\n                _this.toggle($element.children('[data-submenu]'));\r\n              }\r\n            },\r\n            closeAll: function () {\r\n              _this.hideAll();\r\n            },\r\n            handled: function (preventDefault) {\r\n              if (preventDefault) {\r\n                e.preventDefault();\r\n              }\r\n              e.stopImmediatePropagation();\r\n            }\r\n          });\r\n        }); //.attr('tabindex', 0);\r\n      }\r\n\r\n      /**\r\n       * Closes all panes of the menu.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'hideAll',\r\n      value: function hideAll() {\r\n        this.$element.find('[data-submenu]').slideUp(this.options.slideSpeed);\r\n      }\r\n\r\n      /**\r\n       * Toggles the open/close state of a submenu.\r\n       * @function\r\n       * @param {jQuery} $target - the submenu to toggle\r\n       */\r\n\r\n    }, {\r\n      key: 'toggle',\r\n      value: function toggle($target) {\r\n        if (!$target.is(':animated')) {\r\n          if (!$target.is(':hidden')) {\r\n            this.up($target);\r\n          } else {\r\n            this.down($target);\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Opens the sub-menu defined by `$target`.\r\n       * @param {jQuery} $target - Sub-menu to open.\r\n       * @fires AccordionMenu#down\r\n       */\r\n\r\n    }, {\r\n      key: 'down',\r\n      value: function down($target) {\r\n        var _this = this;\r\n\r\n        if (!this.options.multiOpen) {\r\n          this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\r\n        }\r\n\r\n        $target.addClass('is-active').attr({ 'aria-hidden': false }).parent('.is-accordion-submenu-parent').attr({ 'aria-expanded': true });\r\n\r\n        //Foundation.Move(this.options.slideSpeed, $target, function() {\r\n        $target.slideDown(_this.options.slideSpeed, function () {\r\n          /**\r\n           * Fires when the menu is done opening.\r\n           * @event AccordionMenu#down\r\n           */\r\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\r\n        });\r\n        //});\r\n      }\r\n\r\n      /**\r\n       * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\r\n       * @param {jQuery} $target - Sub-menu to close.\r\n       * @fires AccordionMenu#up\r\n       */\r\n\r\n    }, {\r\n      key: 'up',\r\n      value: function up($target) {\r\n        var _this = this;\r\n        //Foundation.Move(this.options.slideSpeed, $target, function(){\r\n        $target.slideUp(_this.options.slideSpeed, function () {\r\n          /**\r\n           * Fires when the menu is done collapsing up.\r\n           * @event AccordionMenu#up\r\n           */\r\n          _this.$element.trigger('up.zf.accordionMenu', [$target]);\r\n        });\r\n        //});\r\n\r\n        var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\r\n\r\n        $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\r\n      }\r\n\r\n      /**\r\n       * Destroys an instance of accordion menu.\r\n       * @fires AccordionMenu#destroyed\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.find('[data-submenu]').slideDown(0).css('display', '');\r\n        this.$element.find('a').off('click.zf.accordionMenu');\r\n\r\n        Foundation.Nest.Burn(this.$element, 'accordion');\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return AccordionMenu;\r\n  }();\r\n\r\n  AccordionMenu.defaults = {\r\n    /**\r\n     * Amount of time to animate the opening of a submenu in ms.\r\n     * @option\r\n     * @example 250\r\n     */\r\n    slideSpeed: 250,\r\n    /**\r\n     * Allow the menu to have multiple open panes.\r\n     * @option\r\n     * @example true\r\n     */\r\n    multiOpen: true\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(AccordionMenu, 'AccordionMenu');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Drilldown module.\r\n   * @module foundation.drilldown\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.nest\r\n   */\r\n\r\n  var Drilldown = function () {\r\n    /**\r\n     * Creates a new instance of a drilldown menu.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Drilldown(element, options) {\r\n      _classCallCheck(this, Drilldown);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\r\n\r\n      Foundation.Nest.Feather(this.$element, 'drilldown');\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Drilldown');\r\n      Foundation.Keyboard.register('Drilldown', {\r\n        'ENTER': 'open',\r\n        'SPACE': 'open',\r\n        'ARROW_RIGHT': 'next',\r\n        'ARROW_UP': 'up',\r\n        'ARROW_DOWN': 'down',\r\n        'ARROW_LEFT': 'previous',\r\n        'ESCAPE': 'close',\r\n        'TAB': 'down',\r\n        'SHIFT_TAB': 'up'\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initializes the drilldown by creating jQuery collections of elements\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Drilldown, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\r\n        this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\r\n        this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\r\n\r\n        this._prepareMenu();\r\n\r\n        this._keyboardEvents();\r\n      }\r\n\r\n      /**\r\n       * prepares drilldown menu by setting attributes to links and elements\r\n       * sets a min height to prevent content jumping\r\n       * wraps the element if not already wrapped\r\n       * @private\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: '_prepareMenu',\r\n      value: function _prepareMenu() {\r\n        var _this = this;\r\n        // if(!this.options.holdOpen){\r\n        //   this._menuLinkEvents();\r\n        // }\r\n        this.$submenuAnchors.each(function () {\r\n          var $link = $(this);\r\n          var $sub = $link.parent();\r\n          if (_this.options.parentLink) {\r\n            $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\r\n          }\r\n          $link.data('savedHref', $link.attr('href')).removeAttr('href');\r\n          $link.children('[data-submenu]').attr({\r\n            'aria-hidden': true,\r\n            'tabindex': 0,\r\n            'role': 'menu'\r\n          });\r\n          _this._events($link);\r\n        });\r\n        this.$submenus.each(function () {\r\n          var $menu = $(this),\r\n              $back = $menu.find('.js-drilldown-back');\r\n          if (!$back.length) {\r\n            $menu.prepend(_this.options.backButton);\r\n          }\r\n          _this._back($menu);\r\n        });\r\n        if (!this.$element.parent().hasClass('is-drilldown')) {\r\n          this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\r\n          this.$wrapper = this.$element.wrap(this.$wrapper).parent().css(this._getMaxDims());\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Adds event handlers to elements in the menu.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $elem - the current menu item to add handlers to.\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events($elem) {\r\n        var _this = this;\r\n\r\n        $elem.off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\r\n          if ($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')) {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n\r\n          // if(e.target !== e.currentTarget.firstElementChild){\r\n          //   return false;\r\n          // }\r\n          _this._show($elem.parent('li'));\r\n\r\n          if (_this.options.closeOnClick) {\r\n            var $body = $('body');\r\n            $body.off('.zf.drilldown').on('click.zf.drilldown', function (e) {\r\n              if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\r\n                return;\r\n              }\r\n              e.preventDefault();\r\n              _this._hideAll();\r\n              $body.off('.zf.drilldown');\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Adds keydown event listener to `li`'s in the menu.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_keyboardEvents',\r\n      value: function _keyboardEvents() {\r\n        var _this = this;\r\n\r\n        this.$menuItems.add(this.$element.find('.js-drilldown-back > a')).on('keydown.zf.drilldown', function (e) {\r\n\r\n          var $element = $(this),\r\n              $elements = $element.parent('li').parent('ul').children('li').children('a'),\r\n              $prevElement,\r\n              $nextElement;\r\n\r\n          $elements.each(function (i) {\r\n            if ($(this).is($element)) {\r\n              $prevElement = $elements.eq(Math.max(0, i - 1));\r\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\r\n              return;\r\n            }\r\n          });\r\n\r\n          Foundation.Keyboard.handleKey(e, 'Drilldown', {\r\n            next: function () {\r\n              if ($element.is(_this.$submenuAnchors)) {\r\n                _this._show($element.parent('li'));\r\n                $element.parent('li').one(Foundation.transitionend($element), function () {\r\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\r\n                });\r\n                return true;\r\n              }\r\n            },\r\n            previous: function () {\r\n              _this._hide($element.parent('li').parent('ul'));\r\n              $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\r\n                setTimeout(function () {\r\n                  $element.parent('li').parent('ul').parent('li').children('a').first().focus();\r\n                }, 1);\r\n              });\r\n              return true;\r\n            },\r\n            up: function () {\r\n              $prevElement.focus();\r\n              return true;\r\n            },\r\n            down: function () {\r\n              $nextElement.focus();\r\n              return true;\r\n            },\r\n            close: function () {\r\n              _this._back();\r\n              //_this.$menuItems.first().focus(); // focus to first element\r\n            },\r\n            open: function () {\r\n              if (!$element.is(_this.$menuItems)) {\r\n                // not menu item means back button\r\n                _this._hide($element.parent('li').parent('ul'));\r\n                $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\r\n                  setTimeout(function () {\r\n                    $element.parent('li').parent('ul').parent('li').children('a').first().focus();\r\n                  }, 1);\r\n                });\r\n              } else if ($element.is(_this.$submenuAnchors)) {\r\n                _this._show($element.parent('li'));\r\n                $element.parent('li').one(Foundation.transitionend($element), function () {\r\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\r\n                });\r\n              }\r\n              return true;\r\n            },\r\n            handled: function (preventDefault) {\r\n              if (preventDefault) {\r\n                e.preventDefault();\r\n              }\r\n              e.stopImmediatePropagation();\r\n            }\r\n          });\r\n        }); // end keyboardAccess\r\n      }\r\n\r\n      /**\r\n       * Closes all open elements, and returns to root menu.\r\n       * @function\r\n       * @fires Drilldown#closed\r\n       */\r\n\r\n    }, {\r\n      key: '_hideAll',\r\n      value: function _hideAll() {\r\n        var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\r\n        $elem.one(Foundation.transitionend($elem), function (e) {\r\n          $elem.removeClass('is-active is-closing');\r\n        });\r\n        /**\r\n         * Fires when the menu is fully closed.\r\n         * @event Drilldown#closed\r\n         */\r\n        this.$element.trigger('closed.zf.drilldown');\r\n      }\r\n\r\n      /**\r\n       * Adds event listener for each `back` button, and closes open menus.\r\n       * @function\r\n       * @fires Drilldown#back\r\n       * @param {jQuery} $elem - the current sub-menu to add `back` event.\r\n       */\r\n\r\n    }, {\r\n      key: '_back',\r\n      value: function _back($elem) {\r\n        var _this = this;\r\n        $elem.off('click.zf.drilldown');\r\n        $elem.children('.js-drilldown-back').on('click.zf.drilldown', function (e) {\r\n          e.stopImmediatePropagation();\r\n          // console.log('mouseup on back');\r\n          _this._hide($elem);\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Adds event listener to menu items w/o submenus to close open menus on click.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_menuLinkEvents',\r\n      value: function _menuLinkEvents() {\r\n        var _this = this;\r\n        this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\r\n          // e.stopImmediatePropagation();\r\n          setTimeout(function () {\r\n            _this._hideAll();\r\n          }, 0);\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Opens a submenu.\r\n       * @function\r\n       * @fires Drilldown#open\r\n       * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\r\n       */\r\n\r\n    }, {\r\n      key: '_show',\r\n      value: function _show($elem) {\r\n        $elem.children('[data-submenu]').addClass('is-active');\r\n        /**\r\n         * Fires when the submenu has opened.\r\n         * @event Drilldown#open\r\n         */\r\n        this.$element.trigger('open.zf.drilldown', [$elem]);\r\n      }\r\n    }, {\r\n      key: '_hide',\r\n\r\n\r\n      /**\r\n       * Hides a submenu\r\n       * @function\r\n       * @fires Drilldown#hide\r\n       * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\r\n       */\r\n      value: function _hide($elem) {\r\n        var _this = this;\r\n        $elem.addClass('is-closing').one(Foundation.transitionend($elem), function () {\r\n          $elem.removeClass('is-active is-closing');\r\n          $elem.blur();\r\n        });\r\n        /**\r\n         * Fires when the submenu has closed.\r\n         * @event Drilldown#hide\r\n         */\r\n        $elem.trigger('hide.zf.drilldown', [$elem]);\r\n      }\r\n\r\n      /**\r\n       * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\r\n       * Prevents content jumping.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_getMaxDims',\r\n      value: function _getMaxDims() {\r\n        var max = 0,\r\n            result = {};\r\n        this.$submenus.add(this.$element).each(function () {\r\n          var numOfElems = $(this).children('li').length;\r\n          max = numOfElems > max ? numOfElems : max;\r\n        });\r\n\r\n        result['min-height'] = max * this.$menuItems[0].getBoundingClientRect().height + 'px';\r\n        result['max-width'] = this.$element[0].getBoundingClientRect().width + 'px';\r\n\r\n        return result;\r\n      }\r\n\r\n      /**\r\n       * Destroys the Drilldown Menu\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this._hideAll();\r\n        Foundation.Nest.Burn(this.$element, 'drilldown');\r\n        this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\r\n        this.$submenuAnchors.each(function () {\r\n          $(this).off('.zf.drilldown');\r\n        });\r\n        this.$element.find('a').each(function () {\r\n          var $link = $(this);\r\n          if ($link.data('savedHref')) {\r\n            $link.attr('href', $link.data('savedHref')).removeData('savedHref');\r\n          } else {\r\n            return;\r\n          }\r\n        });\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Drilldown;\r\n  }();\r\n\r\n  Drilldown.defaults = {\r\n    /**\r\n     * Markup used for JS generated back button. Prepended to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\r\n     * @option\r\n     * @example '<\\li><\\a>Back<\\/a><\\/li>'\r\n     */\r\n    backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\r\n    /**\r\n     * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\r\n     * @option\r\n     * @example '<\\div class=\"is-drilldown\"><\\/div>'\r\n     */\r\n    wrapper: '<div></div>',\r\n    /**\r\n     * Adds the parent link to the submenu.\r\n     * @option\r\n     * @example false\r\n     */\r\n    parentLink: false,\r\n    /**\r\n     * Allow the menu to return to root list on body click.\r\n     * @option\r\n     * @example false\r\n     */\r\n    closeOnClick: false\r\n    // holdOpen: false\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Drilldown, 'Drilldown');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Dropdown module.\r\n   * @module foundation.dropdown\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   */\r\n\r\n  var Dropdown = function () {\r\n    /**\r\n     * Creates a new instance of a dropdown.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into a dropdown.\r\n     *        Object should be of the dropdown panel, rather than its anchor.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Dropdown(element, options) {\r\n      _classCallCheck(this, Dropdown);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Dropdown');\r\n      Foundation.Keyboard.register('Dropdown', {\r\n        'ENTER': 'open',\r\n        'SPACE': 'open',\r\n        'ESCAPE': 'close',\r\n        'TAB': 'tab_forward',\r\n        'SHIFT_TAB': 'tab_backward'\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\r\n     * @function\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Dropdown, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var $id = this.$element.attr('id');\r\n\r\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]') || $('[data-open=\"' + $id + '\"]');\r\n        this.$anchor.attr({\r\n          'aria-controls': $id,\r\n          'data-is-focus': false,\r\n          'data-yeti-box': $id,\r\n          'aria-haspopup': true,\r\n          'aria-expanded': false\r\n\r\n        });\r\n\r\n        this.options.positionClass = this.getPositionClass();\r\n        this.counter = 4;\r\n        this.usedPositions = [];\r\n        this.$element.attr({\r\n          'aria-hidden': 'true',\r\n          'data-yeti-box': $id,\r\n          'data-resize': $id,\r\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\r\n        });\r\n        this._events();\r\n      }\r\n\r\n      /**\r\n       * Helper function to determine current orientation of dropdown pane.\r\n       * @function\r\n       * @returns {String} position - string value of a position class.\r\n       */\r\n\r\n    }, {\r\n      key: 'getPositionClass',\r\n      value: function getPositionClass() {\r\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\r\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\r\n        var horizontalPosition = /float-(\\S+)\\s/.exec(this.$anchor[0].className);\r\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\r\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\r\n        return position;\r\n      }\r\n\r\n      /**\r\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\r\n       * @function\r\n       * @private\r\n       * @param {String} position - position class to remove.\r\n       */\r\n\r\n    }, {\r\n      key: '_reposition',\r\n      value: function _reposition(position) {\r\n        this.usedPositions.push(position ? position : 'bottom');\r\n        //default, try switching to opposite side\r\n        if (!position && this.usedPositions.indexOf('top') < 0) {\r\n          this.$element.addClass('top');\r\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\r\n          this.$element.removeClass(position);\r\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\r\n          this.$element.removeClass(position).addClass('right');\r\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\r\n          this.$element.removeClass(position).addClass('left');\r\n        }\r\n\r\n        //if default change didn't work, try bottom or left first\r\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\r\n            this.$element.addClass('left');\r\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\r\n            this.$element.removeClass(position).addClass('left');\r\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\r\n            this.$element.removeClass(position);\r\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\r\n            this.$element.removeClass(position);\r\n          }\r\n          //if nothing cleared, set to bottom\r\n          else {\r\n              this.$element.removeClass(position);\r\n            }\r\n        this.classChanged = true;\r\n        this.counter--;\r\n      }\r\n\r\n      /**\r\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\r\n       * Recursively calls itself if a collision is detected, with a new position class.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_setPosition',\r\n      value: function _setPosition() {\r\n        if (this.$anchor.attr('aria-expanded') === 'false') {\r\n          return false;\r\n        }\r\n        var position = this.getPositionClass(),\r\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\r\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\r\n            _this = this,\r\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\r\n            param = direction === 'top' ? 'height' : 'width',\r\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\r\n\r\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element)) {\r\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\r\n            'width': $eleDims.windowDims.width - this.options.hOffset * 2,\r\n            'height': 'auto'\r\n          });\r\n          this.classChanged = true;\r\n          return false;\r\n        }\r\n\r\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\r\n\r\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter) {\r\n          this._reposition(position);\r\n          this._setPosition();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Adds event listeners to the element utilizing the triggers utility library.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this;\r\n        this.$element.on({\r\n          'open.zf.trigger': this.open.bind(this),\r\n          'close.zf.trigger': this.close.bind(this),\r\n          'toggle.zf.trigger': this.toggle.bind(this),\r\n          'resizeme.zf.trigger': this._setPosition.bind(this)\r\n        });\r\n\r\n        if (this.options.hover) {\r\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\r\n            clearTimeout(_this.timeout);\r\n            _this.timeout = setTimeout(function () {\r\n              _this.open();\r\n              _this.$anchor.data('hover', true);\r\n            }, _this.options.hoverDelay);\r\n          }).on('mouseleave.zf.dropdown', function () {\r\n            clearTimeout(_this.timeout);\r\n            _this.timeout = setTimeout(function () {\r\n              _this.close();\r\n              _this.$anchor.data('hover', false);\r\n            }, _this.options.hoverDelay);\r\n          });\r\n          if (this.options.hoverPane) {\r\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\r\n              clearTimeout(_this.timeout);\r\n            }).on('mouseleave.zf.dropdown', function () {\r\n              clearTimeout(_this.timeout);\r\n              _this.timeout = setTimeout(function () {\r\n                _this.close();\r\n                _this.$anchor.data('hover', false);\r\n              }, _this.options.hoverDelay);\r\n            });\r\n          }\r\n        }\r\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\r\n\r\n          var $target = $(this),\r\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\r\n\r\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\r\n            tab_forward: function () {\r\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) {\r\n                // left modal downwards, setting focus to first element\r\n                if (_this.options.trapFocus) {\r\n                  // if focus shall be trapped\r\n                  visibleFocusableElements.eq(0).focus();\r\n                  e.preventDefault();\r\n                } else {\r\n                  // if focus is not trapped, close dropdown on focus out\r\n                  _this.close();\r\n                }\r\n              }\r\n            },\r\n            tab_backward: function () {\r\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) {\r\n                // left modal upwards, setting focus to last element\r\n                if (_this.options.trapFocus) {\r\n                  // if focus shall be trapped\r\n                  visibleFocusableElements.eq(-1).focus();\r\n                  e.preventDefault();\r\n                } else {\r\n                  // if focus is not trapped, close dropdown on focus out\r\n                  _this.close();\r\n                }\r\n              }\r\n            },\r\n            open: function () {\r\n              if ($target.is(_this.$anchor)) {\r\n                _this.open();\r\n                _this.$element.attr('tabindex', -1).focus();\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            close: function () {\r\n              _this.close();\r\n              _this.$anchor.focus();\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Adds an event handler to the body to close any dropdowns on a click.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_addBodyHandler',\r\n      value: function _addBodyHandler() {\r\n        var $body = $(document.body).not(this.$element),\r\n            _this = this;\r\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\r\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\r\n            return;\r\n          }\r\n          if (_this.$element.find(e.target).length) {\r\n            return;\r\n          }\r\n          _this.close();\r\n          $body.off('click.zf.dropdown');\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\r\n       * @function\r\n       * @fires Dropdown#closeme\r\n       * @fires Dropdown#show\r\n       */\r\n\r\n    }, {\r\n      key: 'open',\r\n      value: function open() {\r\n        // var _this = this;\r\n        /**\r\n         * Fires to close other open dropdowns\r\n         * @event Dropdown#closeme\r\n         */\r\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\r\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\r\n        // this.$element/*.show()*/;\r\n        this._setPosition();\r\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\r\n\r\n        if (this.options.autoFocus) {\r\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\r\n          if ($focusable.length) {\r\n            $focusable.eq(0).focus();\r\n          }\r\n        }\r\n\r\n        if (this.options.closeOnClick) {\r\n          this._addBodyHandler();\r\n        }\r\n\r\n        /**\r\n         * Fires once the dropdown is visible.\r\n         * @event Dropdown#show\r\n         */\r\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\r\n      }\r\n\r\n      /**\r\n       * Closes the open dropdown pane.\r\n       * @function\r\n       * @fires Dropdown#hide\r\n       */\r\n\r\n    }, {\r\n      key: 'close',\r\n      value: function close() {\r\n        if (!this.$element.hasClass('is-open')) {\r\n          return false;\r\n        }\r\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\r\n\r\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\r\n\r\n        if (this.classChanged) {\r\n          var curPositionClass = this.getPositionClass();\r\n          if (curPositionClass) {\r\n            this.$element.removeClass(curPositionClass);\r\n          }\r\n          this.$element.addClass(this.options.positionClass)\r\n          /*.hide()*/.css({ height: '', width: '' });\r\n          this.classChanged = false;\r\n          this.counter = 4;\r\n          this.usedPositions.length = 0;\r\n        }\r\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\r\n      }\r\n\r\n      /**\r\n       * Toggles the dropdown pane's visibility.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'toggle',\r\n      value: function toggle() {\r\n        if (this.$element.hasClass('is-open')) {\r\n          if (this.$anchor.data('hover')) return;\r\n          this.close();\r\n        } else {\r\n          this.open();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Destroys the dropdown.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.off('.zf.trigger').hide();\r\n        this.$anchor.off('.zf.dropdown');\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Dropdown;\r\n  }();\r\n\r\n  Dropdown.defaults = {\r\n    /**\r\n     * Amount of time to delay opening a submenu on hover event.\r\n     * @option\r\n     * @example 250\r\n     */\r\n    hoverDelay: 250,\r\n    /**\r\n     * Allow submenus to open on hover events\r\n     * @option\r\n     * @example false\r\n     */\r\n    hover: false,\r\n    /**\r\n     * Don't close dropdown when hovering over dropdown pane\r\n     * @option\r\n     * @example true\r\n     */\r\n    hoverPane: false,\r\n    /**\r\n     * Number of pixels between the dropdown pane and the triggering element on open.\r\n     * @option\r\n     * @example 1\r\n     */\r\n    vOffset: 1,\r\n    /**\r\n     * Number of pixels between the dropdown pane and the triggering element on open.\r\n     * @option\r\n     * @example 1\r\n     */\r\n    hOffset: 1,\r\n    /**\r\n     * Class applied to adjust open position. JS will test and fill this in.\r\n     * @option\r\n     * @example 'top'\r\n     */\r\n    positionClass: '',\r\n    /**\r\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\r\n     * @option\r\n     * @example false\r\n     */\r\n    trapFocus: false,\r\n    /**\r\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\r\n     * @option\r\n     * @example true\r\n     */\r\n    autoFocus: false,\r\n    /**\r\n     * Allows a click on the body to close the dropdown.\r\n     * @option\r\n     * @example false\r\n     */\r\n    closeOnClick: false\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Dropdown, 'Dropdown');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * DropdownMenu module.\r\n   * @module foundation.dropdown-menu\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.nest\r\n   */\r\n\r\n  var DropdownMenu = function () {\r\n    /**\r\n     * Creates a new instance of DropdownMenu.\r\n     * @class\r\n     * @fires DropdownMenu#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function DropdownMenu(element, options) {\r\n      _classCallCheck(this, DropdownMenu);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\r\n\r\n      Foundation.Nest.Feather(this.$element, 'dropdown');\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'DropdownMenu');\r\n      Foundation.Keyboard.register('DropdownMenu', {\r\n        'ENTER': 'open',\r\n        'SPACE': 'open',\r\n        'ARROW_RIGHT': 'next',\r\n        'ARROW_UP': 'up',\r\n        'ARROW_DOWN': 'down',\r\n        'ARROW_LEFT': 'previous',\r\n        'ESCAPE': 'close'\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initializes the plugin, and calls _prepareMenu\r\n     * @private\r\n     * @function\r\n     */\r\n\r\n\r\n    _createClass(DropdownMenu, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var subs = this.$element.find('li.is-dropdown-submenu-parent');\r\n        this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\r\n\r\n        this.$menuItems = this.$element.find('[role=\"menuitem\"]');\r\n        this.$tabs = this.$element.children('[role=\"menuitem\"]');\r\n        this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\r\n\r\n        if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\r\n          this.options.alignment = 'right';\r\n          subs.addClass('opens-left');\r\n        } else {\r\n          subs.addClass('opens-right');\r\n        }\r\n        this.changed = false;\r\n        this._events();\r\n      }\r\n    }, {\r\n      key: '_events',\r\n\r\n      /**\r\n       * Adds event listeners to elements within the menu\r\n       * @private\r\n       * @function\r\n       */\r\n      value: function _events() {\r\n        var _this = this,\r\n            hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\r\n            parClass = 'is-dropdown-submenu-parent';\r\n\r\n        // used for onClick and in the keyboard handlers\r\n        var handleClickFn = function (e) {\r\n          var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\r\n              hasSub = $elem.hasClass(parClass),\r\n              hasClicked = $elem.attr('data-is-click') === 'true',\r\n              $sub = $elem.children('.is-dropdown-submenu');\r\n\r\n          if (hasSub) {\r\n            if (hasClicked) {\r\n              if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\r\n                return;\r\n              } else {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n                _this._hide($elem);\r\n              }\r\n            } else {\r\n              e.preventDefault();\r\n              e.stopImmediatePropagation();\r\n              _this._show($elem.children('.is-dropdown-submenu'));\r\n              $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\r\n            }\r\n          } else {\r\n            return;\r\n          }\r\n        };\r\n\r\n        if (this.options.clickOpen || hasTouch) {\r\n          this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\r\n        }\r\n\r\n        if (!this.options.disableHover) {\r\n          this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\r\n            var $elem = $(this),\r\n                hasSub = $elem.hasClass(parClass);\r\n\r\n            if (hasSub) {\r\n              clearTimeout(_this.delay);\r\n              _this.delay = setTimeout(function () {\r\n                _this._show($elem.children('.is-dropdown-submenu'));\r\n              }, _this.options.hoverDelay);\r\n            }\r\n          }).on('mouseleave.zf.dropdownmenu', function (e) {\r\n            var $elem = $(this),\r\n                hasSub = $elem.hasClass(parClass);\r\n            if (hasSub && _this.options.autoclose) {\r\n              if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\r\n                return false;\r\n              }\r\n\r\n              clearTimeout(_this.delay);\r\n              _this.delay = setTimeout(function () {\r\n                _this._hide($elem);\r\n              }, _this.options.closingTime);\r\n            }\r\n          });\r\n        }\r\n        this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\r\n          var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\r\n              isTab = _this.$tabs.index($element) > -1,\r\n              $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\r\n              $prevElement,\r\n              $nextElement;\r\n\r\n          $elements.each(function (i) {\r\n            if ($(this).is($element)) {\r\n              $prevElement = $elements.eq(i - 1);\r\n              $nextElement = $elements.eq(i + 1);\r\n              return;\r\n            }\r\n          });\r\n\r\n          var nextSibling = function () {\r\n            if (!$element.is(':last-child')) {\r\n              $nextElement.children('a:first').focus();\r\n              e.preventDefault();\r\n            }\r\n          },\r\n              prevSibling = function () {\r\n            $prevElement.children('a:first').focus();\r\n            e.preventDefault();\r\n          },\r\n              openSub = function () {\r\n            var $sub = $element.children('ul.is-dropdown-submenu');\r\n            if ($sub.length) {\r\n              _this._show($sub);\r\n              $element.find('li > a:first').focus();\r\n              e.preventDefault();\r\n            } else {\r\n              return;\r\n            }\r\n          },\r\n              closeSub = function () {\r\n            //if ($element.is(':first-child')) {\r\n            var close = $element.parent('ul').parent('li');\r\n            close.children('a:first').focus();\r\n            _this._hide(close);\r\n            e.preventDefault();\r\n            //}\r\n          };\r\n          var functions = {\r\n            open: openSub,\r\n            close: function () {\r\n              _this._hide(_this.$element);\r\n              _this.$menuItems.find('a:first').focus(); // focus to first element\r\n              e.preventDefault();\r\n            },\r\n            handled: function () {\r\n              e.stopImmediatePropagation();\r\n            }\r\n          };\r\n\r\n          if (isTab) {\r\n            if (_this.$element.hasClass(_this.options.verticalClass)) {\r\n              // vertical menu\r\n              if (_this.options.alignment === 'left') {\r\n                // left aligned\r\n                $.extend(functions, {\r\n                  down: nextSibling,\r\n                  up: prevSibling,\r\n                  next: openSub,\r\n                  previous: closeSub\r\n                });\r\n              } else {\r\n                // right aligned\r\n                $.extend(functions, {\r\n                  down: nextSibling,\r\n                  up: prevSibling,\r\n                  next: closeSub,\r\n                  previous: openSub\r\n                });\r\n              }\r\n            } else {\r\n              // horizontal menu\r\n              $.extend(functions, {\r\n                next: nextSibling,\r\n                previous: prevSibling,\r\n                down: openSub,\r\n                up: closeSub\r\n              });\r\n            }\r\n          } else {\r\n            // not tabs -> one sub\r\n            if (_this.options.alignment === 'left') {\r\n              // left aligned\r\n              $.extend(functions, {\r\n                next: openSub,\r\n                previous: closeSub,\r\n                down: nextSibling,\r\n                up: prevSibling\r\n              });\r\n            } else {\r\n              // right aligned\r\n              $.extend(functions, {\r\n                next: closeSub,\r\n                previous: openSub,\r\n                down: nextSibling,\r\n                up: prevSibling\r\n              });\r\n            }\r\n          }\r\n          Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Adds an event handler to the body to close any dropdowns on a click.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_addBodyHandler',\r\n      value: function _addBodyHandler() {\r\n        var $body = $(document.body),\r\n            _this = this;\r\n        $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\r\n          var $link = _this.$element.find(e.target);\r\n          if ($link.length) {\r\n            return;\r\n          }\r\n\r\n          _this._hide();\r\n          $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Opens a dropdown pane, and checks for collisions first.\r\n       * @param {jQuery} $sub - ul element that is a submenu to show\r\n       * @function\r\n       * @private\r\n       * @fires DropdownMenu#show\r\n       */\r\n\r\n    }, {\r\n      key: '_show',\r\n      value: function _show($sub) {\r\n        var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\r\n          return $(el).find($sub).length > 0;\r\n        }));\r\n        var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\r\n        this._hide($sibs, idx);\r\n        $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({ 'aria-hidden': false }).parent('li.is-dropdown-submenu-parent').addClass('is-active').attr({ 'aria-expanded': true });\r\n        var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\r\n        if (!clear) {\r\n          var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\r\n              $parentLi = $sub.parent('.is-dropdown-submenu-parent');\r\n          $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\r\n          clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\r\n          if (!clear) {\r\n            $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\r\n          }\r\n          this.changed = true;\r\n        }\r\n        $sub.css('visibility', '');\r\n        if (this.options.closeOnClick) {\r\n          this._addBodyHandler();\r\n        }\r\n        /**\r\n         * Fires when the new dropdown pane is visible.\r\n         * @event DropdownMenu#show\r\n         */\r\n        this.$element.trigger('show.zf.dropdownmenu', [$sub]);\r\n      }\r\n\r\n      /**\r\n       * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\r\n       * @function\r\n       * @param {jQuery} $elem - element with a submenu to hide\r\n       * @param {Number} idx - index of the $tabs collection to hide\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_hide',\r\n      value: function _hide($elem, idx) {\r\n        var $toClose;\r\n        if ($elem && $elem.length) {\r\n          $toClose = $elem;\r\n        } else if (idx !== undefined) {\r\n          $toClose = this.$tabs.not(function (i, el) {\r\n            return i === idx;\r\n          });\r\n        } else {\r\n          $toClose = this.$element;\r\n        }\r\n        var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\r\n\r\n        if (somethingToClose) {\r\n          $toClose.find('li.is-active').add($toClose).attr({\r\n            'aria-expanded': false,\r\n            'data-is-click': false\r\n          }).removeClass('is-active');\r\n\r\n          $toClose.find('ul.js-dropdown-active').attr({\r\n            'aria-hidden': true\r\n          }).removeClass('js-dropdown-active');\r\n\r\n          if (this.changed || $toClose.find('opens-inner').length) {\r\n            var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\r\n            $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\r\n            this.changed = false;\r\n          }\r\n          /**\r\n           * Fires when the open menus are closed.\r\n           * @event DropdownMenu#hide\r\n           */\r\n          this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Destroys the plugin.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\r\n        $(document.body).off('.zf.dropdownmenu');\r\n        Foundation.Nest.Burn(this.$element, 'dropdown');\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return DropdownMenu;\r\n  }();\r\n\r\n  /**\r\n   * Default settings for plugin\r\n   */\r\n\r\n\r\n  DropdownMenu.defaults = {\r\n    /**\r\n     * Disallows hover events from opening submenus\r\n     * @option\r\n     * @example false\r\n     */\r\n    disableHover: false,\r\n    /**\r\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\r\n     * @option\r\n     * @example true\r\n     */\r\n    autoclose: true,\r\n    /**\r\n     * Amount of time to delay opening a submenu on hover event.\r\n     * @option\r\n     * @example 50\r\n     */\r\n    hoverDelay: 50,\r\n    /**\r\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\r\n     * @option\r\n     * @example true\r\n     */\r\n    clickOpen: false,\r\n    /**\r\n     * Amount of time to delay closing a submenu on a mouseleave event.\r\n     * @option\r\n     * @example 500\r\n     */\r\n\r\n    closingTime: 500,\r\n    /**\r\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\r\n     * @option\r\n     * @example 'left'\r\n     */\r\n    alignment: 'left',\r\n    /**\r\n     * Allow clicks on the body to close any open submenus.\r\n     * @option\r\n     * @example true\r\n     */\r\n    closeOnClick: true,\r\n    /**\r\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\r\n     * @option\r\n     * @example 'vertical'\r\n     */\r\n    verticalClass: 'vertical',\r\n    /**\r\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\r\n     * @option\r\n     * @example 'align-right'\r\n     */\r\n    rightClass: 'align-right',\r\n    /**\r\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\r\n     * @option\r\n     * @example false\r\n     */\r\n    forceFollow: true\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Equalizer module.\r\n   * @module foundation.equalizer\r\n   */\r\n\r\n  var Equalizer = function () {\r\n    /**\r\n     * Creates a new instance of Equalizer.\r\n     * @class\r\n     * @fires Equalizer#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Equalizer(element, options) {\r\n      _classCallCheck(this, Equalizer);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Equalizer.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Equalizer');\r\n    }\r\n\r\n    /**\r\n     * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Equalizer, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var eqId = this.$element.attr('data-equalizer') || '';\r\n        var $watched = this.$element.find('[data-equalizer-watch=\"' + eqId + '\"]');\r\n\r\n        this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\r\n        this.$element.attr('data-resize', eqId || Foundation.GetYoDigits(6, 'eq'));\r\n\r\n        this.hasNested = this.$element.find('[data-equalizer]').length > 0;\r\n        this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\r\n        this.isOn = false;\r\n        this._bindHandler = {\r\n          onResizeMeBound: this._onResizeMe.bind(this),\r\n          onPostEqualizedBound: this._onPostEqualized.bind(this)\r\n        };\r\n\r\n        var imgs = this.$element.find('img');\r\n        var tooSmall;\r\n        if (this.options.equalizeOn) {\r\n          tooSmall = this._checkMQ();\r\n          $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\r\n        } else {\r\n          this._events();\r\n        }\r\n        if (tooSmall !== undefined && tooSmall === false || tooSmall === undefined) {\r\n          if (imgs.length) {\r\n            Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\r\n          } else {\r\n            this._reflow();\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Removes event listeners if the breakpoint is too small.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_pauseEvents',\r\n      value: function _pauseEvents() {\r\n        this.isOn = false;\r\n        this.$element.off({\r\n          '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\r\n          'resizeme.zf.trigger': this._bindHandler.onResizeMeBound\r\n        });\r\n      }\r\n\r\n      /**\r\n       * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_onResizeMe',\r\n      value: function _onResizeMe(e) {\r\n        this._reflow();\r\n      }\r\n\r\n      /**\r\n       * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_onPostEqualized',\r\n      value: function _onPostEqualized(e) {\r\n        if (e.target !== this.$element[0]) {\r\n          this._reflow();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Initializes events for Equalizer.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this;\r\n        this._pauseEvents();\r\n        if (this.hasNested) {\r\n          this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\r\n        } else {\r\n          this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\r\n        }\r\n        this.isOn = true;\r\n      }\r\n\r\n      /**\r\n       * Checks the current breakpoint to the minimum required size.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_checkMQ',\r\n      value: function _checkMQ() {\r\n        var tooSmall = !Foundation.MediaQuery.atLeast(this.options.equalizeOn);\r\n        if (tooSmall) {\r\n          if (this.isOn) {\r\n            this._pauseEvents();\r\n            this.$watched.css('height', 'auto');\r\n          }\r\n        } else {\r\n          if (!this.isOn) {\r\n            this._events();\r\n          }\r\n        }\r\n        return tooSmall;\r\n      }\r\n\r\n      /**\r\n       * A noop version for the plugin\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_killswitch',\r\n      value: function _killswitch() {\r\n        return;\r\n      }\r\n\r\n      /**\r\n       * Calls necessary functions to update Equalizer upon DOM change\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_reflow',\r\n      value: function _reflow() {\r\n        if (!this.options.equalizeOnStack) {\r\n          if (this._isStacked()) {\r\n            this.$watched.css('height', 'auto');\r\n            return false;\r\n          }\r\n        }\r\n        if (this.options.equalizeByRow) {\r\n          this.getHeightsByRow(this.applyHeightByRow.bind(this));\r\n        } else {\r\n          this.getHeights(this.applyHeight.bind(this));\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Manually determines if the first 2 elements are *NOT* stacked.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_isStacked',\r\n      value: function _isStacked() {\r\n        return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\r\n      }\r\n\r\n      /**\r\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n       * @param {Function} cb - A non-optional callback to return the heights array to.\r\n       * @returns {Array} heights - An array of heights of children within Equalizer container\r\n       */\r\n\r\n    }, {\r\n      key: 'getHeights',\r\n      value: function getHeights(cb) {\r\n        var heights = [];\r\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\r\n          this.$watched[i].style.height = 'auto';\r\n          heights.push(this.$watched[i].offsetHeight);\r\n        }\r\n        cb(heights);\r\n      }\r\n\r\n      /**\r\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\r\n       * @param {Function} cb - A non-optional callback to return the heights array to.\r\n       * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n       */\r\n\r\n    }, {\r\n      key: 'getHeightsByRow',\r\n      value: function getHeightsByRow(cb) {\r\n        var lastElTopOffset = this.$watched.length ? this.$watched.first().offset().top : 0,\r\n            groups = [],\r\n            group = 0;\r\n        //group by Row\r\n        groups[group] = [];\r\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\r\n          this.$watched[i].style.height = 'auto';\r\n          //maybe could use this.$watched[i].offsetTop\r\n          var elOffsetTop = $(this.$watched[i]).offset().top;\r\n          if (elOffsetTop != lastElTopOffset) {\r\n            group++;\r\n            groups[group] = [];\r\n            lastElTopOffset = elOffsetTop;\r\n          }\r\n          groups[group].push([this.$watched[i], this.$watched[i].offsetHeight]);\r\n        }\r\n\r\n        for (var j = 0, ln = groups.length; j < ln; j++) {\r\n          var heights = $(groups[j]).map(function () {\r\n            return this[1];\r\n          }).get();\r\n          var max = Math.max.apply(null, heights);\r\n          groups[j].push(max);\r\n        }\r\n        cb(groups);\r\n      }\r\n\r\n      /**\r\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest\r\n       * @param {array} heights - An array of heights of children within Equalizer container\r\n       * @fires Equalizer#preequalized\r\n       * @fires Equalizer#postequalized\r\n       */\r\n\r\n    }, {\r\n      key: 'applyHeight',\r\n      value: function applyHeight(heights) {\r\n        var max = Math.max.apply(null, heights);\r\n        /**\r\n         * Fires before the heights are applied\r\n         * @event Equalizer#preequalized\r\n         */\r\n        this.$element.trigger('preequalized.zf.equalizer');\r\n\r\n        this.$watched.css('height', max);\r\n\r\n        /**\r\n         * Fires when the heights have been applied\r\n         * @event Equalizer#postequalized\r\n         */\r\n        this.$element.trigger('postequalized.zf.equalizer');\r\n      }\r\n\r\n      /**\r\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\r\n       * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\r\n       * @fires Equalizer#preequalized\r\n       * @fires Equalizer#preequalizedRow\r\n       * @fires Equalizer#postequalizedRow\r\n       * @fires Equalizer#postequalized\r\n       */\r\n\r\n    }, {\r\n      key: 'applyHeightByRow',\r\n      value: function applyHeightByRow(groups) {\r\n        /**\r\n         * Fires before the heights are applied\r\n         */\r\n        this.$element.trigger('preequalized.zf.equalizer');\r\n        for (var i = 0, len = groups.length; i < len; i++) {\r\n          var groupsILength = groups[i].length,\r\n              max = groups[i][groupsILength - 1];\r\n          if (groupsILength <= 2) {\r\n            $(groups[i][0][0]).css({ 'height': 'auto' });\r\n            continue;\r\n          }\r\n          /**\r\n            * Fires before the heights per row are applied\r\n            * @event Equalizer#preequalizedRow\r\n            */\r\n          this.$element.trigger('preequalizedrow.zf.equalizer');\r\n          for (var j = 0, lenJ = groupsILength - 1; j < lenJ; j++) {\r\n            $(groups[i][j][0]).css({ 'height': max });\r\n          }\r\n          /**\r\n            * Fires when the heights per row have been applied\r\n            * @event Equalizer#postequalizedRow\r\n            */\r\n          this.$element.trigger('postequalizedrow.zf.equalizer');\r\n        }\r\n        /**\r\n         * Fires when the heights have been applied\r\n         */\r\n        this.$element.trigger('postequalized.zf.equalizer');\r\n      }\r\n\r\n      /**\r\n       * Destroys an instance of Equalizer.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this._pauseEvents();\r\n        this.$watched.css('height', 'auto');\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Equalizer;\r\n  }();\r\n\r\n  /**\r\n   * Default settings for plugin\r\n   */\r\n\r\n\r\n  Equalizer.defaults = {\r\n    /**\r\n     * Enable height equalization when stacked on smaller screens.\r\n     * @option\r\n     * @example true\r\n     */\r\n    equalizeOnStack: true,\r\n    /**\r\n     * Enable height equalization row by row.\r\n     * @option\r\n     * @example false\r\n     */\r\n    equalizeByRow: false,\r\n    /**\r\n     * String representing the minimum breakpoint size the plugin should equalize heights on.\r\n     * @option\r\n     * @example 'medium'\r\n     */\r\n    equalizeOn: ''\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Equalizer, 'Equalizer');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Interchange module.\r\n   * @module foundation.interchange\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.timerAndImageLoader\r\n   */\r\n\r\n  var Interchange = function () {\r\n    /**\r\n     * Creates a new instance of Interchange.\r\n     * @class\r\n     * @fires Interchange#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Interchange(element, options) {\r\n      _classCallCheck(this, Interchange);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Interchange.defaults, options);\r\n      this.rules = [];\r\n      this.currentPath = '';\r\n\r\n      this._init();\r\n      this._events();\r\n\r\n      Foundation.registerPlugin(this, 'Interchange');\r\n    }\r\n\r\n    /**\r\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\r\n     * @function\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Interchange, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        this._addBreakpoints();\r\n        this._generateRules();\r\n        this._reflow();\r\n      }\r\n\r\n      /**\r\n       * Initializes events for Interchange.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        $(window).on('resize.zf.interchange', Foundation.util.throttle(this._reflow.bind(this), 50));\r\n      }\r\n\r\n      /**\r\n       * Calls necessary functions to update Interchange upon DOM change\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_reflow',\r\n      value: function _reflow() {\r\n        var match;\r\n\r\n        // Iterate through each rule, but only save the last match\r\n        for (var i in this.rules) {\r\n          if (this.rules.hasOwnProperty(i)) {\r\n            var rule = this.rules[i];\r\n\r\n            if (window.matchMedia(rule.query).matches) {\r\n              match = rule;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (match) {\r\n          this.replace(match.path);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_addBreakpoints',\r\n      value: function _addBreakpoints() {\r\n        for (var i in Foundation.MediaQuery.queries) {\r\n          if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\r\n            var query = Foundation.MediaQuery.queries[i];\r\n            Interchange.SPECIAL_QUERIES[query.name] = query.value;\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Checks the Interchange element for the provided media query + content pairings\r\n       * @function\r\n       * @private\r\n       * @param {Object} element - jQuery object that is an Interchange instance\r\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\r\n       */\r\n\r\n    }, {\r\n      key: '_generateRules',\r\n      value: function _generateRules(element) {\r\n        var rulesList = [];\r\n        var rules;\r\n\r\n        if (this.options.rules) {\r\n          rules = this.options.rules;\r\n        } else {\r\n          rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\r\n        }\r\n\r\n        for (var i in rules) {\r\n          if (rules.hasOwnProperty(i)) {\r\n            var rule = rules[i].slice(1, -1).split(', ');\r\n            var path = rule.slice(0, -1).join('');\r\n            var query = rule[rule.length - 1];\r\n\r\n            if (Interchange.SPECIAL_QUERIES[query]) {\r\n              query = Interchange.SPECIAL_QUERIES[query];\r\n            }\r\n\r\n            rulesList.push({\r\n              path: path,\r\n              query: query\r\n            });\r\n          }\r\n        }\r\n\r\n        this.rules = rulesList;\r\n      }\r\n\r\n      /**\r\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\r\n       * @function\r\n       * @param {String} path - Path to the image or HTML partial.\r\n       * @fires Interchange#replaced\r\n       */\r\n\r\n    }, {\r\n      key: 'replace',\r\n      value: function replace(path) {\r\n        if (this.currentPath === path) return;\r\n\r\n        var _this = this,\r\n            trigger = 'replaced.zf.interchange';\r\n\r\n        // Replacing images\r\n        if (this.$element[0].nodeName === 'IMG') {\r\n          this.$element.attr('src', path).load(function () {\r\n            _this.currentPath = path;\r\n          }).trigger(trigger);\r\n        }\r\n        // Replacing background images\r\n        else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\r\n            this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\r\n          }\r\n          // Replacing HTML\r\n          else {\r\n              $.get(path, function (response) {\r\n                _this.$element.html(response).trigger(trigger);\r\n                $(response).foundation();\r\n                _this.currentPath = path;\r\n              });\r\n            }\r\n\r\n        /**\r\n         * Fires when content in an Interchange element is done being loaded.\r\n         * @event Interchange#replaced\r\n         */\r\n        // this.$element.trigger('replaced.zf.interchange');\r\n      }\r\n\r\n      /**\r\n       * Destroys an instance of interchange.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        //TODO this.\r\n      }\r\n    }]);\r\n\r\n    return Interchange;\r\n  }();\r\n\r\n  /**\r\n   * Default settings for plugin\r\n   */\r\n\r\n\r\n  Interchange.defaults = {\r\n    /**\r\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\r\n     * @option\r\n     */\r\n    rules: null\r\n  };\r\n\r\n  Interchange.SPECIAL_QUERIES = {\r\n    'landscape': 'screen and (orientation: landscape)',\r\n    'portrait': 'screen and (orientation: portrait)',\r\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Interchange, 'Interchange');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Magellan module.\r\n   * @module foundation.magellan\r\n   */\r\n\r\n  var Magellan = function () {\r\n    /**\r\n     * Creates a new instance of Magellan.\r\n     * @class\r\n     * @fires Magellan#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Magellan(element, options) {\r\n      _classCallCheck(this, Magellan);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Magellan.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Magellan');\r\n    }\r\n\r\n    /**\r\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Magellan, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\r\n        var _this = this;\r\n        this.$targets = $('[data-magellan-target]');\r\n        this.$links = this.$element.find('a');\r\n        this.$element.attr({\r\n          'data-resize': id,\r\n          'data-scroll': id,\r\n          'id': id\r\n        });\r\n        this.$active = $();\r\n        this.scrollPos = parseInt(window.pageYOffset, 10);\r\n\r\n        this._events();\r\n      }\r\n\r\n      /**\r\n       * Calculates an array of pixel values that are the demarcation lines between locations on the page.\r\n       * Can be invoked if new elements are added or the size of a location changes.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'calcPoints',\r\n      value: function calcPoints() {\r\n        var _this = this,\r\n            body = document.body,\r\n            html = document.documentElement;\r\n\r\n        this.points = [];\r\n        this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\r\n        this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\r\n\r\n        this.$targets.each(function () {\r\n          var $tar = $(this),\r\n              pt = Math.round($tar.offset().top - _this.options.threshold);\r\n          $tar.targetPoint = pt;\r\n          _this.points.push(pt);\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Initializes events for Magellan.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this,\r\n            $body = $('html, body'),\r\n            opts = {\r\n          duration: _this.options.animationDuration,\r\n          easing: _this.options.animationEasing\r\n        };\r\n        $(window).one('load', function () {\r\n          if (_this.options.deepLinking) {\r\n            if (location.hash) {\r\n              _this.scrollToLoc(location.hash);\r\n            }\r\n          }\r\n          _this.calcPoints();\r\n          _this._updateActive();\r\n        });\r\n\r\n        this.$element.on({\r\n          'resizeme.zf.trigger': this.reflow.bind(this),\r\n          'scrollme.zf.trigger': this._updateActive.bind(this)\r\n        }).on('click.zf.magellan', 'a[href^=\"#\"]', function (e) {\r\n          e.preventDefault();\r\n          var arrival = this.getAttribute('href');\r\n          _this.scrollToLoc(arrival);\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Function to scroll to a given location on the page.\r\n       * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'scrollToLoc',\r\n      value: function scrollToLoc(loc) {\r\n        var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\r\n\r\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\r\n      }\r\n\r\n      /**\r\n       * Calls necessary functions to update Magellan upon DOM change\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'reflow',\r\n      value: function reflow() {\r\n        this.calcPoints();\r\n        this._updateActive();\r\n      }\r\n\r\n      /**\r\n       * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\r\n       * @private\r\n       * @function\r\n       * @fires Magellan#update\r\n       */\r\n\r\n    }, {\r\n      key: '_updateActive',\r\n      value: function _updateActive() /*evt, elem, scrollPos*/{\r\n        var winPos = /*scrollPos ||*/parseInt(window.pageYOffset, 10),\r\n            curIdx;\r\n\r\n        if (winPos + this.winHeight === this.docHeight) {\r\n          curIdx = this.points.length - 1;\r\n        } else if (winPos < this.points[0]) {\r\n          curIdx = 0;\r\n        } else {\r\n          var isDown = this.scrollPos < winPos,\r\n              _this = this,\r\n              curVisible = this.points.filter(function (p, i) {\r\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\r\n          });\r\n          curIdx = curVisible.length ? curVisible.length - 1 : 0;\r\n        }\r\n\r\n        this.$active.removeClass(this.options.activeClass);\r\n        this.$active = this.$links.eq(curIdx).addClass(this.options.activeClass);\r\n\r\n        if (this.options.deepLinking) {\r\n          var hash = this.$active[0].getAttribute('href');\r\n          if (window.history.pushState) {\r\n            window.history.pushState(null, null, hash);\r\n          } else {\r\n            window.location.hash = hash;\r\n          }\r\n        }\r\n\r\n        this.scrollPos = winPos;\r\n        /**\r\n         * Fires when magellan is finished updating to the new active element.\r\n         * @event Magellan#update\r\n         */\r\n        this.$element.trigger('update.zf.magellan', [this.$active]);\r\n      }\r\n\r\n      /**\r\n       * Destroys an instance of Magellan and resets the url of the window.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.off('.zf.trigger .zf.magellan').find('.' + this.options.activeClass).removeClass(this.options.activeClass);\r\n\r\n        if (this.options.deepLinking) {\r\n          var hash = this.$active[0].getAttribute('href');\r\n          window.location.hash.replace(hash, '');\r\n        }\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Magellan;\r\n  }();\r\n\r\n  /**\r\n   * Default settings for plugin\r\n   */\r\n\r\n\r\n  Magellan.defaults = {\r\n    /**\r\n     * Amount of time, in ms, the animated scrolling should take between locations.\r\n     * @option\r\n     * @example 500\r\n     */\r\n    animationDuration: 500,\r\n    /**\r\n     * Animation style to use when scrolling between locations.\r\n     * @option\r\n     * @example 'ease-in-out'\r\n     */\r\n    animationEasing: 'linear',\r\n    /**\r\n     * Number of pixels to use as a marker for location changes.\r\n     * @option\r\n     * @example 50\r\n     */\r\n    threshold: 50,\r\n    /**\r\n     * Class applied to the active locations link on the magellan container.\r\n     * @option\r\n     * @example 'active'\r\n     */\r\n    activeClass: 'active',\r\n    /**\r\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\r\n     * @option\r\n     * @example true\r\n     */\r\n    deepLinking: false,\r\n    /**\r\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\r\n     * @option\r\n     * @example 25\r\n     */\r\n    barOffset: 0\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Magellan, 'Magellan');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * OffCanvas module.\r\n   * @module foundation.offcanvas\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.motion\r\n   */\r\n\r\n  var OffCanvas = function () {\r\n    /**\r\n     * Creates a new instance of an off-canvas wrapper.\r\n     * @class\r\n     * @fires OffCanvas#init\r\n     * @param {Object} element - jQuery object to initialize.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function OffCanvas(element, options) {\r\n      _classCallCheck(this, OffCanvas);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\r\n      this.$lastTrigger = $();\r\n      this.$triggers = $();\r\n\r\n      this._init();\r\n      this._events();\r\n\r\n      Foundation.registerPlugin(this, 'OffCanvas');\r\n    }\r\n\r\n    /**\r\n     * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\r\n     * @function\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(OffCanvas, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var id = this.$element.attr('id');\r\n\r\n        this.$element.attr('aria-hidden', 'true');\r\n\r\n        // Find triggers that affect this element and add aria-expanded to them\r\n        this.$triggers = $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\r\n\r\n        // Add a close trigger over the body if necessary\r\n        if (this.options.closeOnClick) {\r\n          if ($('.js-off-canvas-exit').length) {\r\n            this.$exiter = $('.js-off-canvas-exit');\r\n          } else {\r\n            var exiter = document.createElement('div');\r\n            exiter.setAttribute('class', 'js-off-canvas-exit');\r\n            $('[data-off-canvas-content]').append(exiter);\r\n\r\n            this.$exiter = $(exiter);\r\n          }\r\n        }\r\n\r\n        this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\r\n\r\n        if (this.options.isRevealed) {\r\n          this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\r\n          this._setMQChecker();\r\n        }\r\n        if (!this.options.transitionTime) {\r\n          this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Adds event handlers to the off-canvas wrapper and the exit overlay.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        this.$element.off('.zf.trigger .zf.offcanvas').on({\r\n          'open.zf.trigger': this.open.bind(this),\r\n          'close.zf.trigger': this.close.bind(this),\r\n          'toggle.zf.trigger': this.toggle.bind(this),\r\n          'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\r\n        });\r\n\r\n        if (this.options.closeOnClick && this.$exiter.length) {\r\n          this.$exiter.on({ 'click.zf.offcanvas': this.close.bind(this) });\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Applies event listener for elements that will reveal at certain breakpoints.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_setMQChecker',\r\n      value: function _setMQChecker() {\r\n        var _this = this;\r\n\r\n        $(window).on('changed.zf.mediaquery', function () {\r\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\r\n            _this.reveal(true);\r\n          } else {\r\n            _this.reveal(false);\r\n          }\r\n        }).one('load.zf.offcanvas', function () {\r\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\r\n            _this.reveal(true);\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\r\n       * @param {Boolean} isRevealed - true if element should be revealed.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'reveal',\r\n      value: function reveal(isRevealed) {\r\n        var $closer = this.$element.find('[data-close]');\r\n        if (isRevealed) {\r\n          this.close();\r\n          this.isRevealed = true;\r\n          // if (!this.options.forceTop) {\r\n          //   var scrollPos = parseInt(window.pageYOffset);\r\n          //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\r\n          // }\r\n          // if (this.options.isSticky) { this._stick(); }\r\n          this.$element.off('open.zf.trigger toggle.zf.trigger');\r\n          if ($closer.length) {\r\n            $closer.hide();\r\n          }\r\n        } else {\r\n          this.isRevealed = false;\r\n          // if (this.options.isSticky || !this.options.forceTop) {\r\n          //   this.$element[0].style.transform = '';\r\n          //   $(window).off('scroll.zf.offcanvas');\r\n          // }\r\n          this.$element.on({\r\n            'open.zf.trigger': this.open.bind(this),\r\n            'toggle.zf.trigger': this.toggle.bind(this)\r\n          });\r\n          if ($closer.length) {\r\n            $closer.show();\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Opens the off-canvas menu.\r\n       * @function\r\n       * @param {Object} event - Event object passed from listener.\r\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n       * @fires OffCanvas#opened\r\n       */\r\n\r\n    }, {\r\n      key: 'open',\r\n      value: function open(event, trigger) {\r\n        if (this.$element.hasClass('is-open') || this.isRevealed) {\r\n          return;\r\n        }\r\n        var _this = this,\r\n            $body = $(document.body);\r\n\r\n        if (this.options.forceTop) {\r\n          $('body').scrollTop(0);\r\n        }\r\n        // window.pageYOffset = 0;\r\n\r\n        // if (!this.options.forceTop) {\r\n        //   var scrollPos = parseInt(window.pageYOffset);\r\n        //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\r\n        //   if (this.$exiter.length) {\r\n        //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\r\n        //   }\r\n        // }\r\n        /**\r\n         * Fires when the off-canvas menu opens.\r\n         * @event OffCanvas#opened\r\n         */\r\n        Foundation.Move(this.options.transitionTime, this.$element, function () {\r\n          $('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-' + _this.options.position);\r\n\r\n          _this.$element.addClass('is-open');\r\n\r\n          // if (_this.options.isSticky) {\r\n          //   _this._stick();\r\n          // }\r\n        });\r\n\r\n        this.$triggers.attr('aria-expanded', 'true');\r\n        this.$element.attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\r\n\r\n        if (this.options.closeOnClick) {\r\n          this.$exiter.addClass('is-visible');\r\n        }\r\n\r\n        if (trigger) {\r\n          this.$lastTrigger = trigger;\r\n        }\r\n\r\n        if (this.options.autoFocus) {\r\n          this.$element.one(Foundation.transitionend(this.$element), function () {\r\n            _this.$element.find('a, button').eq(0).focus();\r\n          });\r\n        }\r\n\r\n        if (this.options.trapFocus) {\r\n          $('[data-off-canvas-content]').attr('tabindex', '-1');\r\n          this._trapFocus();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Traps focus within the offcanvas on open.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_trapFocus',\r\n      value: function _trapFocus() {\r\n        var focusable = Foundation.Keyboard.findFocusable(this.$element),\r\n            first = focusable.eq(0),\r\n            last = focusable.eq(-1);\r\n\r\n        focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas', function (e) {\r\n          if (e.which === 9 || e.keycode === 9) {\r\n            if (e.target === last[0] && !e.shiftKey) {\r\n              e.preventDefault();\r\n              first.focus();\r\n            }\r\n            if (e.target === first[0] && e.shiftKey) {\r\n              e.preventDefault();\r\n              last.focus();\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Allows the offcanvas to appear sticky utilizing translate properties.\r\n       * @private\r\n       */\r\n      // OffCanvas.prototype._stick = function() {\r\n      //   var elStyle = this.$element[0].style;\r\n      //\r\n      //   if (this.options.closeOnClick) {\r\n      //     var exitStyle = this.$exiter[0].style;\r\n      //   }\r\n      //\r\n      //   $(window).on('scroll.zf.offcanvas', function(e) {\r\n      //     console.log(e);\r\n      //     var pageY = window.pageYOffset;\r\n      //     elStyle.transform = 'translate(0,' + pageY + 'px)';\r\n      //     if (exitStyle !== undefined) { exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\r\n      //   });\r\n      //   // this.$element.trigger('stuck.zf.offcanvas');\r\n      // };\r\n      /**\r\n       * Closes the off-canvas menu.\r\n       * @function\r\n       * @param {Function} cb - optional cb to fire after closure.\r\n       * @fires OffCanvas#closed\r\n       */\r\n\r\n    }, {\r\n      key: 'close',\r\n      value: function close(cb) {\r\n        if (!this.$element.hasClass('is-open') || this.isRevealed) {\r\n          return;\r\n        }\r\n\r\n        var _this = this;\r\n\r\n        //  Foundation.Move(this.options.transitionTime, this.$element, function() {\r\n        $('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-' + _this.options.position);\r\n        _this.$element.removeClass('is-open');\r\n        // Foundation._reflow();\r\n        // });\r\n        this.$element.attr('aria-hidden', 'true')\r\n        /**\r\n         * Fires when the off-canvas menu opens.\r\n         * @event OffCanvas#closed\r\n         */\r\n        .trigger('closed.zf.offcanvas');\r\n        // if (_this.options.isSticky || !_this.options.forceTop) {\r\n        //   setTimeout(function() {\r\n        //     _this.$element[0].style.transform = '';\r\n        //     $(window).off('scroll.zf.offcanvas');\r\n        //   }, this.options.transitionTime);\r\n        // }\r\n        if (this.options.closeOnClick) {\r\n          this.$exiter.removeClass('is-visible');\r\n        }\r\n\r\n        this.$triggers.attr('aria-expanded', 'false');\r\n        if (this.options.trapFocus) {\r\n          $('[data-off-canvas-content]').removeAttr('tabindex');\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Toggles the off-canvas menu open or closed.\r\n       * @function\r\n       * @param {Object} event - Event object passed from listener.\r\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\r\n       */\r\n\r\n    }, {\r\n      key: 'toggle',\r\n      value: function toggle(event, trigger) {\r\n        if (this.$element.hasClass('is-open')) {\r\n          this.close(event, trigger);\r\n        } else {\r\n          this.open(event, trigger);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_handleKeyboard',\r\n      value: function _handleKeyboard(event) {\r\n        if (event.which !== 27) return;\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        this.close();\r\n        this.$lastTrigger.focus();\r\n      }\r\n\r\n      /**\r\n       * Destroys the offcanvas plugin.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.close();\r\n        this.$element.off('.zf.trigger .zf.offcanvas');\r\n        this.$exiter.off('.zf.offcanvas');\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return OffCanvas;\r\n  }();\r\n\r\n  OffCanvas.defaults = {\r\n    /**\r\n     * Allow the user to click outside of the menu to close it.\r\n     * @option\r\n     * @example true\r\n     */\r\n    closeOnClick: true,\r\n\r\n    /**\r\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\r\n     * @option\r\n     * @example 500\r\n     */\r\n    transitionTime: 0,\r\n\r\n    /**\r\n     * Direction the offcanvas opens from. Determines class applied to body.\r\n     * @option\r\n     * @example left\r\n     */\r\n    position: 'left',\r\n\r\n    /**\r\n     * Force the page to scroll to top on open.\r\n     * @option\r\n     * @example true\r\n     */\r\n    forceTop: true,\r\n\r\n    /**\r\n     * Allow the offcanvas to remain open for certain breakpoints.\r\n     * @option\r\n     * @example false\r\n     */\r\n    isRevealed: false,\r\n\r\n    /**\r\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\r\n     * @option\r\n     * @example reveal-for-large\r\n     */\r\n    revealOn: null,\r\n\r\n    /**\r\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\r\n     * @option\r\n     * @example true\r\n     */\r\n    autoFocus: true,\r\n\r\n    /**\r\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\r\n     * @option\r\n     * TODO improve the regex testing for this.\r\n     * @example reveal-for-large\r\n     */\r\n    revealClass: 'reveal-for-',\r\n\r\n    /**\r\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\r\n     * @option\r\n     * @example true\r\n     */\r\n    trapFocus: false\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(OffCanvas, 'OffCanvas');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Orbit module.\r\n   * @module foundation.orbit\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.timerAndImageLoader\r\n   * @requires foundation.util.touch\r\n   */\r\n\r\n  var Orbit = function () {\r\n    /**\r\n    * Creates a new instance of an orbit carousel.\r\n    * @class\r\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\r\n    * @param {Object} options - Overrides to the default plugin settings.\r\n    */\r\n\r\n    function Orbit(element, options) {\r\n      _classCallCheck(this, Orbit);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Orbit');\r\n      Foundation.Keyboard.register('Orbit', {\r\n        'ltr': {\r\n          'ARROW_RIGHT': 'next',\r\n          'ARROW_LEFT': 'previous'\r\n        },\r\n        'rtl': {\r\n          'ARROW_LEFT': 'next',\r\n          'ARROW_RIGHT': 'previous'\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\r\n    * @function\r\n    * @private\r\n    */\r\n\r\n\r\n    _createClass(Orbit, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\r\n        this.$slides = this.$element.find('.' + this.options.slideClass);\r\n        var $images = this.$element.find('img'),\r\n            initActive = this.$slides.filter('.is-active');\r\n\r\n        if (!initActive.length) {\r\n          this.$slides.eq(0).addClass('is-active');\r\n        }\r\n\r\n        if (!this.options.useMUI) {\r\n          this.$slides.addClass('no-motionui');\r\n        }\r\n\r\n        if ($images.length) {\r\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\r\n        } else {\r\n          this._prepareForOrbit(); //hehe\r\n        }\r\n\r\n        if (this.options.bullets) {\r\n          this._loadBullets();\r\n        }\r\n\r\n        this._events();\r\n\r\n        if (this.options.autoPlay && this.$slides.length > 1) {\r\n          this.geoSync();\r\n        }\r\n\r\n        if (this.options.accessible) {\r\n          // allow wrapper to be focusable to enable arrow navigation\r\n          this.$wrapper.attr('tabindex', 0);\r\n        }\r\n      }\r\n\r\n      /**\r\n      * Creates a jQuery collection of bullets, if they are being used.\r\n      * @function\r\n      * @private\r\n      */\r\n\r\n    }, {\r\n      key: '_loadBullets',\r\n      value: function _loadBullets() {\r\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\r\n      }\r\n\r\n      /**\r\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\r\n      * @function\r\n      */\r\n\r\n    }, {\r\n      key: 'geoSync',\r\n      value: function geoSync() {\r\n        var _this = this;\r\n        this.timer = new Foundation.Timer(this.$element, {\r\n          duration: this.options.timerDelay,\r\n          infinite: false\r\n        }, function () {\r\n          _this.changeSlide(true);\r\n        });\r\n        this.timer.start();\r\n      }\r\n\r\n      /**\r\n      * Sets wrapper and slide heights for the orbit.\r\n      * @function\r\n      * @private\r\n      */\r\n\r\n    }, {\r\n      key: '_prepareForOrbit',\r\n      value: function _prepareForOrbit() {\r\n        var _this = this;\r\n        this._setWrapperHeight(function (max) {\r\n          _this._setSlideHeight(max);\r\n        });\r\n      }\r\n\r\n      /**\r\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\r\n      * @function\r\n      * @private\r\n      * @param {Function} cb - a callback function to fire when complete.\r\n      */\r\n\r\n    }, {\r\n      key: '_setWrapperHeight',\r\n      value: function _setWrapperHeight(cb) {\r\n        //rewrite this to `for` loop\r\n        var max = 0,\r\n            temp,\r\n            counter = 0;\r\n\r\n        this.$slides.each(function () {\r\n          temp = this.getBoundingClientRect().height;\r\n          $(this).attr('data-slide', counter);\r\n\r\n          if (counter) {\r\n            //if not the first slide, set css position and display property\r\n            $(this).css({ 'position': 'relative', 'display': 'none' });\r\n          }\r\n          max = temp > max ? temp : max;\r\n          counter++;\r\n        });\r\n\r\n        if (counter === this.$slides.length) {\r\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\r\n          cb(max); //fire callback with max height dimension.\r\n        }\r\n      }\r\n\r\n      /**\r\n      * Sets the max-height of each slide.\r\n      * @function\r\n      * @private\r\n      */\r\n\r\n    }, {\r\n      key: '_setSlideHeight',\r\n      value: function _setSlideHeight(height) {\r\n        this.$slides.each(function () {\r\n          $(this).css('max-height', height);\r\n        });\r\n      }\r\n\r\n      /**\r\n      * Adds event listeners to basically everything within the element.\r\n      * @function\r\n      * @private\r\n      */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this;\r\n\r\n        //***************************************\r\n        //**Now using custom event - thanks to:**\r\n        //**      Yohai Ararat of Toronto      **\r\n        //***************************************\r\n        if (this.$slides.length > 1) {\r\n\r\n          if (this.options.swipe) {\r\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\r\n              e.preventDefault();\r\n              _this.changeSlide(true);\r\n            }).on('swiperight.zf.orbit', function (e) {\r\n              e.preventDefault();\r\n              _this.changeSlide(false);\r\n            });\r\n          }\r\n          //***************************************\r\n\r\n          if (this.options.autoPlay) {\r\n            this.$slides.on('click.zf.orbit', function () {\r\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\r\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\r\n            });\r\n\r\n            if (this.options.pauseOnHover) {\r\n              this.$element.on('mouseenter.zf.orbit', function () {\r\n                _this.timer.pause();\r\n              }).on('mouseleave.zf.orbit', function () {\r\n                if (!_this.$element.data('clickedOn')) {\r\n                  _this.timer.start();\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          if (this.options.navButtons) {\r\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\r\n            $controls.attr('tabindex', 0)\r\n            //also need to handle enter/return and spacebar key presses\r\n            .on('click.zf.orbit touchend.zf.orbit', function (e) {\r\n              e.preventDefault();\r\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\r\n            });\r\n          }\r\n\r\n          if (this.options.bullets) {\r\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\r\n              if (/is-active/g.test(this.className)) {\r\n                return false;\r\n              } //if this is active, kick out of function.\r\n              var idx = $(this).data('slide'),\r\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\r\n                  $slide = _this.$slides.eq(idx);\r\n\r\n              _this.changeSlide(ltr, $slide, idx);\r\n            });\r\n          }\r\n\r\n          this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\r\n            // handle keyboard event with keyboard util\r\n            Foundation.Keyboard.handleKey(e, 'Orbit', {\r\n              next: function () {\r\n                _this.changeSlide(true);\r\n              },\r\n              previous: function () {\r\n                _this.changeSlide(false);\r\n              },\r\n              handled: function () {\r\n                // if bullet is focused, make sure focus moves\r\n                if ($(e.target).is(_this.$bullets)) {\r\n                  _this.$bullets.filter('.is-active').focus();\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      /**\r\n      * Changes the current slide to a new one.\r\n      * @function\r\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\r\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\r\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\r\n      * @fires Orbit#slidechange\r\n      */\r\n\r\n    }, {\r\n      key: 'changeSlide',\r\n      value: function changeSlide(isLTR, chosenSlide, idx) {\r\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\r\n\r\n        if (/mui/g.test($curSlide[0].className)) {\r\n          return false;\r\n        } //if the slide is currently animating, kick out of the function\r\n\r\n        var $firstSlide = this.$slides.first(),\r\n            $lastSlide = this.$slides.last(),\r\n            dirIn = isLTR ? 'Right' : 'Left',\r\n            dirOut = isLTR ? 'Left' : 'Right',\r\n            _this = this,\r\n            $newSlide;\r\n\r\n        if (!chosenSlide) {\r\n          //most of the time, this will be auto played or clicked from the navButtons.\r\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\r\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\r\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\r\n        } else {\r\n            $newSlide = chosenSlide;\r\n          }\r\n\r\n        if ($newSlide.length) {\r\n          if (this.options.bullets) {\r\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\r\n            this._updateBullets(idx);\r\n          }\r\n\r\n          if (this.options.useMUI) {\r\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\r\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\r\n            });\r\n\r\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\r\n              $curSlide.removeAttr('aria-live');\r\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\r\n                _this.timer.restart();\r\n              }\r\n              //do stuff?\r\n            });\r\n          } else {\r\n              $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\r\n              $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\r\n              if (this.options.autoPlay && !this.timer.isPaused) {\r\n                this.timer.restart();\r\n              }\r\n            }\r\n          /**\r\n          * Triggers when the slide has finished animating in.\r\n          * @event Orbit#slidechange\r\n          */\r\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\r\n        }\r\n      }\r\n\r\n      /**\r\n      * Updates the active state of the bullets, if displayed.\r\n      * @function\r\n      * @private\r\n      * @param {Number} idx - the index of the current slide.\r\n      */\r\n\r\n    }, {\r\n      key: '_updateBullets',\r\n      value: function _updateBullets(idx) {\r\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\r\n            span = $oldBullet.find('span:last').detach(),\r\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\r\n      }\r\n\r\n      /**\r\n      * Destroys the carousel and hides the element.\r\n      * @function\r\n      */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Orbit;\r\n  }();\r\n\r\n  Orbit.defaults = {\r\n    /**\r\n    * Tells the JS to look for and loadBullets.\r\n    * @option\r\n    * @example true\r\n    */\r\n    bullets: true,\r\n    /**\r\n    * Tells the JS to apply event listeners to nav buttons\r\n    * @option\r\n    * @example true\r\n    */\r\n    navButtons: true,\r\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-in-right'\r\n    */\r\n    animInFromRight: 'slide-in-right',\r\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-out-right'\r\n    */\r\n    animOutToRight: 'slide-out-right',\r\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-in-left'\r\n    *\r\n    */\r\n    animInFromLeft: 'slide-in-left',\r\n    /**\r\n    * motion-ui animation class to apply\r\n    * @option\r\n    * @example 'slide-out-left'\r\n    */\r\n    animOutToLeft: 'slide-out-left',\r\n    /**\r\n    * Allows Orbit to automatically animate on page load.\r\n    * @option\r\n    * @example true\r\n    */\r\n    autoPlay: true,\r\n    /**\r\n    * Amount of time, in ms, between slide transitions\r\n    * @option\r\n    * @example 5000\r\n    */\r\n    timerDelay: 5000,\r\n    /**\r\n    * Allows Orbit to infinitely loop through the slides\r\n    * @option\r\n    * @example true\r\n    */\r\n    infiniteWrap: true,\r\n    /**\r\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\r\n    * @option\r\n    * @example true\r\n    */\r\n    swipe: true,\r\n    /**\r\n    * Allows the timing function to pause animation on hover.\r\n    * @option\r\n    * @example true\r\n    */\r\n    pauseOnHover: true,\r\n    /**\r\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\r\n    * @option\r\n    * @example true\r\n    */\r\n    accessible: true,\r\n    /**\r\n    * Class applied to the container of Orbit\r\n    * @option\r\n    * @example 'orbit-container'\r\n    */\r\n    containerClass: 'orbit-container',\r\n    /**\r\n    * Class applied to individual slides.\r\n    * @option\r\n    * @example 'orbit-slide'\r\n    */\r\n    slideClass: 'orbit-slide',\r\n    /**\r\n    * Class applied to the bullet container. You're welcome.\r\n    * @option\r\n    * @example 'orbit-bullets'\r\n    */\r\n    boxOfBullets: 'orbit-bullets',\r\n    /**\r\n    * Class applied to the `next` navigation button.\r\n    * @option\r\n    * @example 'orbit-next'\r\n    */\r\n    nextClass: 'orbit-next',\r\n    /**\r\n    * Class applied to the `previous` navigation button.\r\n    * @option\r\n    * @example 'orbit-previous'\r\n    */\r\n    prevClass: 'orbit-previous',\r\n    /**\r\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\r\n    * @option\r\n    * @example true\r\n    */\r\n    useMUI: true\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Orbit, 'Orbit');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * ResponsiveMenu module.\r\n   * @module foundation.responsiveMenu\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.accordionMenu\r\n   * @requires foundation.util.drilldown\r\n   * @requires foundation.util.dropdown-menu\r\n   */\r\n\r\n  var ResponsiveMenu = function () {\r\n    /**\r\n     * Creates a new instance of a responsive menu.\r\n     * @class\r\n     * @fires ResponsiveMenu#init\r\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function ResponsiveMenu(element, options) {\r\n      _classCallCheck(this, ResponsiveMenu);\r\n\r\n      this.$element = $(element);\r\n      this.rules = this.$element.data('responsive-menu');\r\n      this.currentMq = null;\r\n      this.currentPlugin = null;\r\n\r\n      this._init();\r\n      this._events();\r\n\r\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\r\n    }\r\n\r\n    /**\r\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\r\n     * @function\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(ResponsiveMenu, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\r\n        if (typeof this.rules === 'string') {\r\n          var rulesTree = {};\r\n\r\n          // Parse rules from \"classes\" pulled from data attribute\r\n          var rules = this.rules.split(' ');\r\n\r\n          // Iterate through every rule found\r\n          for (var i = 0; i < rules.length; i++) {\r\n            var rule = rules[i].split('-');\r\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\r\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\r\n\r\n            if (MenuPlugins[rulePlugin] !== null) {\r\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\r\n            }\r\n          }\r\n\r\n          this.rules = rulesTree;\r\n        }\r\n\r\n        if (!$.isEmptyObject(this.rules)) {\r\n          this._checkMediaQueries();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Initializes events for the Menu.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this;\r\n\r\n        $(window).on('changed.zf.mediaquery', function () {\r\n          _this._checkMediaQueries();\r\n        });\r\n        // $(window).on('resize.zf.ResponsiveMenu', function() {\r\n        //   _this._checkMediaQueries();\r\n        // });\r\n      }\r\n\r\n      /**\r\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_checkMediaQueries',\r\n      value: function _checkMediaQueries() {\r\n        var matchedMq,\r\n            _this = this;\r\n        // Iterate through each rule and find the last matching rule\r\n        $.each(this.rules, function (key) {\r\n          if (Foundation.MediaQuery.atLeast(key)) {\r\n            matchedMq = key;\r\n          }\r\n        });\r\n\r\n        // No match? No dice\r\n        if (!matchedMq) return;\r\n\r\n        // Plugin already initialized? We good\r\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\r\n\r\n        // Remove existing plugin-specific CSS classes\r\n        $.each(MenuPlugins, function (key, value) {\r\n          _this.$element.removeClass(value.cssClass);\r\n        });\r\n\r\n        // Add the CSS class for the new plugin\r\n        this.$element.addClass(this.rules[matchedMq].cssClass);\r\n\r\n        // Create an instance of the new plugin\r\n        if (this.currentPlugin) this.currentPlugin.destroy();\r\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\r\n      }\r\n\r\n      /**\r\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.currentPlugin.destroy();\r\n        $(window).off('.zf.ResponsiveMenu');\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return ResponsiveMenu;\r\n  }();\r\n\r\n  ResponsiveMenu.defaults = {};\r\n\r\n  // The plugin matches the plugin classes with these plugin instances.\r\n  var MenuPlugins = {\r\n    dropdown: {\r\n      cssClass: 'dropdown',\r\n      plugin: Foundation._plugins['dropdown-menu'] || null\r\n    },\r\n    drilldown: {\r\n      cssClass: 'drilldown',\r\n      plugin: Foundation._plugins['drilldown'] || null\r\n    },\r\n    accordion: {\r\n      cssClass: 'accordion-menu',\r\n      plugin: Foundation._plugins['accordion-menu'] || null\r\n    }\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * ResponsiveToggle module.\r\n   * @module foundation.responsiveToggle\r\n   * @requires foundation.util.mediaQuery\r\n   */\r\n\r\n  var ResponsiveToggle = function () {\r\n    /**\r\n     * Creates a new instance of Tab Bar.\r\n     * @class\r\n     * @fires ResponsiveToggle#init\r\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function ResponsiveToggle(element, options) {\r\n      _classCallCheck(this, ResponsiveToggle);\r\n\r\n      this.$element = $(element);\r\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n      this._events();\r\n\r\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\r\n    }\r\n\r\n    /**\r\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\r\n     * @function\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(ResponsiveToggle, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var targetID = this.$element.data('responsive-toggle');\r\n        if (!targetID) {\r\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\r\n        }\r\n\r\n        this.$targetMenu = $('#' + targetID);\r\n        this.$toggler = this.$element.find('[data-toggle]');\r\n\r\n        this._update();\r\n      }\r\n\r\n      /**\r\n       * Adds necessary event handlers for the tab bar to work.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this;\r\n\r\n        this._updateMqHandler = this._update.bind(this);\r\n\r\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\r\n\r\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\r\n      }\r\n\r\n      /**\r\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_update',\r\n      value: function _update() {\r\n        // Mobile\r\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\r\n          this.$element.show();\r\n          this.$targetMenu.hide();\r\n        }\r\n\r\n        // Desktop\r\n        else {\r\n            this.$element.hide();\r\n            this.$targetMenu.show();\r\n          }\r\n      }\r\n\r\n      /**\r\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\r\n       * @function\r\n       * @fires ResponsiveToggle#toggled\r\n       */\r\n\r\n    }, {\r\n      key: 'toggleMenu',\r\n      value: function toggleMenu() {\r\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\r\n          this.$targetMenu.toggle(0);\r\n\r\n          /**\r\n           * Fires when the element attached to the tab bar toggles.\r\n           * @event ResponsiveToggle#toggled\r\n           */\r\n          this.$element.trigger('toggled.zf.responsiveToggle');\r\n        }\r\n      }\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.off('.zf.responsiveToggle');\r\n        this.$toggler.off('.zf.responsiveToggle');\r\n\r\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return ResponsiveToggle;\r\n  }();\r\n\r\n  ResponsiveToggle.defaults = {\r\n    /**\r\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\r\n     * @option\r\n     * @example 'medium'\r\n     */\r\n    hideFor: 'medium'\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Reveal module.\r\n   * @module foundation.reveal\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   * @requires foundation.util.motion if using animations\r\n   */\r\n\r\n  var Reveal = function () {\r\n    /**\r\n     * Creates a new instance of Reveal.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to use for the modal.\r\n     * @param {Object} options - optional parameters.\r\n     */\r\n\r\n    function Reveal(element, options) {\r\n      _classCallCheck(this, Reveal);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Reveal');\r\n      Foundation.Keyboard.register('Reveal', {\r\n        'ENTER': 'open',\r\n        'SPACE': 'open',\r\n        'ESCAPE': 'close',\r\n        'TAB': 'tab_forward',\r\n        'SHIFT_TAB': 'tab_backward'\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Reveal, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        this.id = this.$element.attr('id');\r\n        this.isActive = false;\r\n        this.cached = { mq: Foundation.MediaQuery.current };\r\n        this.isMobile = mobileSniff();\r\n\r\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\r\n        this.$anchor.attr({\r\n          'aria-controls': this.id,\r\n          'aria-haspopup': true,\r\n          'tabindex': 0\r\n        });\r\n\r\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\r\n          this.options.fullScreen = true;\r\n          this.options.overlay = false;\r\n        }\r\n        if (this.options.overlay && !this.$overlay) {\r\n          this.$overlay = this._makeOverlay(this.id);\r\n        }\r\n\r\n        this.$element.attr({\r\n          'role': 'dialog',\r\n          'aria-hidden': true,\r\n          'data-yeti-box': this.id,\r\n          'data-resize': this.id\r\n        });\r\n\r\n        if (this.$overlay) {\r\n          this.$element.detach().appendTo(this.$overlay);\r\n        } else {\r\n          this.$element.detach().appendTo($('body'));\r\n          this.$element.addClass('without-overlay');\r\n        }\r\n        this._events();\r\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\r\n          $(window).one('load.zf.reveal', this.open.bind(this));\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Creates an overlay div to display behind the modal.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_makeOverlay',\r\n      value: function _makeOverlay(id) {\r\n        var $overlay = $('<div></div>').addClass('reveal-overlay').appendTo('body');\r\n        return $overlay;\r\n      }\r\n\r\n      /**\r\n       * Updates position of modal\r\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_updatePosition',\r\n      value: function _updatePosition() {\r\n        var width = this.$element.outerWidth();\r\n        var outerWidth = $(window).width();\r\n        var height = this.$element.outerHeight();\r\n        var outerHeight = $(window).height();\r\n        var left, top;\r\n        if (this.options.hOffset === 'auto') {\r\n          left = parseInt((outerWidth - width) / 2, 10);\r\n        } else {\r\n          left = parseInt(this.options.hOffset, 10);\r\n        }\r\n        if (this.options.vOffset === 'auto') {\r\n          if (height > outerHeight) {\r\n            top = parseInt(Math.min(100, outerHeight / 10), 10);\r\n          } else {\r\n            top = parseInt((outerHeight - height) / 4, 10);\r\n          }\r\n        } else {\r\n          top = parseInt(this.options.vOffset, 10);\r\n        }\r\n        this.$element.css({ top: top + 'px' });\r\n        // only worry about left if we don't have an overlay or we havea  horizontal offset,\r\n        // otherwise we're perfectly in the middle\r\n        if (!this.$overlay || this.options.hOffset !== 'auto') {\r\n          this.$element.css({ left: left + 'px' });\r\n          this.$element.css({ margin: '0px' });\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Adds event handlers for the modal.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this2 = this;\r\n\r\n        var _this = this;\r\n\r\n        this.$element.on({\r\n          'open.zf.trigger': this.open.bind(this),\r\n          'close.zf.trigger': function (event, $element) {\r\n            if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\r\n              // only close reveal when it's explicitly called\r\n              return _this2.close.apply(_this2);\r\n            }\r\n          },\r\n          'toggle.zf.trigger': this.toggle.bind(this),\r\n          'resizeme.zf.trigger': function () {\r\n            _this._updatePosition();\r\n          }\r\n        });\r\n\r\n        if (this.$anchor.length) {\r\n          this.$anchor.on('keydown.zf.reveal', function (e) {\r\n            if (e.which === 13 || e.which === 32) {\r\n              e.stopPropagation();\r\n              e.preventDefault();\r\n              _this.open();\r\n            }\r\n          });\r\n        }\r\n\r\n        if (this.options.closeOnClick && this.options.overlay) {\r\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\r\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\r\n              return;\r\n            }\r\n            _this.close();\r\n          });\r\n        }\r\n        if (this.options.deepLink) {\r\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_handleState',\r\n      value: function _handleState(e) {\r\n        if (window.location.hash === '#' + this.id && !this.isActive) {\r\n          this.open();\r\n        } else {\r\n          this.close();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\r\n       * @function\r\n       * @fires Reveal#closeme\r\n       * @fires Reveal#open\r\n       */\r\n\r\n    }, {\r\n      key: 'open',\r\n      value: function open() {\r\n        var _this3 = this;\r\n\r\n        if (this.options.deepLink) {\r\n          var hash = '#' + this.id;\r\n\r\n          if (window.history.pushState) {\r\n            window.history.pushState(null, null, hash);\r\n          } else {\r\n            window.location.hash = hash;\r\n          }\r\n        }\r\n\r\n        this.isActive = true;\r\n\r\n        // Make elements invisible, but remove display: none so we can get size and positioning\r\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\r\n        if (this.options.overlay) {\r\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\r\n        }\r\n\r\n        this._updatePosition();\r\n\r\n        this.$element.hide().css({ 'visibility': '' });\r\n\r\n        if (this.$overlay) {\r\n          this.$overlay.css({ 'visibility': '' }).hide();\r\n          if (this.$element.hasClass('fast')) {\r\n            this.$overlay.addClass('fast');\r\n          } else if (this.$element.hasClass('slow')) {\r\n            this.$overlay.addClass('slow');\r\n          }\r\n        }\r\n\r\n        if (!this.options.multipleOpened) {\r\n          /**\r\n           * Fires immediately before the modal opens.\r\n           * Closes any other modals that are currently open\r\n           * @event Reveal#closeme\r\n           */\r\n          this.$element.trigger('closeme.zf.reveal', this.id);\r\n        }\r\n        // Motion UI method of reveal\r\n        if (this.options.animationIn) {\r\n          var _this;\r\n\r\n          (function () {\r\n            var afterAnimationFocus = function () {\r\n              _this.$element.attr({\r\n                'aria-hidden': false,\r\n                'tabindex': -1\r\n              }).focus();\r\n              console.log('focus');\r\n            };\r\n\r\n            _this = _this3;\r\n\r\n            if (_this3.options.overlay) {\r\n              Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\r\n            }\r\n            Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\r\n              _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\r\n              afterAnimationFocus();\r\n            });\r\n          })();\r\n        }\r\n        // jQuery method of reveal\r\n        else {\r\n            if (this.options.overlay) {\r\n              this.$overlay.show(0);\r\n            }\r\n            this.$element.show(this.options.showDelay);\r\n          }\r\n\r\n        // handle accessibility\r\n        this.$element.attr({\r\n          'aria-hidden': false,\r\n          'tabindex': -1\r\n        }).focus();\r\n\r\n        /**\r\n         * Fires when the modal has successfully opened.\r\n         * @event Reveal#open\r\n         */\r\n        this.$element.trigger('open.zf.reveal');\r\n\r\n        if (this.isMobile) {\r\n          this.originalScrollPos = window.pageYOffset;\r\n          $('html, body').addClass('is-reveal-open');\r\n        } else {\r\n          $('body').addClass('is-reveal-open');\r\n        }\r\n\r\n        setTimeout(function () {\r\n          _this3._extraHandlers();\r\n        }, 0);\r\n      }\r\n\r\n      /**\r\n       * Adds extra event handlers for the body and window if necessary.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_extraHandlers',\r\n      value: function _extraHandlers() {\r\n        var _this = this;\r\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\r\n\r\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\r\n          $('body').on('click.zf.reveal', function (e) {\r\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\r\n              return;\r\n            }\r\n            _this.close();\r\n          });\r\n        }\r\n\r\n        if (this.options.closeOnEsc) {\r\n          $(window).on('keydown.zf.reveal', function (e) {\r\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\r\n              close: function () {\r\n                if (_this.options.closeOnEsc) {\r\n                  _this.close();\r\n                  _this.$anchor.focus();\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n\r\n        // lock focus within modal while tabbing\r\n        this.$element.on('keydown.zf.reveal', function (e) {\r\n          var $target = $(this);\r\n          // handle keyboard event with keyboard util\r\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\r\n            tab_forward: function () {\r\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) {\r\n                // left modal downwards, setting focus to first element\r\n                _this.focusableElements.eq(0).focus();\r\n                return true;\r\n              }\r\n              if (_this.focusableElements.length === 0) {\r\n                // no focusable elements inside the modal at all, prevent tabbing in general\r\n                return true;\r\n              }\r\n            },\r\n            tab_backward: function () {\r\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) {\r\n                // left modal upwards, setting focus to last element\r\n                _this.focusableElements.eq(-1).focus();\r\n                return true;\r\n              }\r\n              if (_this.focusableElements.length === 0) {\r\n                // no focusable elements inside the modal at all, prevent tabbing in general\r\n                return true;\r\n              }\r\n            },\r\n            open: function () {\r\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\r\n                setTimeout(function () {\r\n                  // set focus back to anchor if close button has been activated\r\n                  _this.$anchor.focus();\r\n                }, 1);\r\n              } else if ($target.is(_this.focusableElements)) {\r\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\r\n                _this.open();\r\n              }\r\n            },\r\n            close: function () {\r\n              if (_this.options.closeOnEsc) {\r\n                _this.close();\r\n                _this.$anchor.focus();\r\n              }\r\n            },\r\n            handled: function (preventDefault) {\r\n              if (preventDefault) {\r\n                e.preventDefault();\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Closes the modal.\r\n       * @function\r\n       * @fires Reveal#closed\r\n       */\r\n\r\n    }, {\r\n      key: 'close',\r\n      value: function close() {\r\n        if (!this.isActive || !this.$element.is(':visible')) {\r\n          return false;\r\n        }\r\n        var _this = this;\r\n\r\n        // Motion UI method of hiding\r\n        if (this.options.animationOut) {\r\n          if (this.options.overlay) {\r\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\r\n          } else {\r\n            finishUp();\r\n          }\r\n\r\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\r\n        }\r\n        // jQuery method of hiding\r\n        else {\r\n            if (this.options.overlay) {\r\n              this.$overlay.hide(0, finishUp);\r\n            } else {\r\n              finishUp();\r\n            }\r\n\r\n            this.$element.hide(this.options.hideDelay);\r\n          }\r\n\r\n        // Conditionals to remove extra event listeners added on open\r\n        if (this.options.closeOnEsc) {\r\n          $(window).off('keydown.zf.reveal');\r\n        }\r\n\r\n        if (!this.options.overlay && this.options.closeOnClick) {\r\n          $('body').off('click.zf.reveal');\r\n        }\r\n\r\n        this.$element.off('keydown.zf.reveal');\r\n\r\n        function finishUp() {\r\n          if (_this.isMobile) {\r\n            $('html, body').removeClass('is-reveal-open');\r\n            if (_this.originalScrollPos) {\r\n              $('body').scrollTop(_this.originalScrollPos);\r\n              _this.originalScrollPos = null;\r\n            }\r\n          } else {\r\n            $('body').removeClass('is-reveal-open');\r\n          }\r\n\r\n          _this.$element.attr('aria-hidden', true);\r\n\r\n          /**\r\n          * Fires when the modal is done closing.\r\n          * @event Reveal#closed\r\n          */\r\n          _this.$element.trigger('closed.zf.reveal');\r\n        }\r\n\r\n        /**\r\n        * Resets the modal content\r\n        * This prevents a running video to keep going in the background\r\n        */\r\n        if (this.options.resetOnClose) {\r\n          this.$element.html(this.$element.html());\r\n        }\r\n\r\n        this.isActive = false;\r\n        if (_this.options.deepLink) {\r\n          if (window.history.replaceState) {\r\n            window.history.replaceState(\"\", document.title, window.location.pathname);\r\n          } else {\r\n            window.location.hash = '';\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Toggles the open/closed state of a modal.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'toggle',\r\n      value: function toggle() {\r\n        if (this.isActive) {\r\n          this.close();\r\n        } else {\r\n          this.open();\r\n        }\r\n      }\r\n    }, {\r\n      key: 'destroy',\r\n\r\n\r\n      /**\r\n       * Destroys an instance of a modal.\r\n       * @function\r\n       */\r\n      value: function destroy() {\r\n        if (this.options.overlay) {\r\n          this.$element.appendTo($('body')); // move $element outside of $overlay to prevent error unregisterPlugin()\r\n          this.$overlay.hide().off().remove();\r\n        }\r\n        this.$element.hide().off();\r\n        this.$anchor.off('.zf');\r\n        $(window).off('.zf.reveal:' + this.id);\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Reveal;\r\n  }();\r\n\r\n  Reveal.defaults = {\r\n    /**\r\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n     * @option\r\n     * @example 'slide-in-left'\r\n     */\r\n    animationIn: '',\r\n    /**\r\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\r\n     * @option\r\n     * @example 'slide-out-right'\r\n     */\r\n    animationOut: '',\r\n    /**\r\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\r\n     * @option\r\n     * @example 10\r\n     */\r\n    showDelay: 0,\r\n    /**\r\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\r\n     * @option\r\n     * @example 10\r\n     */\r\n    hideDelay: 0,\r\n    /**\r\n     * Allows a click on the body/overlay to close the modal.\r\n     * @option\r\n     * @example true\r\n     */\r\n    closeOnClick: true,\r\n    /**\r\n     * Allows the modal to close if the user presses the `ESCAPE` key.\r\n     * @option\r\n     * @example true\r\n     */\r\n    closeOnEsc: true,\r\n    /**\r\n     * If true, allows multiple modals to be displayed at once.\r\n     * @option\r\n     * @example false\r\n     */\r\n    multipleOpened: false,\r\n    /**\r\n     * Distance, in pixels, the modal should push down from the top of the screen.\r\n     * @option\r\n     * @example auto\r\n     */\r\n    vOffset: 'auto',\r\n    /**\r\n     * Distance, in pixels, the modal should push in from the side of the screen.\r\n     * @option\r\n     * @example auto\r\n     */\r\n    hOffset: 'auto',\r\n    /**\r\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\r\n     * @option\r\n     * @example false\r\n     */\r\n    fullScreen: false,\r\n    /**\r\n     * Percentage of screen height the modal should push up from the bottom of the view.\r\n     * @option\r\n     * @example 10\r\n     */\r\n    btmOffsetPct: 10,\r\n    /**\r\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\r\n     * @option\r\n     * @example true\r\n     */\r\n    overlay: true,\r\n    /**\r\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\r\n     * @option\r\n     * @example false\r\n     */\r\n    resetOnClose: false,\r\n    /**\r\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\r\n     * @option\r\n     * @example false\r\n     */\r\n    deepLink: false\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Reveal, 'Reveal');\r\n\r\n  function iPhoneSniff() {\r\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\r\n    );\r\n  }\r\n\r\n  function androidSniff() {\r\n    return (/Android/.test(window.navigator.userAgent)\r\n    );\r\n  }\r\n\r\n  function mobileSniff() {\r\n    return iPhoneSniff() || androidSniff();\r\n  }\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Slider module.\r\n   * @module foundation.slider\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.touch\r\n   */\r\n\r\n  var Slider = function () {\r\n    /**\r\n     * Creates a new instance of a drilldown menu.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Slider(element, options) {\r\n      _classCallCheck(this, Slider);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Slider');\r\n      Foundation.Keyboard.register('Slider', {\r\n        'ltr': {\r\n          'ARROW_RIGHT': 'increase',\r\n          'ARROW_UP': 'increase',\r\n          'ARROW_DOWN': 'decrease',\r\n          'ARROW_LEFT': 'decrease',\r\n          'SHIFT_ARROW_RIGHT': 'increase_fast',\r\n          'SHIFT_ARROW_UP': 'increase_fast',\r\n          'SHIFT_ARROW_DOWN': 'decrease_fast',\r\n          'SHIFT_ARROW_LEFT': 'decrease_fast'\r\n        },\r\n        'rtl': {\r\n          'ARROW_LEFT': 'increase',\r\n          'ARROW_RIGHT': 'decrease',\r\n          'SHIFT_ARROW_LEFT': 'increase_fast',\r\n          'SHIFT_ARROW_RIGHT': 'decrease_fast'\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\r\n     * @function\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Slider, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        this.inputs = this.$element.find('input');\r\n        this.handles = this.$element.find('[data-slider-handle]');\r\n\r\n        this.$handle = this.handles.eq(0);\r\n        this.$input = this.inputs.length ? this.inputs.eq(0) : $('#' + this.$handle.attr('aria-controls'));\r\n        this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\r\n\r\n        var isDbl = false,\r\n            _this = this;\r\n        if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\r\n          this.options.disabled = true;\r\n          this.$element.addClass(this.options.disabledClass);\r\n        }\r\n        if (!this.inputs.length) {\r\n          this.inputs = $().add(this.$input);\r\n          this.options.binding = true;\r\n        }\r\n        this._setInitAttr(0);\r\n        this._events(this.$handle);\r\n\r\n        if (this.handles[1]) {\r\n          this.options.doubleSided = true;\r\n          this.$handle2 = this.handles.eq(1);\r\n          this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $('#' + this.$handle2.attr('aria-controls'));\r\n\r\n          if (!this.inputs[1]) {\r\n            this.inputs = this.inputs.add(this.$input2);\r\n          }\r\n          isDbl = true;\r\n\r\n          this._setHandlePos(this.$handle, this.options.initialStart, true, function () {\r\n\r\n            _this._setHandlePos(_this.$handle2, _this.options.initialEnd, true);\r\n          });\r\n          // this.$handle.triggerHandler('click.zf.slider');\r\n          this._setInitAttr(1);\r\n          this._events(this.$handle2);\r\n        }\r\n\r\n        if (!isDbl) {\r\n          this._setHandlePos(this.$handle, this.options.initialStart, true);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Sets the position of the selected handle and fill bar.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $hndl - the selected handle to move.\r\n       * @param {Number} location - floating point between the start and end values of the slider bar.\r\n       * @param {Function} cb - callback function to fire on completion.\r\n       * @fires Slider#moved\r\n       * @fires Slider#changed\r\n       */\r\n\r\n    }, {\r\n      key: '_setHandlePos',\r\n      value: function _setHandlePos($hndl, location, noInvert, cb) {\r\n        // don't move if the slider has been disabled since its initialization\r\n        if (this.$element.hasClass(this.options.disabledClass)) {\r\n          return;\r\n        }\r\n        //might need to alter that slightly for bars that will have odd number selections.\r\n        location = parseFloat(location); //on input change events, convert string to number...grumble.\r\n\r\n        // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\r\n        if (location < this.options.start) {\r\n          location = this.options.start;\r\n        } else if (location > this.options.end) {\r\n          location = this.options.end;\r\n        }\r\n\r\n        var isDbl = this.options.doubleSided;\r\n\r\n        if (isDbl) {\r\n          //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\r\n          if (this.handles.index($hndl) === 0) {\r\n            var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\r\n            location = location >= h2Val ? h2Val - this.options.step : location;\r\n          } else {\r\n            var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\r\n            location = location <= h1Val ? h1Val + this.options.step : location;\r\n          }\r\n        }\r\n\r\n        //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\r\n        //for click and drag events, it's weird due to the scale(-1, 1) css property\r\n        if (this.options.vertical && !noInvert) {\r\n          location = this.options.end - location;\r\n        }\r\n\r\n        var _this = this,\r\n            vert = this.options.vertical,\r\n            hOrW = vert ? 'height' : 'width',\r\n            lOrT = vert ? 'top' : 'left',\r\n            handleDim = $hndl[0].getBoundingClientRect()[hOrW],\r\n            elemDim = this.$element[0].getBoundingClientRect()[hOrW],\r\n\r\n        //percentage of bar min/max value based on click or drag point\r\n        pctOfBar = percent(location - this.options.start, this.options.end - this.options.start).toFixed(2),\r\n\r\n        //number of actual pixels to shift the handle, based on the percentage obtained above\r\n        pxToMove = (elemDim - handleDim) * pctOfBar,\r\n\r\n        //percentage of bar to shift the handle\r\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\r\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\r\n        location = parseFloat(location.toFixed(this.options.decimal));\r\n        // declare empty object for css adjustments, only used with 2 handled-sliders\r\n        var css = {};\r\n\r\n        this._setValues($hndl, location);\r\n\r\n        // TODO update to calculate based on values set to respective inputs??\r\n        if (isDbl) {\r\n          var isLeftHndl = this.handles.index($hndl) === 0,\r\n\r\n          //empty variable, will be used for min-height/width for fill bar\r\n          dim,\r\n\r\n          //percentage w/h of the handle compared to the slider bar\r\n          handlePct = ~ ~(percent(handleDim, elemDim) * 100);\r\n          //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\r\n          if (isLeftHndl) {\r\n            //left or top percentage value to apply to the fill bar.\r\n            css[lOrT] = movement + '%';\r\n            //calculate the new min-height/width for the fill bar.\r\n            dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\r\n            //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\r\n            //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\r\n            if (cb && typeof cb === 'function') {\r\n              cb();\r\n            } //this is only needed for the initialization of 2 handled sliders\r\n          } else {\r\n              //just caching the value of the left/bottom handle's left/top property\r\n              var handlePos = parseFloat(this.$handle[0].style[lOrT]);\r\n              //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\r\n              //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\r\n              dim = movement - (isNaN(handlePos) ? this.options.initialStart / ((this.options.end - this.options.start) / 100) : handlePos) + handlePct;\r\n            }\r\n          // assign the min-height/width to our css object\r\n          css['min-' + hOrW] = dim + '%';\r\n        }\r\n\r\n        this.$element.one('finished.zf.animate', function () {\r\n          /**\r\n           * Fires when the handle is done moving.\r\n           * @event Slider#moved\r\n           */\r\n          _this.$element.trigger('moved.zf.slider', [$hndl]);\r\n        });\r\n\r\n        //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\r\n        var moveTime = this.$element.data('dragging') ? 1000 / 60 : this.options.moveTime;\r\n\r\n        Foundation.Move(moveTime, $hndl, function () {\r\n          //adjusting the left/top property of the handle, based on the percentage calculated above\r\n          $hndl.css(lOrT, movement + '%');\r\n\r\n          if (!_this.options.doubleSided) {\r\n            //if single-handled, a simple method to expand the fill bar\r\n            _this.$fill.css(hOrW, pctOfBar * 100 + '%');\r\n          } else {\r\n            //otherwise, use the css object we created above\r\n            _this.$fill.css(css);\r\n          }\r\n        });\r\n\r\n        /**\r\n         * Fires when the value has not been change for a given time.\r\n         * @event Slider#changed\r\n         */\r\n        clearTimeout(_this.timeout);\r\n        _this.timeout = setTimeout(function () {\r\n          _this.$element.trigger('changed.zf.slider', [$hndl]);\r\n        }, _this.options.changedDelay);\r\n      }\r\n\r\n      /**\r\n       * Sets the initial attribute for the slider element.\r\n       * @function\r\n       * @private\r\n       * @param {Number} idx - index of the current handle/input to use.\r\n       */\r\n\r\n    }, {\r\n      key: '_setInitAttr',\r\n      value: function _setInitAttr(idx) {\r\n        var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\r\n        this.inputs.eq(idx).attr({\r\n          'id': id,\r\n          'max': this.options.end,\r\n          'min': this.options.start,\r\n          'step': this.options.step\r\n        });\r\n        this.handles.eq(idx).attr({\r\n          'role': 'slider',\r\n          'aria-controls': id,\r\n          'aria-valuemax': this.options.end,\r\n          'aria-valuemin': this.options.start,\r\n          'aria-valuenow': idx === 0 ? this.options.initialStart : this.options.initialEnd,\r\n          'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\r\n          'tabindex': 0\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Sets the input and `aria-valuenow` values for the slider element.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the currently selected handle.\r\n       * @param {Number} val - floating point of the new value.\r\n       */\r\n\r\n    }, {\r\n      key: '_setValues',\r\n      value: function _setValues($handle, val) {\r\n        var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\r\n        this.inputs.eq(idx).val(val);\r\n        $handle.attr('aria-valuenow', val);\r\n      }\r\n\r\n      /**\r\n       * Handles events on the slider element.\r\n       * Calculates the new location of the current handle.\r\n       * If there are two handles and the bar was clicked, it determines which handle to move.\r\n       * @function\r\n       * @private\r\n       * @param {Object} e - the `event` object passed from the listener.\r\n       * @param {jQuery} $handle - the current handle to calculate for, if selected.\r\n       * @param {Number} val - floating point number for the new value of the slider.\r\n       * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\r\n       */\r\n\r\n    }, {\r\n      key: '_handleEvent',\r\n      value: function _handleEvent(e, $handle, val) {\r\n        var value, hasVal;\r\n        if (!val) {\r\n          //click or drag events\r\n          e.preventDefault();\r\n          var _this = this,\r\n              vertical = this.options.vertical,\r\n              param = vertical ? 'height' : 'width',\r\n              direction = vertical ? 'top' : 'left',\r\n              eventOffset = vertical ? e.pageY : e.pageX,\r\n              halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\r\n              barDim = this.$element[0].getBoundingClientRect()[param],\r\n              windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\r\n\r\n          var elemOffset = this.$element.offset()[direction];\r\n\r\n          // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\r\n          // best way to guess this is simulated is if clientY == pageY\r\n          if (e.clientY === e.pageY) {\r\n            eventOffset = eventOffset + windowScroll;\r\n          }\r\n          var eventFromBar = eventOffset - elemOffset;\r\n          var barXY;\r\n          if (eventFromBar < 0) {\r\n            barXY = 0;\r\n          } else if (eventFromBar > barDim) {\r\n            barXY = barDim;\r\n          } else {\r\n            barXY = eventFromBar;\r\n          }\r\n          offsetPct = percent(barXY, barDim);\r\n\r\n          value = (this.options.end - this.options.start) * offsetPct + this.options.start;\r\n\r\n          // turn everything around for RTL, yay math!\r\n          if (Foundation.rtl() && !this.options.vertical) {\r\n            value = this.options.end - value;\r\n          }\r\n\r\n          value = _this._adjustValue(null, value);\r\n          //boolean flag for the setHandlePos fn, specifically for vertical sliders\r\n          hasVal = false;\r\n\r\n          if (!$handle) {\r\n            //figure out which handle it is, pass it to the next function.\r\n            var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\r\n                secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\r\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\r\n          }\r\n        } else {\r\n          //change event on input\r\n          value = this._adjustValue(null, val);\r\n          hasVal = true;\r\n        }\r\n\r\n        this._setHandlePos($handle, value, hasVal);\r\n      }\r\n\r\n      /**\r\n       * Adjustes value for handle in regard to step value. returns adjusted value\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the selected handle.\r\n       * @param {Number} value - value to adjust. used if $handle is falsy\r\n       */\r\n\r\n    }, {\r\n      key: '_adjustValue',\r\n      value: function _adjustValue($handle, value) {\r\n        var val,\r\n            step = this.options.step,\r\n            div = parseFloat(step / 2),\r\n            left,\r\n            prev_val,\r\n            next_val;\r\n        if (!!$handle) {\r\n          val = parseFloat($handle.attr('aria-valuenow'));\r\n        } else {\r\n          val = value;\r\n        }\r\n        left = val % step;\r\n        prev_val = val - left;\r\n        next_val = prev_val + step;\r\n        if (left === 0) {\r\n          return val;\r\n        }\r\n        val = val >= prev_val + div ? next_val : prev_val;\r\n        return val;\r\n      }\r\n\r\n      /**\r\n       * Adds event listeners to the slider elements.\r\n       * @function\r\n       * @private\r\n       * @param {jQuery} $handle - the current handle to apply listeners to.\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events($handle) {\r\n        var _this = this,\r\n            curHandle,\r\n            timer;\r\n\r\n        this.inputs.off('change.zf.slider').on('change.zf.slider', function (e) {\r\n          var idx = _this.inputs.index($(this));\r\n          _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\r\n        });\r\n\r\n        if (this.options.clickSelect) {\r\n          this.$element.off('click.zf.slider').on('click.zf.slider', function (e) {\r\n            if (_this.$element.data('dragging')) {\r\n              return false;\r\n            }\r\n\r\n            if (!$(e.target).is('[data-slider-handle]')) {\r\n              if (_this.options.doubleSided) {\r\n                _this._handleEvent(e);\r\n              } else {\r\n                _this._handleEvent(e, _this.$handle);\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n        if (this.options.draggable) {\r\n          this.handles.addTouch();\r\n\r\n          var $body = $('body');\r\n          $handle.off('mousedown.zf.slider').on('mousedown.zf.slider', function (e) {\r\n            $handle.addClass('is-dragging');\r\n            _this.$fill.addClass('is-dragging'); //\r\n            _this.$element.data('dragging', true);\r\n\r\n            curHandle = $(e.currentTarget);\r\n\r\n            $body.on('mousemove.zf.slider', function (e) {\r\n              e.preventDefault();\r\n              _this._handleEvent(e, curHandle);\r\n            }).on('mouseup.zf.slider', function (e) {\r\n              _this._handleEvent(e, curHandle);\r\n\r\n              $handle.removeClass('is-dragging');\r\n              _this.$fill.removeClass('is-dragging');\r\n              _this.$element.data('dragging', false);\r\n\r\n              $body.off('mousemove.zf.slider mouseup.zf.slider');\r\n            });\r\n          })\r\n          // prevent events triggered by touch\r\n          .on('selectstart.zf.slider touchmove.zf.slider', function (e) {\r\n            e.preventDefault();\r\n          });\r\n        }\r\n\r\n        $handle.off('keydown.zf.slider').on('keydown.zf.slider', function (e) {\r\n          var _$handle = $(this),\r\n              idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\r\n              oldValue = parseFloat(_this.inputs.eq(idx).val()),\r\n              newValue;\r\n\r\n          // handle keyboard event with keyboard util\r\n          Foundation.Keyboard.handleKey(e, 'Slider', {\r\n            decrease: function () {\r\n              newValue = oldValue - _this.options.step;\r\n            },\r\n            increase: function () {\r\n              newValue = oldValue + _this.options.step;\r\n            },\r\n            decrease_fast: function () {\r\n              newValue = oldValue - _this.options.step * 10;\r\n            },\r\n            increase_fast: function () {\r\n              newValue = oldValue + _this.options.step * 10;\r\n            },\r\n            handled: function () {\r\n              // only set handle pos when event was handled specially\r\n              e.preventDefault();\r\n              _this._setHandlePos(_$handle, newValue, true);\r\n            }\r\n          });\r\n          /*if (newValue) { // if pressed key has special function, update value\r\n            e.preventDefault();\r\n            _this._setHandlePos(_$handle, newValue);\r\n          }*/\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Destroys the slider plugin.\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.handles.off('.zf.slider');\r\n        this.inputs.off('.zf.slider');\r\n        this.$element.off('.zf.slider');\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Slider;\r\n  }();\r\n\r\n  Slider.defaults = {\r\n    /**\r\n     * Minimum value for the slider scale.\r\n     * @option\r\n     * @example 0\r\n     */\r\n    start: 0,\r\n    /**\r\n     * Maximum value for the slider scale.\r\n     * @option\r\n     * @example 100\r\n     */\r\n    end: 100,\r\n    /**\r\n     * Minimum value change per change event.\r\n     * @option\r\n     * @example 1\r\n     */\r\n    step: 1,\r\n    /**\r\n     * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\r\n     * @option\r\n     * @example 0\r\n     */\r\n    initialStart: 0,\r\n    /**\r\n     * Value at which the right handle/second input should be set to on initialization.\r\n     * @option\r\n     * @example 100\r\n     */\r\n    initialEnd: 100,\r\n    /**\r\n     * Allows the input to be located outside the container and visible. Set to by the JS\r\n     * @option\r\n     * @example false\r\n     */\r\n    binding: false,\r\n    /**\r\n     * Allows the user to click/tap on the slider bar to select a value.\r\n     * @option\r\n     * @example true\r\n     */\r\n    clickSelect: true,\r\n    /**\r\n     * Set to true and use the `vertical` class to change alignment to vertical.\r\n     * @option\r\n     * @example false\r\n     */\r\n    vertical: false,\r\n    /**\r\n     * Allows the user to drag the slider handle(s) to select a value.\r\n     * @option\r\n     * @example true\r\n     */\r\n    draggable: true,\r\n    /**\r\n     * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\r\n     * @option\r\n     * @example false\r\n     */\r\n    disabled: false,\r\n    /**\r\n     * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\r\n     * @option\r\n     * @example false\r\n     */\r\n    doubleSided: false,\r\n    /**\r\n     * Potential future feature.\r\n     */\r\n    // steps: 100,\r\n    /**\r\n     * Number of decimal places the plugin should go to for floating point precision.\r\n     * @option\r\n     * @example 2\r\n     */\r\n    decimal: 2,\r\n    /**\r\n     * Time delay for dragged elements.\r\n     */\r\n    // dragDelay: 0,\r\n    /**\r\n     * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\r\n     * @option\r\n     * @example 200\r\n     */\r\n    moveTime: 200, //update this if changing the transition time in the sass\r\n    /**\r\n     * Class applied to disabled sliders.\r\n     * @option\r\n     * @example 'disabled'\r\n     */\r\n    disabledClass: 'disabled',\r\n    /**\r\n     * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\r\n     * @option\r\n     * @example false\r\n     */\r\n    invertVertical: false,\r\n    /**\r\n     * Milliseconds before the `changed.zf-slider` event is triggered after value change.\r\n     * @option\r\n     * @example 500\r\n     */\r\n    changedDelay: 500\r\n  };\r\n\r\n  function percent(frac, num) {\r\n    return frac / num;\r\n  }\r\n  function absPosition($handle, dir, clickPos, param) {\r\n    return Math.abs($handle.position()[dir] + $handle[param]() / 2 - clickPos);\r\n  }\r\n\r\n  // Window exports\r\n  Foundation.plugin(Slider, 'Slider');\r\n}(jQuery);\r\n\r\n//*********this is in case we go to static, absolute positions instead of dynamic positioning********\r\n// this.setSteps(function() {\r\n//   _this._events();\r\n//   var initStart = _this.options.positions[_this.options.initialStart - 1] || null;\r\n//   var initEnd = _this.options.initialEnd ? _this.options.position[_this.options.initialEnd - 1] : null;\r\n//   if (initStart || initEnd) {\r\n//     _this._handleEvent(initStart, initEnd);\r\n//   }\r\n// });\r\n\r\n//***********the other part of absolute positions*************\r\n// Slider.prototype.setSteps = function(cb) {\r\n//   var posChange = this.$element.outerWidth() / this.options.steps;\r\n//   var counter = 0\r\n//   while(counter < this.options.steps) {\r\n//     if (counter) {\r\n//       this.options.positions.push(this.options.positions[counter - 1] + posChange);\r\n//     } else {\r\n//       this.options.positions.push(posChange);\r\n//     }\r\n//     counter++;\r\n//   }\r\n//   cb();\r\n// };\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Sticky module.\r\n   * @module foundation.sticky\r\n   * @requires foundation.util.triggers\r\n   * @requires foundation.util.mediaQuery\r\n   */\r\n\r\n  var Sticky = function () {\r\n    /**\r\n     * Creates a new instance of a sticky thing.\r\n     * @class\r\n     * @param {jQuery} element - jQuery object to make sticky.\r\n     * @param {Object} options - options object passed when creating the element programmatically.\r\n     */\r\n\r\n    function Sticky(element, options) {\r\n      _classCallCheck(this, Sticky);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Sticky');\r\n    }\r\n\r\n    /**\r\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\r\n     * @function\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Sticky, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var $parent = this.$element.parent('[data-sticky-container]'),\r\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\r\n            _this = this;\r\n\r\n        if (!$parent.length) {\r\n          this.wasWrapped = true;\r\n        }\r\n        this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\r\n        this.$container.addClass(this.options.containerClass);\r\n\r\n        this.$element.addClass(this.options.stickyClass).attr({ 'data-resize': id });\r\n\r\n        this.scrollCount = this.options.checkEvery;\r\n        this.isStuck = false;\r\n        $(window).one('load.zf.sticky', function () {\r\n          if (_this.options.anchor !== '') {\r\n            _this.$anchor = $('#' + _this.options.anchor);\r\n          } else {\r\n            _this._parsePoints();\r\n          }\r\n\r\n          _this._setSizes(function () {\r\n            _this._calc(false);\r\n          });\r\n          _this._events(id.split('-').reverse().join('-'));\r\n        });\r\n      }\r\n\r\n      /**\r\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_parsePoints',\r\n      value: function _parsePoints() {\r\n        var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\r\n            btm = this.options.btmAnchor == \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\r\n            pts = [top, btm],\r\n            breaks = {};\r\n        for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\r\n          var pt;\r\n          if (typeof pts[i] === 'number') {\r\n            pt = pts[i];\r\n          } else {\r\n            var place = pts[i].split(':'),\r\n                anchor = $('#' + place[0]);\r\n\r\n            pt = anchor.offset().top;\r\n            if (place[1] && place[1].toLowerCase() === 'bottom') {\r\n              pt += anchor[0].getBoundingClientRect().height;\r\n            }\r\n          }\r\n          breaks[i] = pt;\r\n        }\r\n\r\n        this.points = breaks;\r\n        return;\r\n      }\r\n\r\n      /**\r\n       * Adds event handlers for the scrolling element.\r\n       * @private\r\n       * @param {String} id - psuedo-random id for unique scroll event listener.\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events(id) {\r\n        var _this = this,\r\n            scrollListener = this.scrollListener = 'scroll.zf.' + id;\r\n        if (this.isOn) {\r\n          return;\r\n        }\r\n        if (this.canStick) {\r\n          this.isOn = true;\r\n          $(window).off(scrollListener).on(scrollListener, function (e) {\r\n            if (_this.scrollCount === 0) {\r\n              _this.scrollCount = _this.options.checkEvery;\r\n              _this._setSizes(function () {\r\n                _this._calc(false, window.pageYOffset);\r\n              });\r\n            } else {\r\n              _this.scrollCount--;\r\n              _this._calc(false, window.pageYOffset);\r\n            }\r\n          });\r\n        }\r\n\r\n        this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger', function (e, el) {\r\n          _this._setSizes(function () {\r\n            _this._calc(false);\r\n            if (_this.canStick) {\r\n              if (!_this.isOn) {\r\n                _this._events(id);\r\n              }\r\n            } else if (_this.isOn) {\r\n              _this._pauseListeners(scrollListener);\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Removes event handlers for scroll and change events on anchor.\r\n       * @fires Sticky#pause\r\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\r\n       */\r\n\r\n    }, {\r\n      key: '_pauseListeners',\r\n      value: function _pauseListeners(scrollListener) {\r\n        this.isOn = false;\r\n        $(window).off(scrollListener);\r\n\r\n        /**\r\n         * Fires when the plugin is paused due to resize event shrinking the view.\r\n         * @event Sticky#pause\r\n         * @private\r\n         */\r\n        this.$element.trigger('pause.zf.sticky');\r\n      }\r\n\r\n      /**\r\n       * Called on every `scroll` event and on `_init`\r\n       * fires functions based on booleans and cached values\r\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\r\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\r\n       */\r\n\r\n    }, {\r\n      key: '_calc',\r\n      value: function _calc(checkSizes, scroll) {\r\n        if (checkSizes) {\r\n          this._setSizes();\r\n        }\r\n\r\n        if (!this.canStick) {\r\n          if (this.isStuck) {\r\n            this._removeSticky(true);\r\n          }\r\n          return false;\r\n        }\r\n\r\n        if (!scroll) {\r\n          scroll = window.pageYOffset;\r\n        }\r\n\r\n        if (scroll >= this.topPoint) {\r\n          if (scroll <= this.bottomPoint) {\r\n            if (!this.isStuck) {\r\n              this._setSticky();\r\n            }\r\n          } else {\r\n            if (this.isStuck) {\r\n              this._removeSticky(false);\r\n            }\r\n          }\r\n        } else {\r\n          if (this.isStuck) {\r\n            this._removeSticky(true);\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Causes the $element to become stuck.\r\n       * Adds `position: fixed;`, and helper classes.\r\n       * @fires Sticky#stuckto\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_setSticky',\r\n      value: function _setSticky() {\r\n        var _this = this,\r\n            stickTo = this.options.stickTo,\r\n            mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\r\n            notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\r\n            css = {};\r\n\r\n        css[mrgn] = this.options[mrgn] + 'em';\r\n        css[stickTo] = 0;\r\n        css[notStuckTo] = 'auto';\r\n        css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\r\n        this.isStuck = true;\r\n        this.$element.removeClass('is-anchored is-at-' + notStuckTo).addClass('is-stuck is-at-' + stickTo).css(css)\r\n        /**\r\n         * Fires when the $element has become `position: fixed;`\r\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\r\n         * @event Sticky#stuckto\r\n         */\r\n        .trigger('sticky.zf.stuckto:' + stickTo);\r\n        this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function () {\r\n          _this._setSizes();\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Causes the $element to become unstuck.\r\n       * Removes `position: fixed;`, and helper classes.\r\n       * Adds other helper classes.\r\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\r\n       * @fires Sticky#unstuckfrom\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_removeSticky',\r\n      value: function _removeSticky(isTop) {\r\n        var stickTo = this.options.stickTo,\r\n            stickToTop = stickTo === 'top',\r\n            css = {},\r\n            anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\r\n            mrgn = stickToTop ? 'marginTop' : 'marginBottom',\r\n            notStuckTo = stickToTop ? 'bottom' : 'top',\r\n            topOrBottom = isTop ? 'top' : 'bottom';\r\n\r\n        css[mrgn] = 0;\r\n\r\n        css['bottom'] = 'auto';\r\n        if (isTop) {\r\n          css['top'] = 0;\r\n        } else {\r\n          css['top'] = anchorPt;\r\n        }\r\n\r\n        css['left'] = '';\r\n        this.isStuck = false;\r\n        this.$element.removeClass('is-stuck is-at-' + stickTo).addClass('is-anchored is-at-' + topOrBottom).css(css)\r\n        /**\r\n         * Fires when the $element has become anchored.\r\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\r\n         * @event Sticky#unstuckfrom\r\n         */\r\n        .trigger('sticky.zf.unstuckfrom:' + topOrBottom);\r\n      }\r\n\r\n      /**\r\n       * Sets the $element and $container sizes for plugin.\r\n       * Calls `_setBreakPoints`.\r\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_setSizes',\r\n      value: function _setSizes(cb) {\r\n        this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\r\n        if (!this.canStick) {\r\n          cb();\r\n        }\r\n        var _this = this,\r\n            newElemWidth = this.$container[0].getBoundingClientRect().width,\r\n            comp = window.getComputedStyle(this.$container[0]),\r\n            pdng = parseInt(comp['padding-right'], 10);\r\n\r\n        if (this.$anchor && this.$anchor.length) {\r\n          this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\r\n        } else {\r\n          this._parsePoints();\r\n        }\r\n\r\n        this.$element.css({\r\n          'max-width': newElemWidth - pdng + 'px'\r\n        });\r\n\r\n        var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\r\n        if (this.$element.css(\"display\") == \"none\") {\r\n          newContainerHeight = 0;\r\n        }\r\n        this.containerHeight = newContainerHeight;\r\n        this.$container.css({\r\n          height: newContainerHeight\r\n        });\r\n        this.elemHeight = newContainerHeight;\r\n\r\n        if (this.isStuck) {\r\n          this.$element.css({ \"left\": this.$container.offset().left + parseInt(comp['padding-left'], 10) });\r\n        }\r\n\r\n        this._setBreakPoints(newContainerHeight, function () {\r\n          if (cb) {\r\n            cb();\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\r\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\r\n       * @param {Function} cb - optional callback function to be called on completion.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_setBreakPoints',\r\n      value: function _setBreakPoints(elemHeight, cb) {\r\n        if (!this.canStick) {\r\n          if (cb) {\r\n            cb();\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n        var mTop = emCalc(this.options.marginTop),\r\n            mBtm = emCalc(this.options.marginBottom),\r\n            topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\r\n            bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\r\n\r\n        // topPoint = this.$anchor.offset().top || this.points[0],\r\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\r\n        winHeight = window.innerHeight;\r\n\r\n        if (this.options.stickTo === 'top') {\r\n          topPoint -= mTop;\r\n          bottomPoint -= elemHeight + mTop;\r\n        } else if (this.options.stickTo === 'bottom') {\r\n          topPoint -= winHeight - (elemHeight + mBtm);\r\n          bottomPoint -= winHeight - mBtm;\r\n        } else {\r\n          //this would be the stickTo: both option... tricky\r\n        }\r\n\r\n        this.topPoint = topPoint;\r\n        this.bottomPoint = bottomPoint;\r\n\r\n        if (cb) {\r\n          cb();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Destroys the current sticky element.\r\n       * Resets the element to the top position first.\r\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this._removeSticky(true);\r\n\r\n        this.$element.removeClass(this.options.stickyClass + ' is-anchored is-at-top').css({\r\n          height: '',\r\n          top: '',\r\n          bottom: '',\r\n          'max-width': ''\r\n        }).off('resizeme.zf.trigger');\r\n        if (this.$anchor && this.$anchor.length) {\r\n          this.$anchor.off('change.zf.sticky');\r\n        }\r\n        $(window).off(this.scrollListener);\r\n\r\n        if (this.wasWrapped) {\r\n          this.$element.unwrap();\r\n        } else {\r\n          this.$container.removeClass(this.options.containerClass).css({\r\n            height: ''\r\n          });\r\n        }\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Sticky;\r\n  }();\r\n\r\n  Sticky.defaults = {\r\n    /**\r\n     * Customizable container template. Add your own classes for styling and sizing.\r\n     * @option\r\n     * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\r\n     */\r\n    container: '<div data-sticky-container></div>',\r\n    /**\r\n     * Location in the view the element sticks to.\r\n     * @option\r\n     * @example 'top'\r\n     */\r\n    stickTo: 'top',\r\n    /**\r\n     * If anchored to a single element, the id of that element.\r\n     * @option\r\n     * @example 'exampleId'\r\n     */\r\n    anchor: '',\r\n    /**\r\n     * If using more than one element as anchor points, the id of the top anchor.\r\n     * @option\r\n     * @example 'exampleId:top'\r\n     */\r\n    topAnchor: '',\r\n    /**\r\n     * If using more than one element as anchor points, the id of the bottom anchor.\r\n     * @option\r\n     * @example 'exampleId:bottom'\r\n     */\r\n    btmAnchor: '',\r\n    /**\r\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\r\n     * @option\r\n     * @example 1\r\n     */\r\n    marginTop: 1,\r\n    /**\r\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\r\n     * @option\r\n     * @example 1\r\n     */\r\n    marginBottom: 1,\r\n    /**\r\n     * Breakpoint string that is the minimum screen size an element should become sticky.\r\n     * @option\r\n     * @example 'medium'\r\n     */\r\n    stickyOn: 'medium',\r\n    /**\r\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\r\n     * @option\r\n     * @example 'sticky'\r\n     */\r\n    stickyClass: 'sticky',\r\n    /**\r\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\r\n     * @option\r\n     * @example 'sticky-container'\r\n     */\r\n    containerClass: 'sticky-container',\r\n    /**\r\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\r\n     * @option\r\n     * @example 50\r\n     */\r\n    checkEvery: -1\r\n  };\r\n\r\n  /**\r\n   * Helper function to calculate em values\r\n   * @param Number {em} - number of em's to calculate into pixels\r\n   */\r\n  function emCalc(em) {\r\n    return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\r\n  }\r\n\r\n  // Window exports\r\n  Foundation.plugin(Sticky, 'Sticky');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Tabs module.\r\n   * @module foundation.tabs\r\n   * @requires foundation.util.keyboard\r\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\r\n   */\r\n\r\n  var Tabs = function () {\r\n    /**\r\n     * Creates a new instance of tabs.\r\n     * @class\r\n     * @fires Tabs#init\r\n     * @param {jQuery} element - jQuery object to make into tabs.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Tabs(element, options) {\r\n      _classCallCheck(this, Tabs);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\r\n\r\n      this._init();\r\n      Foundation.registerPlugin(this, 'Tabs');\r\n      Foundation.Keyboard.register('Tabs', {\r\n        'ENTER': 'open',\r\n        'SPACE': 'open',\r\n        'ARROW_RIGHT': 'next',\r\n        'ARROW_UP': 'previous',\r\n        'ARROW_DOWN': 'next',\r\n        'ARROW_LEFT': 'previous'\r\n        // 'TAB': 'next',\r\n        // 'SHIFT_TAB': 'previous'\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Tabs, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var _this = this;\r\n\r\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\r\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\r\n\r\n        this.$tabTitles.each(function () {\r\n          var $elem = $(this),\r\n              $link = $elem.find('a'),\r\n              isActive = $elem.hasClass('is-active'),\r\n              hash = $link[0].hash.slice(1),\r\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\r\n              $tabContent = $('#' + hash);\r\n\r\n          $elem.attr({ 'role': 'presentation' });\r\n\r\n          $link.attr({\r\n            'role': 'tab',\r\n            'aria-controls': hash,\r\n            'aria-selected': isActive,\r\n            'id': linkId\r\n          });\r\n\r\n          $tabContent.attr({\r\n            'role': 'tabpanel',\r\n            'aria-hidden': !isActive,\r\n            'aria-labelledby': linkId\r\n          });\r\n\r\n          if (isActive && _this.options.autoFocus) {\r\n            $link.focus();\r\n          }\r\n        });\r\n\r\n        if (this.options.matchHeight) {\r\n          var $images = this.$tabContent.find('img');\r\n\r\n          if ($images.length) {\r\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\r\n          } else {\r\n            this._setHeight();\r\n          }\r\n        }\r\n\r\n        this._events();\r\n      }\r\n\r\n      /**\r\n       * Adds event handlers for items within the tabs.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        this._addKeyHandler();\r\n        this._addClickHandler();\r\n        this._setHeightMqHandler = null;\r\n\r\n        if (this.options.matchHeight) {\r\n          this._setHeightMqHandler = this._setHeight.bind(this);\r\n\r\n          $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Adds click handlers for items within the tabs.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_addClickHandler',\r\n      value: function _addClickHandler() {\r\n        var _this = this;\r\n\r\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if ($(this).hasClass('is-active')) {\r\n            return;\r\n          }\r\n          _this._handleTabChange($(this));\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Adds keyboard event handlers for items within the tabs.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_addKeyHandler',\r\n      value: function _addKeyHandler() {\r\n        var _this = this;\r\n        var $firstTab = _this.$element.find('li:first-of-type');\r\n        var $lastTab = _this.$element.find('li:last-of-type');\r\n\r\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\r\n          if (e.which === 9) return;\r\n\r\n          var $element = $(this),\r\n              $elements = $element.parent('ul').children('li'),\r\n              $prevElement,\r\n              $nextElement;\r\n\r\n          $elements.each(function (i) {\r\n            if ($(this).is($element)) {\r\n              if (_this.options.wrapOnKeys) {\r\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\r\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\r\n              } else {\r\n                $prevElement = $elements.eq(Math.max(0, i - 1));\r\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\r\n              }\r\n              return;\r\n            }\r\n          });\r\n\r\n          // handle keyboard event with keyboard util\r\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\r\n            open: function () {\r\n              $element.find('[role=\"tab\"]').focus();\r\n              _this._handleTabChange($element);\r\n            },\r\n            previous: function () {\r\n              $prevElement.find('[role=\"tab\"]').focus();\r\n              _this._handleTabChange($prevElement);\r\n            },\r\n            next: function () {\r\n              $nextElement.find('[role=\"tab\"]').focus();\r\n              _this._handleTabChange($nextElement);\r\n            },\r\n            handled: function () {\r\n              e.stopPropagation();\r\n              e.preventDefault();\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      /**\r\n       * Opens the tab `$targetContent` defined by `$target`.\r\n       * @param {jQuery} $target - Tab to open.\r\n       * @fires Tabs#change\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: '_handleTabChange',\r\n      value: function _handleTabChange($target) {\r\n        var $tabLink = $target.find('[role=\"tab\"]'),\r\n            hash = $tabLink[0].hash,\r\n            $targetContent = this.$tabContent.find(hash),\r\n            $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\r\n\r\n        $('#' + $oldTab.attr('aria-controls')).removeClass('is-active').attr({ 'aria-hidden': 'true' });\r\n\r\n        $target.addClass('is-active');\r\n\r\n        $tabLink.attr({ 'aria-selected': 'true' });\r\n\r\n        $targetContent.addClass('is-active').attr({ 'aria-hidden': 'false' });\r\n\r\n        /**\r\n         * Fires when the plugin has successfully changed tabs.\r\n         * @event Tabs#change\r\n         */\r\n        this.$element.trigger('change.zf.tabs', [$target]);\r\n      }\r\n\r\n      /**\r\n       * Public method for selecting a content pane to display.\r\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'selectTab',\r\n      value: function selectTab(elem) {\r\n        var idStr;\r\n\r\n        if (typeof elem === 'object') {\r\n          idStr = elem[0].id;\r\n        } else {\r\n          idStr = elem;\r\n        }\r\n\r\n        if (idStr.indexOf('#') < 0) {\r\n          idStr = '#' + idStr;\r\n        }\r\n\r\n        var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\r\n\r\n        this._handleTabChange($target);\r\n      }\r\n    }, {\r\n      key: '_setHeight',\r\n\r\n      /**\r\n       * Sets the height of each panel to the height of the tallest panel.\r\n       * If enabled in options, gets called on media query change.\r\n       * If loading content via external source, can be called directly or with _reflow.\r\n       * @function\r\n       * @private\r\n       */\r\n      value: function _setHeight() {\r\n        var max = 0;\r\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\r\n          var panel = $(this),\r\n              isActive = panel.hasClass('is-active');\r\n\r\n          if (!isActive) {\r\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\r\n          }\r\n\r\n          var temp = this.getBoundingClientRect().height;\r\n\r\n          if (!isActive) {\r\n            panel.css({\r\n              'visibility': '',\r\n              'display': ''\r\n            });\r\n          }\r\n\r\n          max = temp > max ? temp : max;\r\n        }).css('height', max + 'px');\r\n      }\r\n\r\n      /**\r\n       * Destroys an instance of an tabs.\r\n       * @fires Tabs#destroyed\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\r\n\r\n        if (this.options.matchHeight) {\r\n          if (this._setHeightMqHandler != null) {\r\n            $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\r\n          }\r\n        }\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Tabs;\r\n  }();\r\n\r\n  Tabs.defaults = {\r\n    /**\r\n     * Allows the window to scroll to content of active pane on load if set to true.\r\n     * @option\r\n     * @example false\r\n     */\r\n    autoFocus: false,\r\n\r\n    /**\r\n     * Allows keyboard input to 'wrap' around the tab links.\r\n     * @option\r\n     * @example true\r\n     */\r\n    wrapOnKeys: true,\r\n\r\n    /**\r\n     * Allows the tab content panes to match heights if set to true.\r\n     * @option\r\n     * @example false\r\n     */\r\n    matchHeight: false,\r\n\r\n    /**\r\n     * Class applied to `li`'s in tab link list.\r\n     * @option\r\n     * @example 'tabs-title'\r\n     */\r\n    linkClass: 'tabs-title',\r\n\r\n    /**\r\n     * Class applied to the content containers.\r\n     * @option\r\n     * @example 'tabs-panel'\r\n     */\r\n    panelClass: 'tabs-panel'\r\n  };\r\n\r\n  function checkClass($elem) {\r\n    return $elem.hasClass('is-active');\r\n  }\r\n\r\n  // Window exports\r\n  Foundation.plugin(Tabs, 'Tabs');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Toggler module.\r\n   * @module foundation.toggler\r\n   * @requires foundation.util.motion\r\n   * @requires foundation.util.triggers\r\n   */\r\n\r\n  var Toggler = function () {\r\n    /**\r\n     * Creates a new instance of Toggler.\r\n     * @class\r\n     * @fires Toggler#init\r\n     * @param {Object} element - jQuery object to add the trigger to.\r\n     * @param {Object} options - Overrides to the default plugin settings.\r\n     */\r\n\r\n    function Toggler(element, options) {\r\n      _classCallCheck(this, Toggler);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\r\n      this.className = '';\r\n\r\n      this._init();\r\n      this._events();\r\n\r\n      Foundation.registerPlugin(this, 'Toggler');\r\n    }\r\n\r\n    /**\r\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\r\n     * @function\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Toggler, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var input;\r\n        // Parse animation classes if they were set\r\n        if (this.options.animate) {\r\n          input = this.options.animate.split(' ');\r\n\r\n          this.animationIn = input[0];\r\n          this.animationOut = input[1] || null;\r\n        }\r\n        // Otherwise, parse toggle class\r\n        else {\r\n            input = this.$element.data('toggler');\r\n            // Allow for a . at the beginning of the string\r\n            this.className = input[0] === '.' ? input.slice(1) : input;\r\n          }\r\n\r\n        // Add ARIA attributes to triggers\r\n        var id = this.$element[0].id;\r\n        $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\r\n        // If the target is hidden, add aria-hidden\r\n        this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\r\n      }\r\n\r\n      /**\r\n       * Initializes events for the toggle trigger.\r\n       * @function\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\r\n      }\r\n\r\n      /**\r\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\r\n       * @function\r\n       * @fires Toggler#on\r\n       * @fires Toggler#off\r\n       */\r\n\r\n    }, {\r\n      key: 'toggle',\r\n      value: function toggle() {\r\n        this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\r\n      }\r\n    }, {\r\n      key: '_toggleClass',\r\n      value: function _toggleClass() {\r\n        this.$element.toggleClass(this.className);\r\n\r\n        var isOn = this.$element.hasClass(this.className);\r\n        if (isOn) {\r\n          /**\r\n           * Fires if the target element has the class after a toggle.\r\n           * @event Toggler#on\r\n           */\r\n          this.$element.trigger('on.zf.toggler');\r\n        } else {\r\n          /**\r\n           * Fires if the target element does not have the class after a toggle.\r\n           * @event Toggler#off\r\n           */\r\n          this.$element.trigger('off.zf.toggler');\r\n        }\r\n\r\n        this._updateARIA(isOn);\r\n      }\r\n    }, {\r\n      key: '_toggleAnimate',\r\n      value: function _toggleAnimate() {\r\n        var _this = this;\r\n\r\n        if (this.$element.is(':hidden')) {\r\n          Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\r\n            _this._updateARIA(true);\r\n            this.trigger('on.zf.toggler');\r\n          });\r\n        } else {\r\n          Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\r\n            _this._updateARIA(false);\r\n            this.trigger('off.zf.toggler');\r\n          });\r\n        }\r\n      }\r\n    }, {\r\n      key: '_updateARIA',\r\n      value: function _updateARIA(isOn) {\r\n        this.$element.attr('aria-expanded', isOn ? true : false);\r\n      }\r\n\r\n      /**\r\n       * Destroys the instance of Toggler on the element.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.off('.zf.toggler');\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Toggler;\r\n  }();\r\n\r\n  Toggler.defaults = {\r\n    /**\r\n     * Tells the plugin if the element should animated when toggled.\r\n     * @option\r\n     * @example false\r\n     */\r\n    animate: false\r\n  };\r\n\r\n  // Window exports\r\n  Foundation.plugin(Toggler, 'Toggler');\r\n}(jQuery);\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n!function ($) {\r\n\r\n  /**\r\n   * Tooltip module.\r\n   * @module foundation.tooltip\r\n   * @requires foundation.util.box\r\n   * @requires foundation.util.triggers\r\n   */\r\n\r\n  var Tooltip = function () {\r\n    /**\r\n     * Creates a new instance of a Tooltip.\r\n     * @class\r\n     * @fires Tooltip#init\r\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\r\n     * @param {Object} options - object to extend the default configuration.\r\n     */\r\n\r\n    function Tooltip(element, options) {\r\n      _classCallCheck(this, Tooltip);\r\n\r\n      this.$element = element;\r\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\r\n\r\n      this.isActive = false;\r\n      this.isClick = false;\r\n      this._init();\r\n\r\n      Foundation.registerPlugin(this, 'Tooltip');\r\n    }\r\n\r\n    /**\r\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\r\n     * @private\r\n     */\r\n\r\n\r\n    _createClass(Tooltip, [{\r\n      key: '_init',\r\n      value: function _init() {\r\n        var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\r\n\r\n        this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\r\n        this.options.tipText = this.options.tipText || this.$element.attr('title');\r\n        this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\r\n\r\n        this.template.appendTo(document.body).text(this.options.tipText).hide();\r\n\r\n        this.$element.attr({\r\n          'title': '',\r\n          'aria-describedby': elemId,\r\n          'data-yeti-box': elemId,\r\n          'data-toggle': elemId,\r\n          'data-resize': elemId\r\n        }).addClass(this.triggerClass);\r\n\r\n        //helper variables to track movement on collisions\r\n        this.usedPositions = [];\r\n        this.counter = 4;\r\n        this.classChanged = false;\r\n\r\n        this._events();\r\n      }\r\n\r\n      /**\r\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_getPositionClass',\r\n      value: function _getPositionClass(element) {\r\n        if (!element) {\r\n          return '';\r\n        }\r\n        // var position = element.attr('class').match(/top|left|right/g);\r\n        var position = element[0].className.match(/\\b(top|left|right)\\b/g);\r\n        position = position ? position[0] : '';\r\n        return position;\r\n      }\r\n    }, {\r\n      key: '_buildTemplate',\r\n\r\n      /**\r\n       * builds the tooltip element, adds attributes, and returns the template.\r\n       * @private\r\n       */\r\n      value: function _buildTemplate(id) {\r\n        var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass + ' ' + this.options.templateClasses).trim();\r\n        var $template = $('<div></div>').addClass(templateClasses).attr({\r\n          'role': 'tooltip',\r\n          'aria-hidden': true,\r\n          'data-is-active': false,\r\n          'data-is-focus': false,\r\n          'id': id\r\n        });\r\n        return $template;\r\n      }\r\n\r\n      /**\r\n       * Function that gets called if a collision event is detected.\r\n       * @param {String} position - positioning class to try\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_reposition',\r\n      value: function _reposition(position) {\r\n        this.usedPositions.push(position ? position : 'bottom');\r\n\r\n        //default, try switching to opposite side\r\n        if (!position && this.usedPositions.indexOf('top') < 0) {\r\n          this.template.addClass('top');\r\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\r\n          this.template.removeClass(position);\r\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\r\n          this.template.removeClass(position).addClass('right');\r\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\r\n          this.template.removeClass(position).addClass('left');\r\n        }\r\n\r\n        //if default change didn't work, try bottom or left first\r\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\r\n            this.template.addClass('left');\r\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\r\n            this.template.removeClass(position).addClass('left');\r\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\r\n            this.template.removeClass(position);\r\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\r\n            this.template.removeClass(position);\r\n          }\r\n          //if nothing cleared, set to bottom\r\n          else {\r\n              this.template.removeClass(position);\r\n            }\r\n        this.classChanged = true;\r\n        this.counter--;\r\n      }\r\n\r\n      /**\r\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\r\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_setPosition',\r\n      value: function _setPosition() {\r\n        var position = this._getPositionClass(this.template),\r\n            $tipDims = Foundation.Box.GetDimensions(this.template),\r\n            $anchorDims = Foundation.Box.GetDimensions(this.$element),\r\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\r\n            param = direction === 'top' ? 'height' : 'width',\r\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\r\n            _this = this;\r\n\r\n        if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\r\n          this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\r\n            // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\r\n            'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\r\n            'height': 'auto'\r\n          });\r\n          return false;\r\n        }\r\n\r\n        this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\r\n\r\n        while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\r\n          this._reposition(position);\r\n          this._setPosition();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\r\n       * @fires Tooltip#closeme\r\n       * @fires Tooltip#show\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'show',\r\n      value: function show() {\r\n        if (this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)) {\r\n          // console.error('The screen is too small to display this tooltip');\r\n          return false;\r\n        }\r\n\r\n        var _this = this;\r\n        this.template.css('visibility', 'hidden').show();\r\n        this._setPosition();\r\n\r\n        /**\r\n         * Fires to close all other open tooltips on the page\r\n         * @event Closeme#tooltip\r\n         */\r\n        this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\r\n\r\n        this.template.attr({\r\n          'data-is-active': true,\r\n          'aria-hidden': false\r\n        });\r\n        _this.isActive = true;\r\n        // console.log(this.template);\r\n        this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\r\n          //maybe do stuff?\r\n        });\r\n        /**\r\n         * Fires when the tooltip is shown\r\n         * @event Tooltip#show\r\n         */\r\n        this.$element.trigger('show.zf.tooltip');\r\n      }\r\n\r\n      /**\r\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\r\n       * @fires Tooltip#hide\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'hide',\r\n      value: function hide() {\r\n        // console.log('hiding', this.$element.data('yeti-box'));\r\n        var _this = this;\r\n        this.template.stop().attr({\r\n          'aria-hidden': true,\r\n          'data-is-active': false\r\n        }).fadeOut(this.options.fadeOutDuration, function () {\r\n          _this.isActive = false;\r\n          _this.isClick = false;\r\n          if (_this.classChanged) {\r\n            _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\r\n\r\n            _this.usedPositions = [];\r\n            _this.counter = 4;\r\n            _this.classChanged = false;\r\n          }\r\n        });\r\n        /**\r\n         * fires when the tooltip is hidden\r\n         * @event Tooltip#hide\r\n         */\r\n        this.$element.trigger('hide.zf.tooltip');\r\n      }\r\n\r\n      /**\r\n       * adds event listeners for the tooltip and its anchor\r\n       * TODO combine some of the listeners like focus and mouseenter, etc.\r\n       * @private\r\n       */\r\n\r\n    }, {\r\n      key: '_events',\r\n      value: function _events() {\r\n        var _this = this;\r\n        var $template = this.template;\r\n        var isFocus = false;\r\n\r\n        if (!this.options.disableHover) {\r\n\r\n          this.$element.on('mouseenter.zf.tooltip', function (e) {\r\n            if (!_this.isActive) {\r\n              _this.timeout = setTimeout(function () {\r\n                _this.show();\r\n              }, _this.options.hoverDelay);\r\n            }\r\n          }).on('mouseleave.zf.tooltip', function (e) {\r\n            clearTimeout(_this.timeout);\r\n            if (!isFocus || _this.isClick && !_this.options.clickOpen) {\r\n              _this.hide();\r\n            }\r\n          });\r\n        }\r\n\r\n        if (this.options.clickOpen) {\r\n          this.$element.on('mousedown.zf.tooltip', function (e) {\r\n            e.stopImmediatePropagation();\r\n            if (_this.isClick) {\r\n              //_this.hide();\r\n              // _this.isClick = false;\r\n            } else {\r\n                _this.isClick = true;\r\n                if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\r\n                  _this.show();\r\n                }\r\n              }\r\n          });\r\n        } else {\r\n          this.$element.on('mousedown.zf.tooltip', function (e) {\r\n            e.stopImmediatePropagation();\r\n            _this.isClick = true;\r\n          });\r\n        }\r\n\r\n        if (!this.options.disableForTouch) {\r\n          this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\r\n            _this.isActive ? _this.hide() : _this.show();\r\n          });\r\n        }\r\n\r\n        this.$element.on({\r\n          // 'toggle.zf.trigger': this.toggle.bind(this),\r\n          // 'close.zf.trigger': this.hide.bind(this)\r\n          'close.zf.trigger': this.hide.bind(this)\r\n        });\r\n\r\n        this.$element.on('focus.zf.tooltip', function (e) {\r\n          isFocus = true;\r\n          if (_this.isClick) {\r\n            // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\r\n            // a real focus, otherwise on hover and come back we get bad behavior\r\n            if (!_this.options.clickOpen) {\r\n              isFocus = false;\r\n            }\r\n            return false;\r\n          } else {\r\n            _this.show();\r\n          }\r\n        }).on('focusout.zf.tooltip', function (e) {\r\n          isFocus = false;\r\n          _this.isClick = false;\r\n          _this.hide();\r\n        }).on('resizeme.zf.trigger', function () {\r\n          if (_this.isActive) {\r\n            _this._setPosition();\r\n          }\r\n        });\r\n      }\r\n\r\n      /**\r\n       * adds a toggle method, in addition to the static show() & hide() functions\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'toggle',\r\n      value: function toggle() {\r\n        if (this.isActive) {\r\n          this.hide();\r\n        } else {\r\n          this.show();\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Destroys an instance of tooltip, removes template element from the view.\r\n       * @function\r\n       */\r\n\r\n    }, {\r\n      key: 'destroy',\r\n      value: function destroy() {\r\n        this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tootip')\r\n        //  .removeClass('has-tip')\r\n        .removeAttr('aria-describedby').removeAttr('data-yeti-box').removeAttr('data-toggle').removeAttr('data-resize');\r\n\r\n        this.template.remove();\r\n\r\n        Foundation.unregisterPlugin(this);\r\n      }\r\n    }]);\r\n\r\n    return Tooltip;\r\n  }();\r\n\r\n  Tooltip.defaults = {\r\n    disableForTouch: false,\r\n    /**\r\n     * Time, in ms, before a tooltip should open on hover.\r\n     * @option\r\n     * @example 200\r\n     */\r\n    hoverDelay: 200,\r\n    /**\r\n     * Time, in ms, a tooltip should take to fade into view.\r\n     * @option\r\n     * @example 150\r\n     */\r\n    fadeInDuration: 150,\r\n    /**\r\n     * Time, in ms, a tooltip should take to fade out of view.\r\n     * @option\r\n     * @example 150\r\n     */\r\n    fadeOutDuration: 150,\r\n    /**\r\n     * Disables hover events from opening the tooltip if set to true\r\n     * @option\r\n     * @example false\r\n     */\r\n    disableHover: false,\r\n    /**\r\n     * Optional addtional classes to apply to the tooltip template on init.\r\n     * @option\r\n     * @example 'my-cool-tip-class'\r\n     */\r\n    templateClasses: '',\r\n    /**\r\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\r\n     * @option\r\n     * @example 'tooltip'\r\n     */\r\n    tooltipClass: 'tooltip',\r\n    /**\r\n     * Class applied to the tooltip anchor element.\r\n     * @option\r\n     * @example 'has-tip'\r\n     */\r\n    triggerClass: 'has-tip',\r\n    /**\r\n     * Minimum breakpoint size at which to open the tooltip.\r\n     * @option\r\n     * @example 'small'\r\n     */\r\n    showOn: 'small',\r\n    /**\r\n     * Custom template to be used to generate markup for tooltip.\r\n     * @option\r\n     * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\r\n     */\r\n    template: '',\r\n    /**\r\n     * Text displayed in the tooltip template on open.\r\n     * @option\r\n     * @example 'Some cool space fact here.'\r\n     */\r\n    tipText: '',\r\n    touchCloseText: 'Tap to close.',\r\n    /**\r\n     * Allows the tooltip to remain open if triggered with a click or touch event.\r\n     * @option\r\n     * @example true\r\n     */\r\n    clickOpen: true,\r\n    /**\r\n     * Additional positioning classes, set by the JS\r\n     * @option\r\n     * @example 'top'\r\n     */\r\n    positionClass: '',\r\n    /**\r\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\r\n     * @option\r\n     * @example 10\r\n     */\r\n    vOffset: 10,\r\n    /**\r\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\r\n     * @option\r\n     * @example 12\r\n     */\r\n    hOffset: 12\r\n  };\r\n\r\n  /**\r\n   * TODO utilize resize event trigger\r\n   */\r\n\r\n  // Window exports\r\n  Foundation.plugin(Tooltip, 'Tooltip');\r\n}(jQuery);\r\n","window.whatInput = (function() {\r\n\r\n  'use strict';\r\n\r\n  /*\r\n    ---------------\r\n    variables\r\n    ---------------\r\n  */\r\n\r\n  // array of actively pressed keys\r\n  var activeKeys = [];\r\n\r\n  // cache document.body\r\n  var body;\r\n\r\n  // boolean: true if touch buffer timer is running\r\n  var buffer = false;\r\n\r\n  // the last used input type\r\n  var currentInput = null;\r\n\r\n  // `input` types that don't accept text\r\n  var nonTypingInputs = [\r\n    'button',\r\n    'checkbox',\r\n    'file',\r\n    'image',\r\n    'radio',\r\n    'reset',\r\n    'submit'\r\n  ];\r\n\r\n  // detect version of mouse wheel event to use\r\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n  var mouseWheel = detectWheel();\r\n\r\n  // list of modifier keys commonly used with the mouse and\r\n  // can be safely ignored to prevent false keyboard detection\r\n  var ignoreMap = [\r\n    16, // shift\r\n    17, // control\r\n    18, // alt\r\n    91, // Windows key / left Apple cmd\r\n    93  // Windows menu / right Apple cmd\r\n  ];\r\n\r\n  // mapping of events to input types\r\n  var inputMap = {\r\n    'keydown': 'keyboard',\r\n    'keyup': 'keyboard',\r\n    'mousedown': 'mouse',\r\n    'mousemove': 'mouse',\r\n    'MSPointerDown': 'pointer',\r\n    'MSPointerMove': 'pointer',\r\n    'pointerdown': 'pointer',\r\n    'pointermove': 'pointer',\r\n    'touchstart': 'touch'\r\n  };\r\n\r\n  // add correct mouse wheel event mapping to `inputMap`\r\n  inputMap[detectWheel()] = 'mouse';\r\n\r\n  // array of all used input types\r\n  var inputTypes = [];\r\n\r\n  // mapping of key codes to a common name\r\n  var keyMap = {\r\n    9: 'tab',\r\n    13: 'enter',\r\n    16: 'shift',\r\n    27: 'esc',\r\n    32: 'space',\r\n    37: 'left',\r\n    38: 'up',\r\n    39: 'right',\r\n    40: 'down'\r\n  };\r\n\r\n  // map of IE 10 pointer events\r\n  var pointerMap = {\r\n    2: 'touch',\r\n    3: 'touch', // treat pen like touch\r\n    4: 'mouse'\r\n  };\r\n\r\n  // touch buffer timer\r\n  var timer;\r\n\r\n\r\n  /*\r\n    ---------------\r\n    functions\r\n    ---------------\r\n  */\r\n\r\n  // allows events that are also triggered to be filtered out for `touchstart`\r\n  function eventBuffer() {\r\n    clearTimer();\r\n    setInput(event);\r\n\r\n    buffer = true;\r\n    timer = window.setTimeout(function() {\r\n      buffer = false;\r\n    }, 650);\r\n  }\r\n\r\n  function bufferedEvent(event) {\r\n    if (!buffer) setInput(event);\r\n  }\r\n\r\n  function unBufferedEvent(event) {\r\n    clearTimer();\r\n    setInput(event);\r\n  }\r\n\r\n  function clearTimer() {\r\n    window.clearTimeout(timer);\r\n  }\r\n\r\n  function setInput(event) {\r\n    var eventKey = key(event);\r\n    var value = inputMap[event.type];\r\n    if (value === 'pointer') value = pointerType(event);\r\n\r\n    // don't do anything if the value matches the input type already set\r\n    if (currentInput !== value) {\r\n      var eventTarget = target(event);\r\n      var eventTargetNode = eventTarget.nodeName.toLowerCase();\r\n      var eventTargetType = (eventTargetNode === 'input') ? eventTarget.getAttribute('type') : null;\r\n\r\n      if (\r\n        (// only if the user flag to allow typing in form fields isn't set\r\n        !body.hasAttribute('data-whatinput-formtyping') &&\r\n\r\n        // only if currentInput has a value\r\n        currentInput &&\r\n\r\n        // only if the input is `keyboard`\r\n        value === 'keyboard' &&\r\n\r\n        // not if the key is `TAB`\r\n        keyMap[eventKey] !== 'tab' &&\r\n\r\n        // only if the target is a form input that accepts text\r\n        (\r\n           eventTargetNode === 'textarea' ||\r\n           eventTargetNode === 'select' ||\r\n           (eventTargetNode === 'input' && nonTypingInputs.indexOf(eventTargetType) < 0)\r\n        )) || (\r\n          // ignore modifier keys\r\n          ignoreMap.indexOf(eventKey) > -1\r\n        )\r\n      ) {\r\n        // ignore keyboard typing\r\n      } else {\r\n        switchInput(value);\r\n      }\r\n    }\r\n\r\n    if (value === 'keyboard') logKeys(eventKey);\r\n  }\r\n\r\n  function switchInput(string) {\r\n    currentInput = string;\r\n    body.setAttribute('data-whatinput', currentInput);\r\n\r\n    if (inputTypes.indexOf(currentInput) === -1) inputTypes.push(currentInput);\r\n  }\r\n\r\n  function key(event) {\r\n    return (event.keyCode) ? event.keyCode : event.which;\r\n  }\r\n\r\n  function target(event) {\r\n    return event.target || event.srcElement;\r\n  }\r\n\r\n  function pointerType(event) {\r\n    if (typeof event.pointerType === 'number') {\r\n      return pointerMap[event.pointerType];\r\n    } else {\r\n      return (event.pointerType === 'pen') ? 'touch' : event.pointerType; // treat pen like touch\r\n    }\r\n  }\r\n\r\n  // keyboard logging\r\n  function logKeys(eventKey) {\r\n    if (activeKeys.indexOf(keyMap[eventKey]) === -1 && keyMap[eventKey]) activeKeys.push(keyMap[eventKey]);\r\n  }\r\n\r\n  function unLogKeys(event) {\r\n    var eventKey = key(event);\r\n    var arrayPos = activeKeys.indexOf(keyMap[eventKey]);\r\n\r\n    if (arrayPos !== -1) activeKeys.splice(arrayPos, 1);\r\n  }\r\n\r\n  function bindEvents() {\r\n    body = document.body;\r\n\r\n    // pointer events (mouse, pen, touch)\r\n    if (window.PointerEvent) {\r\n      body.addEventListener('pointerdown', bufferedEvent);\r\n      body.addEventListener('pointermove', bufferedEvent);\r\n    } else if (window.MSPointerEvent) {\r\n      body.addEventListener('MSPointerDown', bufferedEvent);\r\n      body.addEventListener('MSPointerMove', bufferedEvent);\r\n    } else {\r\n\r\n      // mouse events\r\n      body.addEventListener('mousedown', bufferedEvent);\r\n      body.addEventListener('mousemove', bufferedEvent);\r\n\r\n      // touch events\r\n      if ('ontouchstart' in window) {\r\n        body.addEventListener('touchstart', eventBuffer);\r\n      }\r\n    }\r\n\r\n    // mouse wheel\r\n    body.addEventListener(mouseWheel, bufferedEvent);\r\n\r\n    // keyboard events\r\n    body.addEventListener('keydown', unBufferedEvent);\r\n    body.addEventListener('keyup', unBufferedEvent);\r\n    document.addEventListener('keyup', unLogKeys);\r\n  }\r\n\r\n\r\n  /*\r\n    ---------------\r\n    utilities\r\n    ---------------\r\n  */\r\n\r\n  // detect version of mouse wheel event to use\r\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n  function detectWheel() {\r\n    return mouseWheel = 'onwheel' in document.createElement('div') ?\r\n      'wheel' : // Modern browsers support \"wheel\"\r\n\r\n      document.onmousewheel !== undefined ?\r\n        'mousewheel' : // Webkit and IE support at least \"mousewheel\"\r\n        'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\r\n  }\r\n\r\n\r\n  /*\r\n    ---------------\r\n    init\r\n\r\n    don't start script unless browser cuts the mustard,\r\n    also passes if polyfills are used\r\n    ---------------\r\n  */\r\n\r\n  if (\r\n    'addEventListener' in window &&\r\n    Array.prototype.indexOf\r\n  ) {\r\n\r\n    // if the dom is already ready already (script was placed at bottom of <body>)\r\n    if (document.body) {\r\n      bindEvents();\r\n\r\n    // otherwise wait for the dom to load (script was placed in the <head>)\r\n    } else {\r\n      document.addEventListener('DOMContentLoaded', bindEvents);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n    ---------------\r\n    api\r\n    ---------------\r\n  */\r\n\r\n  return {\r\n\r\n    // returns string: the current input type\r\n    ask: function() { return currentInput; },\r\n\r\n    // returns array: currently pressed keys\r\n    keys: function() { return activeKeys; },\r\n\r\n    // returns array: all the detected input types\r\n    types: function() { return inputTypes; },\r\n\r\n    // accepts string: manually set the input type\r\n    set: switchInput\r\n  };\r\n\r\n}());\r\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var Sage = {\n    // All pages\n    'common': {\n      init: function() {\n        // JavaScript to be fired on all pages\n\n        $(document).foundation(); // Foundation JavaScript\n        \n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    // Home page\n    'home': {\n      init: function() {\n        // JavaScript to be fired on the home page\n      },\n      finalize: function() {\n        // JavaScript to be fired on the home page, after the init JS\n      }\n    },\n    // About us page, note the change from about-us to about_us.\n    'about_us': {\n      init: function() {\n        // JavaScript to be fired on the about us page\n      }\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {\n    fire: function(func, funcname, args) {\n      var fire;\n      var namespace = Sage;\n      funcname = (funcname === undefined) ? 'init' : funcname;\n      fire = func !== '';\n      fire = fire && namespace[func];\n      fire = fire && typeof namespace[func][funcname] === 'function';\n\n      if (fire) {\n        namespace[func][funcname](args);\n      }\n    },\n    loadEvents: function() {\n      // Fire common init JS\n      UTIL.fire('common');\n\n      // Fire page-specific init JS, and then finalize JS\n      $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n        UTIL.fire(classnm);\n        UTIL.fire(classnm, 'finalize');\n      });\n\n      // Fire common finalize JS\n      UTIL.fire('common', 'finalize');\n    }\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n\n\n\n\n\n// ====================== smooth scroll anchor ================\n\n  // jQuery(function() {\n  //   jQuery('.scrolldown').click(function() {\n  //     if (location.pathname.replace(/^\\//,'') === this.pathname.replace(/^\\//,'') && location.hostname === this.hostname) {\n  //       var target = jQuery(this.hash);\n  //       target = target.length ? target : jQuery('[name=' + this.hash.slice(1) +']');\n  //       if (target.length) {\n  //         jQuery('html,body').animate({\n  //           scrollTop: target.offset().top - 80\n  //         }, 1000);\n  //         return false;\n  //       } \n  //     }\n  //   });\n  // });\n\n// ====================== end smooth scroll anchor ================ \n\n\n\njQuery(document).ready(function(){      // global document.ready\n\n\n\n});\n\njQuery(document).ready(function(){  \n // wordpress admin panel \n    jQuery('html').attr('style', 'margin-top: 0!important');\n    jQuery('#wpadminbar').addClass('overflow');\n    var hide;\n    jQuery('#wpadminbar').on('mouseover', function(){\n      setTimeout(function(){\n        jQuery('#wpadminbar').removeClass('overflow');\n      },1000);\n      if(!jQuery('#wpadminbar').hasClass('open')){\n        jQuery('#wpadminbar').addClass('open overflow');\n      } else{\n        clearTimeout(hide);\n      }\n    });\n    jQuery('#wpadminbar').on('mouseleave', function(){\n      hide = setTimeout(function(){\n        jQuery('#wpadminbar').addClass('overflow');\n        jQuery('#wpadminbar').removeClass('open');\n      },2000);\n    });\n  // end wordpress admin panel\n});\n\n\n\n\n\n\n"],"sourceRoot":"assets/scripts/"}